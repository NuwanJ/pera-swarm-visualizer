{"version":3,"sources":["webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/label.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/helpers/vertexNormalsHelper.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/loaders/GLTFLoader.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["scale","arena","size","minX","maxX","minY","maxY","mqtt","server","port","path","user","password","channel","mixedReality","obstacles","robots","selectedReality","isDev","isShowingStats","isShowingLables","isShowingObstacleLables","isShowingRobotLables","isShowingRobotSnapshots","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","fov","far","aspect","posX","posY","posZ","controls","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","Infinity","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","target","x","y","z","ambientLight","enabled","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","top","right","bottom","left","pointLight","distance","hemiLight","groundColor","canvas","window","CanvasRenderingContext2D","webgl","document","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Renderer","scene","container","threeRenderer","THREE","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","shadowMap","type","Config","capabilities","getMaxAnisotropy","updateSize","addEventListener","setSize","offsetWidth","offsetHeight","render","addLabel","prefix","object","className","textContent","marginTop","elementLabel","CSS2DObject","position","set","add","removeLabel","remove","Camera","renderer","height","threeCamera","up","updateProjectionMatrix","Light","init","visible","castShadow","mapSize","directionalLightHelper","lightName","Controls","threeControls","OrbitControls","enableRotate","Environment","console","log","scene_scale","geometry","depthWrite","userData","originalColor","ground","receiveShadow","grid","rotation","opacity","transparent","_v1","Vector3","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","hex","nNormals","objGeometry","isGeometry","faces","length","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","call","LineBasicMaterial","toneMapped","matrixAutoUpdate","update","prototype","Object","create","constructor","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","copy","applyMatrix4","applyMatrix3","normalize","multiplyScalar","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","edges","edgesLine","vertexHelper","boxHelper","Helpers","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","round","error","value","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","keys","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","get","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","angle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","Vector2","BINARY_EXTENSION_CHUNK_TYPES","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","clone","offset","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","event","onKeyChange","onBlur","removeEventListener","prop","keyCode","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","throttle","onMouseMove","onMouseLeave","onMouseOver","eventMatches","preventDefault","realities","physical","virtual","mixed","DatGUI","main","gui","dat","GUI","model","meshHelper","labelsFolder","addFolder","onChange","toggleLabels","realityFolder","listen","toggleReality","open","variable","startsWith","reality","selected","attrib","show","destroy","Obstacle","callback","entries","obs","obstacle","createGeometry","random","deleteIfExists","calculateZ","radX","radY","radZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","obj","STLLoader","require","Robot","R","G","B","ambient","r","setRGB","heading","REALITY","DEG2RAD","clickEvent","robot","alert","setReality","move","currentHeading","newHeading","rotationFlag","sqrt","pow","Tween","to","onUpdate","onComplete","delay","start","disp","querySelector","display","MQTTClient","updateChannel","client_id","toString","substring","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","publish","onMessageArrived","onConnectionLost","onFailure","channelHash","location","hash","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","destinationName","topic","exists","createList","deleteAll","changeColor","reload","subTopic","message","payload","Message","pubTopic","send","INTERSECTED","raycaster","mouse","Main","clock","place","stats","Stats","dom","labelRenderer","CSS2DRenderer","innerWidth","innerHeight","environment","item","enable","onDocumentMouseMove","clientX","clientY","setFromCamera","intersects","intersectObjects","currentOpacity","hidden","requestAnimationFrame","Detector","getElementById"],"mappings":"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","file":"0.app.js","sourcesContent":["import TWEEN from '@tweenjs/tween.js';\n\n// This object contains the state of the app\nexport default {\n    scale: 1,\n    arena: {\n        size: 300,\n        minX: -140,\n        maxX: 140,\n        minY: -140,\n        maxY: 140\n    },\n    mqtt: {\n        server: 'swarm-gui.tk',\n        port: 8883,\n        path: '/socket.io',\n        user: 'swarm_user',\n        password: 'swarm_usere15',\n        channel: 'v1'\n    },\n    mixedReality: {\n        obstacles: 'M',\n        robots: 'M'\n    },\n    selectedReality: 'M',\n    isDev: true,\n    isShowingStats: true,\n    isShowingLables: true,\n    isShowingObstacleLables: true,\n    isShowingRobotLables: true,\n    isShowingRobotSnapshots: true,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport Config from '../../data/config';\n\nexport default function () {\n    let renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    renderer.isShowingLables = Config.isShowingLables;\n    renderer.isShowingObstacleLables = Config.isShowingObstacleLables;\n    renderer.isShowingRobotLables = Config.isShowingRobotLables;\n    return renderer;\n}\n\nexport const addLabel = (prefix, object, mesh) => {\n    if (mesh !== undefined) {\n        let element = document.createElement('div');\n        element.className = 'label';\n        element.textContent = `${prefix}[${object.id}]`;\n        element.style.marginTop = '-1.2em';\n        const elementLabel = new CSS2DObject(element);\n        elementLabel.name = `Label[${object.id}]`;\n        elementLabel.position.set(0, 1, 0);\n        mesh.add(elementLabel);\n        mesh.removeLabel = () => {\n            mesh.remove(elementLabel);\n        }\n    }\n};\n\nexport const removeLabel = (mesh) => {\n    if(mesh !== undefined && mesh.removeLabel !== undefined) {\n        mesh.removeLabel();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n    constructor(renderer) {\n        const width = renderer.domElement.width;\n        const height = renderer.domElement.height;\n\n        // Create and position a Perspective Camera\n        this.threeCamera = new THREE.PerspectiveCamera(\n            Config.camera.fov,\n            width / height,\n            Config.camera.near,\n            Config.camera.far\n        );\n        this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\n        this.threeCamera.up.set(0, 0, 1);\n\n        // Initial sizing\n        this.updateSize(renderer);\n\n        // Listeners\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\n    }\n\n    updateSize(renderer) {\n        // Update camera aspect ratio with window aspect ratio\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n        // Always call updateProjectionMatrix on camera change\n        this.threeCamera.updateProjectionMatrix();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import * as THREE from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n    constructor(camera, container) {\n        this.threeControls = new OrbitControls(camera, container);\n\n        this.init();\n    }\n\n    init() {\n        this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\n        this.threeControls.autoRotate = Config.controls.autoRotate;\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n        this.threeControls.minDistance = Config.controls.minDistance;\n        this.threeControls.maxDistance = Config.controls.maxDistance;\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n        this.threeControls.enableDamping = Config.controls.enableDamping;\n        this.threeControls.enableZoom = Config.controls.enableZoom;\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\n\n        this.threeControls.enableRotate = true;\n        this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\n        this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\n\n        /*this.threeControls.mouseButtons = {\n            LEFT: THREE.MOUSE.ROTATE,\n            MIDDLE: THREE.MOUSE.DOLLY,\n            RIGHT: THREE.MOUSE.PAN\n        }*/\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        var material = new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n        material.userData.originalColor = new THREE.Color(0x999999);\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\n        ground.position.set(0, 0, 0);\n        ground.receiveShadow = true;\n        scene.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 30, 0x000000, 0x5b5b5b);\n        grid.rotation.x = -Math.PI / 2;\n        grid.scale.set(scene_scale, scene_scale, scene_scale);\n        grid.position.set(0, 0, 0);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        scene.add(grid);\n    }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nconst _keys = ['a', 'b', 'c'];\n\nfunction VertexNormalsHelper(object, size, hex) {\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n\n    const color = hex !== undefined ? hex : 0xff0000;\n\n    //\n\n    let nNormals = 0;\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        nNormals = objGeometry.attributes.normal.count;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n\n    geometry.setAttribute('position', positions);\n\n    LineSegments.call(this, geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n    let idx;\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        const vertices = objGeometry.vertices;\n\n        const faces = objGeometry.faces;\n\n        idx = 0;\n\n        for (let i = 0, l = faces.length; i < l; i++) {\n            const face = faces[i];\n\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                const vertex = vertices[face[_keys[j]]];\n                const normal = face.vertexNormals[j];\n\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\n                _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n                idx = idx + 1;\n\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n                idx = idx + 1;\n            }\n        }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        const objPos = objGeometry.attributes.position;\n        const objNorm = objGeometry.attributes.normal;\n\n        idx = 0;\n\n        // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n            _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n            idx = idx + 1;\n\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n            idx = idx + 1;\n        }\n    }\n\n    position.needsUpdate = true;\n};\n\nexport { VertexNormalsHelper };\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\n// Promise polyfill for IE\nimport { Promise } from 'es6-promise';\n\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\n// Using promises to preload textures prevents issues when applying textures to materials\n// before the textures have loaded.\nexport default class Texture {\n    constructor() {\n        // Prop that will contain all loaded textures\n        this.textures = {};\n    }\n\n    load() {\n        const loader = new THREE.TextureLoader();\n        const maxAnisotropy = Config.maxAnisotropy;\n        const imageFiles = Config.texture.imageFiles;\n        const promiseArray = [];\n\n        loader.setPath(Config.texture.path);\n\n        imageFiles.forEach((imageFile) => {\n            // Add an individual Promise for each image in array\n            promiseArray.push(\n                new Promise((resolve, reject) => {\n                    // Each Promise will attempt to load the image file\n                    loader.load(\n                        imageFile.image,\n                        // This gets called on load with the loaded texture\n                        (texture) => {\n                            texture.anisotropy = maxAnisotropy;\n\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\n                            const modelOBJ = {};\n                            modelOBJ[imageFile.name] = texture;\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture) resolve(modelOBJ);\n                        },\n                        Helpers.logProgress(),\n                        (xhr) => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\n                    );\n                })\n            );\n        });\n\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\n        return Promise.all(promiseArray).then(\n            (textures) => {\n                // Set the textures prop object to have name be the resolved texture\n                for (let i = 0; i < textures.length; i++) {\n                    this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\n                }\n            },\n            (reason) => console.log(reason)\n        );\n    }\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    AnimationClip,\n    Bone,\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    ClampToEdgeWrapping,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    FileLoader,\n    FrontSide,\n    Group,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Interpolant,\n    InterpolateDiscrete,\n    InterpolateLinear,\n    Line,\n    LineBasicMaterial,\n    LineLoop,\n    LineSegments,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipmapNearestFilter,\n    Loader,\n    LoaderUtils,\n    Material,\n    MathUtils,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    MeshPhysicalMaterial,\n    MeshStandardMaterial,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    NumberKeyframeTrack,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Points,\n    PointsMaterial,\n    PropertyBinding,\n    QuaternionKeyframeTrack,\n    RGBAFormat,\n    RGBFormat,\n    RepeatWrapping,\n    Skeleton,\n    SkinnedMesh,\n    Sphere,\n    SpotLight,\n    TangentSpaceNormalMap,\n    TextureLoader,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    Vector2,\n    Vector3,\n    VectorKeyframeTrack,\n    sRGBEncoding\n} from 'three';\n\nconst GLTFLoader = (function () {\n    function GLTFLoader(manager) {\n        Loader.call(this, manager);\n\n        this.dracoLoader = null;\n        this.ddsLoader = null;\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n        constructor: GLTFLoader,\n\n        load: function (url, onLoad, onProgress, onError) {\n            var scope = this;\n\n            var resourcePath;\n\n            if (this.resourcePath !== '') {\n                resourcePath = this.resourcePath;\n            } else if (this.path !== '') {\n                resourcePath = this.path;\n            } else {\n                resourcePath = LoaderUtils.extractUrlBase(url);\n            }\n\n            // Tells the LoadingManager to track an extra item, which resolves after\n            // the model is fully loaded. This means the count of items loaded will\n            // be incorrect, but ensures manager.onLoad() does not fire early.\n            scope.manager.itemStart(url);\n\n            var _onError = function (e) {\n                if (onError) {\n                    onError(e);\n                } else {\n                    console.error(e);\n                }\n\n                scope.manager.itemError(url);\n                scope.manager.itemEnd(url);\n            };\n\n            var loader = new FileLoader(scope.manager);\n\n            loader.setPath(this.path);\n            loader.setResponseType('arraybuffer');\n\n            if (scope.crossOrigin === 'use-credentials') {\n                loader.setWithCredentials(true);\n            }\n\n            loader.load(\n                url,\n                function (data) {\n                    try {\n                        scope.parse(\n                            data,\n                            resourcePath,\n                            function (gltf) {\n                                onLoad(gltf);\n\n                                scope.manager.itemEnd(url);\n                            },\n                            _onError\n                        );\n                    } catch (e) {\n                        _onError(e);\n                    }\n                },\n                onProgress,\n                _onError\n            );\n        },\n\n        setDRACOLoader: function (dracoLoader) {\n            this.dracoLoader = dracoLoader;\n            return this;\n        },\n\n        setDDSLoader: function (ddsLoader) {\n            this.ddsLoader = ddsLoader;\n            return this;\n        },\n\n        parse: function (data, path, onLoad, onError) {\n            var content;\n            var extensions = {};\n\n            if (typeof data === 'string') {\n                content = data;\n            } else {\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n                    try {\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n                    } catch (error) {\n                        if (onError) onError(error);\n                        return;\n                    }\n\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n                } else {\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\n                }\n            }\n\n            var json = JSON.parse(content);\n\n            if (json.asset === undefined || json.asset.version[0] < 2) {\n                if (onError)\n                    onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n                return;\n            }\n\n            if (json.extensionsUsed) {\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\n                    var extensionName = json.extensionsUsed[i];\n                    var extensionsRequired = json.extensionsRequired || [];\n\n                    switch (extensionName) {\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                            extensions[extensionName] = new GLTFLightsExtension(json);\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n                            extensions[extensionName] = new GLTFMaterialsClearcoatExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                            extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n                            break;\n\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\n                            extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n                            break;\n\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                            extensions[extensionName] = new GLTFTextureTransformExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                            extensions[extensionName] = new GLTFMeshQuantizationExtension();\n                            break;\n\n                        default:\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\n                                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n                            }\n                    }\n                }\n            }\n\n            var parser = new GLTFParser(json, extensions, {\n                path: path || this.resourcePath || '',\n                crossOrigin: this.crossOrigin,\n                manager: this.manager\n            });\n\n            parser.parse(onLoad, onError);\n        }\n    });\n\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n        var objects = {};\n\n        return {\n            get: function (key) {\n                return objects[key];\n            },\n\n            add: function (key, object) {\n                objects[key] = object;\n            },\n\n            remove: function (key) {\n                delete objects[key];\n            },\n\n            removeAll: function () {\n                objects = {};\n            }\n        };\n    }\n\n    /*********************************/\n    /********** EXTENSIONS ***********/\n    /*********************************/\n\n    var EXTENSIONS = {\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n    function GLTFTextureDDSExtension(ddsLoader) {\n        if (!ddsLoader) {\n            throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n        }\n\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n        this.ddsLoader = ddsLoader;\n    }\n\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n    function GLTFLightsExtension(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n        this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n        var lightDef = this.lightDefs[lightIndex];\n        var lightNode;\n\n        var color = new Color(0xffffff);\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n        switch (lightDef.type) {\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                lightNode.distance = range;\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.distance = range;\n                // Handle spotlight properties.\n                lightDef.spot = lightDef.spot || {};\n                lightDef.spot.innerConeAngle =\n                    lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n                lightDef.spot.outerConeAngle =\n                    lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n                lightNode.angle = lightDef.spot.outerConeAngle;\n                lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            default:\n                throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n        }\n\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n        // here, because node-level parsing will only override position if explicitly specified.\n        lightNode.position.set(0, 0, 0);\n\n        lightNode.decay = 2;\n\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\n\n        return Promise.resolve(lightNode);\n    };\n\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n    function GLTFMaterialsUnlitExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n        return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        if (metallicRoughness) {\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n    function GLTFMaterialsClearcoatExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n        return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        var extension = materialDef.extensions[this.name];\n\n        if (extension.clearcoatFactor !== undefined) {\n            materialParams.clearcoat = extension.clearcoatFactor;\n        }\n\n        if (extension.clearcoatTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n        }\n\n        if (extension.clearcoatRoughnessFactor !== undefined) {\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n        }\n\n        if (extension.clearcoatRoughnessTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture)\n            );\n        }\n\n        if (extension.clearcoatNormalTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\n                var scale = extension.clearcoatNormalTexture.scale;\n\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /* BINARY EXTENSION */\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n    function GLTFBinaryExtension(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n        } else if (this.header.version < 2.0) {\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n                this.content = LoaderUtils.decodeText(contentArray);\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n        }\n\n        if (this.content === null) {\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\n        }\n    }\n\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n        if (!dracoLoader) {\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n        }\n\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n        this.json = json;\n        this.dracoLoader = dracoLoader;\n        this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n        var json = this.json;\n        var dracoLoader = this.dracoLoader;\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\n        var threeAttributeMap = {};\n        var attributeNormalizedMap = {};\n        var attributeTypeMap = {};\n\n        for (var attributeName in gltfAttributeMap) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n        }\n\n        for (attributeName in primitive.attributes) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            if (gltfAttributeMap[attributeName] !== undefined) {\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n                attributeTypeMap[threeAttributeName] = componentType;\n                attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n            }\n        }\n\n        return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n            return new Promise(function (resolve) {\n                dracoLoader.decodeDracoFile(\n                    bufferView,\n                    function (geometry) {\n                        for (var attributeName in geometry.attributes) {\n                            var attribute = geometry.attributes[attributeName];\n                            var normalized = attributeNormalizedMap[attributeName];\n\n                            if (normalized !== undefined) attribute.normalized = normalized;\n                        }\n\n                        resolve(geometry);\n                    },\n                    threeAttributeMap,\n                    attributeTypeMap\n                );\n            });\n        });\n    };\n\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n    function GLTFTextureTransformExtension() {\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n        texture = texture.clone();\n\n        if (transform.offset !== undefined) {\n            texture.offset.fromArray(transform.offset);\n        }\n\n        if (transform.rotation !== undefined) {\n            texture.rotation = transform.rotation;\n        }\n\n        if (transform.scale !== undefined) {\n            texture.repeat.fromArray(transform.scale);\n        }\n\n        if (transform.texCoord !== undefined) {\n            console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n        }\n\n        texture.needsUpdate = true;\n\n        return texture;\n    };\n\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n    function GLTFMeshStandardSGMaterial(params) {\n        MeshStandardMaterial.call(this);\n\n        this.isGLTFSpecularGlossinessMaterial = true;\n\n        //various chunks that need replacing\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\n            '\\n'\n        );\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n            'material.specularRoughness += geometryRoughness;',\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n            'material.specularColor = specularFactor.rgb;'\n        ].join('\\n');\n\n        var uniforms = {\n            specular: { value: new Color().setHex(0xffffff) },\n            glossiness: { value: 1 },\n            specularMap: { value: null },\n            glossinessMap: { value: null }\n        };\n\n        this._extraUniforms = uniforms;\n\n        // please see #14031 or #13198 for an alternate approach\n        this.onBeforeCompile = function (shader) {\n            for (var uniformName in uniforms) {\n                shader.uniforms[uniformName] = uniforms[uniformName];\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float metalness;',\n                'uniform float glossiness;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_pars_fragment>',\n                specularMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_pars_fragment>',\n                glossinessMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_fragment>',\n                specularMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_fragment>',\n                glossinessMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <lights_physical_fragment>',\n                lightPhysicalFragmentChunk\n            );\n        };\n\n        /*eslint-disable*/\n        Object.defineProperties(this, {\n            specular: {\n                get: function () {\n                    return uniforms.specular.value;\n                },\n                set: function (v) {\n                    uniforms.specular.value = v;\n                }\n            },\n            specularMap: {\n                get: function () {\n                    return uniforms.specularMap.value;\n                },\n                set: function (v) {\n                    uniforms.specularMap.value = v;\n                }\n            },\n            glossiness: {\n                get: function () {\n                    return uniforms.glossiness.value;\n                },\n                set: function (v) {\n                    uniforms.glossiness.value = v;\n                }\n            },\n            glossinessMap: {\n                get: function () {\n                    return uniforms.glossinessMap.value;\n                },\n                set: function (v) {\n                    uniforms.glossinessMap.value = v;\n                    //how about something like this - @pailhead\n                    if (v) {\n                        this.defines.USE_GLOSSINESSMAP = '';\n                        // set USE_ROUGHNESSMAP to enable vUv\n                        this.defines.USE_ROUGHNESSMAP = '';\n                    } else {\n                        delete this.defines.USE_ROUGHNESSMAP;\n                        delete this.defines.USE_GLOSSINESSMAP;\n                    }\n                }\n            }\n        });\n\n        /*eslint-enable*/\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n\n        this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n        MeshStandardMaterial.prototype.copy.call(this, source);\n        this.specularMap = source.specularMap;\n        this.specular.copy(source.specular);\n        this.glossinessMap = source.glossinessMap;\n        this.glossiness = source.glossiness;\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n        return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n        return {\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n            specularGlossinessParams: [\n                'color',\n                'map',\n                'lightMap',\n                'lightMapIntensity',\n                'aoMap',\n                'aoMapIntensity',\n                'emissive',\n                'emissiveIntensity',\n                'emissiveMap',\n                'bumpMap',\n                'bumpScale',\n                'normalMap',\n                'normalMapType',\n                'displacementMap',\n                'displacementScale',\n                'displacementBias',\n                'specularMap',\n                'specular',\n                'glossinessMap',\n                'glossiness',\n                'alphaMap',\n                'envMap',\n                'envMapIntensity',\n                'refractionRatio'\n            ],\n\n            getMaterialType: function () {\n                return GLTFMeshStandardSGMaterial;\n            },\n\n            extendParams: function (materialParams, materialDef, parser) {\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n                materialParams.color = new Color(1.0, 1.0, 1.0);\n                materialParams.opacity = 1.0;\n\n                var pending = [];\n\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n                    var array = pbrSpecularGlossiness.diffuseFactor;\n\n                    materialParams.color.fromArray(array);\n                    materialParams.opacity = array[3];\n                }\n\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n                    pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n                }\n\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\n                materialParams.glossiness =\n                    pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n                    materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n                    pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n                    pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n                }\n\n                return Promise.all(pending);\n            },\n\n            createMaterial: function (materialParams) {\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\n                material.fog = true;\n\n                material.color = materialParams.color;\n\n                material.map = materialParams.map === undefined ? null : materialParams.map;\n\n                material.lightMap = null;\n                material.lightMapIntensity = 1.0;\n\n                material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n                material.aoMapIntensity = 1.0;\n\n                material.emissive = materialParams.emissive;\n                material.emissiveIntensity = 1.0;\n                material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n                material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n                material.bumpScale = 1;\n\n                material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n                material.normalMapType = TangentSpaceNormalMap;\n\n                if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n\n                material.displacementMap = null;\n                material.displacementScale = 1;\n                material.displacementBias = 0;\n\n                material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n                material.specular = materialParams.specular;\n\n                material.glossinessMap =\n                    materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n                material.glossiness = materialParams.glossiness;\n\n                material.alphaMap = null;\n\n                material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n                material.envMapIntensity = 1.0;\n\n                material.refractionRatio = 0.98;\n\n                return material;\n            }\n        };\n    }\n\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n    function GLTFMeshQuantizationExtension() {\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n\n    /*********************************/\n    /********** INTERPOLATION ********/\n    /*********************************/\n\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n        Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n        // Copies a sample value to the result buffer. See description of glTF\n        // CUBICSPLINE values layout in interpolate_() function below.\n\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            valueSize = this.valueSize,\n            offset = index * valueSize * 3 + valueSize;\n\n        for (var i = 0; i !== valueSize; i++) {\n            result[i] = values[offset + i];\n        }\n\n        return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n        var result = this.resultBuffer;\n        var values = this.sampleValues;\n        var stride = this.valueSize;\n\n        var stride2 = stride * 2;\n        var stride3 = stride * 3;\n\n        var td = t1 - t0;\n\n        var p = (t - t0) / td;\n        var pp = p * p;\n        var ppp = pp * p;\n\n        var offset1 = i1 * stride3;\n        var offset0 = offset1 - stride3;\n\n        var s2 = -2 * ppp + 3 * pp;\n        var s3 = ppp - pp;\n        var s0 = 1 - s2;\n        var s1 = s3 - pp + p;\n\n        // Layout of keyframe output values for CUBICSPLINE animations:\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n        for (var i = 0; i !== stride; i++) {\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n        }\n\n        return result;\n    };\n\n    /*********************************/\n    /********** INTERNALS ************/\n    /*********************************/\n\n    /* CONSTANTS */\n\n    var WEBGL_CONSTANTS = {\n        FLOAT: 5126,\n        //FLOAT_MAT2: 35674,\n        FLOAT_MAT3: 35675,\n        FLOAT_MAT4: 35676,\n        FLOAT_VEC2: 35664,\n        FLOAT_VEC3: 35665,\n        FLOAT_VEC4: 35666,\n        LINEAR: 9729,\n        REPEAT: 10497,\n        SAMPLER_2D: 35678,\n        POINTS: 0,\n        LINES: 1,\n        LINE_LOOP: 2,\n        LINE_STRIP: 3,\n        TRIANGLES: 4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN: 6,\n        UNSIGNED_BYTE: 5121,\n        UNSIGNED_SHORT: 5123\n    };\n\n    var WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    var WEBGL_FILTERS = {\n        9728: NearestFilter,\n        9729: LinearFilter,\n        9984: NearestMipmapNearestFilter,\n        9985: LinearMipmapNearestFilter,\n        9986: NearestMipmapLinearFilter,\n        9987: LinearMipmapLinearFilter\n    };\n\n    var WEBGL_WRAPPINGS = {\n        33071: ClampToEdgeWrapping,\n        33648: MirroredRepeatWrapping,\n        10497: RepeatWrapping\n    };\n\n    var WEBGL_TYPE_SIZES = {\n        SCALAR: 1,\n        VEC2: 2,\n        VEC3: 3,\n        VEC4: 4,\n        MAT2: 4,\n        MAT3: 9,\n        MAT4: 16\n    };\n\n    var ATTRIBUTES = {\n        POSITION: 'position',\n        NORMAL: 'normal',\n        TANGENT: 'tangent',\n        TEXCOORD_0: 'uv',\n        TEXCOORD_1: 'uv2',\n        COLOR_0: 'color',\n        WEIGHTS_0: 'skinWeight',\n        JOINTS_0: 'skinIndex'\n    };\n\n    var PATH_PROPERTIES = {\n        scale: 'scale',\n        translation: 'position',\n        rotation: 'quaternion',\n        weights: 'morphTargetInfluences'\n    };\n\n    var INTERPOLATION = {\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n        // keyframe track will be initialized with a default interpolation type, then modified.\n        LINEAR: InterpolateLinear,\n        STEP: InterpolateDiscrete\n    };\n\n    var ALPHA_MODES = {\n        OPAQUE: 'OPAQUE',\n        MASK: 'MASK',\n        BLEND: 'BLEND'\n    };\n\n    var MIME_TYPE_FORMATS = {\n        'image/png': RGBAFormat,\n        'image/jpeg': RGBFormat\n    };\n\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return '';\n\n        // Host Relative URL\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n            // eslint-disable-next-line no-useless-escape\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) return url;\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) return url;\n\n        // Relative URL\n        return path + url;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n    function createDefaultMaterial(cache) {\n        if (cache['DefaultMaterial'] === undefined) {\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\n                color: 0xffffff,\n                emissive: 0x000000,\n                metalness: 1,\n                roughness: 1,\n                transparent: false,\n                depthTest: true,\n                side: FrontSide\n            });\n        }\n\n        return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n        // Add unknown glTF extensions to an object's userData.\n\n        for (var name in objectDef.extensions) {\n            if (knownExtensions[name] === undefined) {\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\n            }\n        }\n    }\n\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n    function assignExtrasToUserData(object, gltfDef) {\n        if (gltfDef.extras !== undefined) {\n            if (typeof gltfDef.extras === 'object') {\n                Object.assign(object.userData, gltfDef.extras);\n            } else {\n                console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n            }\n        }\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addMorphTargets(geometry, targets, parser) {\n        var hasMorphPosition = false;\n        var hasMorphNormal = false;\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (target.POSITION !== undefined) hasMorphPosition = true;\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\n\n            if (hasMorphPosition && hasMorphNormal) break;\n        }\n\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n        var pendingPositionAccessors = [];\n        var pendingNormalAccessors = [];\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (hasMorphPosition) {\n                var pendingAccessor =\n                    target.POSITION !== undefined\n                        ? parser.getDependency('accessor', target.POSITION)\n                        : geometry.attributes.position;\n\n                pendingPositionAccessors.push(pendingAccessor);\n            }\n\n            if (hasMorphNormal) {\n                var pendingAccessor =\n                    target.NORMAL !== undefined\n                        ? parser.getDependency('accessor', target.NORMAL)\n                        : geometry.attributes.normal;\n\n                pendingNormalAccessors.push(pendingAccessor);\n            }\n        }\n\n        return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\n            accessors\n        ) {\n            var morphPositions = accessors[0];\n            var morphNormals = accessors[1];\n\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n            geometry.morphTargetsRelative = true;\n\n            return geometry;\n        });\n    }\n\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n    function updateMorphTargets(mesh, meshDef) {\n        mesh.updateMorphTargets();\n\n        if (meshDef.weights !== undefined) {\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\n            }\n        }\n\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n            var targetNames = meshDef.extras.targetNames;\n\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\n                mesh.morphTargetDictionary = {};\n\n                for (var i = 0, il = targetNames.length; i < il; i++) {\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\n                }\n            } else {\n                console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n            }\n        }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n        var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n        var geometryKey;\n\n        if (dracoExtension) {\n            geometryKey =\n                'draco:' +\n                dracoExtension.bufferView +\n                ':' +\n                dracoExtension.indices +\n                ':' +\n                createAttributesKey(dracoExtension.attributes);\n        } else {\n            geometryKey =\n                primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n        }\n\n        return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n        var attributesKey = '';\n\n        var keys = Object.keys(attributes).sort();\n\n        for (var i = 0, il = keys.length; i < il; i++) {\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n        }\n\n        return attributesKey;\n    }\n\n    /* GLTF PARSER */\n\n    function GLTFParser(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n\n        // BufferGeometry caching\n        this.primitiveCache = {};\n\n        this.textureLoader = new TextureLoader(this.options.manager);\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n        this.fileLoader = new FileLoader(this.options.manager);\n        this.fileLoader.setResponseType('arraybuffer');\n\n        if (this.options.crossOrigin === 'use-credentials') {\n            this.fileLoader.setWithCredentials(true);\n        }\n    }\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Mark the special nodes/meshes in json for efficient parse\n        this.markDefs();\n\n        Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\n            .then(function (dependencies) {\n                var result = {\n                    scene: dependencies[0][json.scene || 0],\n                    scenes: dependencies[0],\n                    animations: dependencies[1],\n                    cameras: dependencies[2],\n                    asset: json.asset,\n                    parser: parser,\n                    userData: {}\n                };\n\n                addUnknownExtensionsToUserData(extensions, result, json);\n\n                assignExtrasToUserData(result, json);\n\n                onLoad(result);\n            })\n            .catch(onError);\n    };\n\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n    GLTFParser.prototype.markDefs = function () {\n        var nodeDefs = this.json.nodes || [];\n        var skinDefs = this.json.skins || [];\n        var meshDefs = this.json.meshes || [];\n\n        var meshReferences = {};\n        var meshUses = {};\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n            var joints = skinDefs[skinIndex].joints;\n\n            for (var i = 0, il = joints.length; i < il; i++) {\n                nodeDefs[joints[i]].isBone = true;\n            }\n        }\n\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n        // avoid having more than one Mesh with the same name, count\n        // references and rename instances below.\n        //\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n        for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n            var nodeDef = nodeDefs[nodeIndex];\n\n            if (nodeDef.mesh !== undefined) {\n                if (meshReferences[nodeDef.mesh] === undefined) {\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n                }\n\n                meshReferences[nodeDef.mesh]++;\n\n                // Nothing in the mesh definition indicates whether it is\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\n                // to mark SkinnedMesh if node has skin.\n                if (nodeDef.skin !== undefined) {\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n                }\n            }\n        }\n\n        this.json.meshReferences = meshReferences;\n        this.json.meshUses = meshUses;\n    };\n\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n    GLTFParser.prototype.getDependency = function (type, index) {\n        var cacheKey = type + ':' + index;\n        var dependency = this.cache.get(cacheKey);\n\n        if (!dependency) {\n            switch (type) {\n                case 'scene':\n                    dependency = this.loadScene(index);\n                    break;\n\n                case 'node':\n                    dependency = this.loadNode(index);\n                    break;\n\n                case 'mesh':\n                    dependency = this.loadMesh(index);\n                    break;\n\n                case 'accessor':\n                    dependency = this.loadAccessor(index);\n                    break;\n\n                case 'bufferView':\n                    dependency = this.loadBufferView(index);\n                    break;\n\n                case 'buffer':\n                    dependency = this.loadBuffer(index);\n                    break;\n\n                case 'material':\n                    dependency = this.loadMaterial(index);\n                    break;\n\n                case 'texture':\n                    dependency = this.loadTexture(index);\n                    break;\n\n                case 'skin':\n                    dependency = this.loadSkin(index);\n                    break;\n\n                case 'animation':\n                    dependency = this.loadAnimation(index);\n                    break;\n\n                case 'camera':\n                    dependency = this.loadCamera(index);\n                    break;\n\n                case 'light':\n                    dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n                    break;\n\n                default:\n                    throw new Error('Unknown type: ' + type);\n            }\n\n            this.cache.add(cacheKey, dependency);\n        }\n\n        return dependency;\n    };\n\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n    GLTFParser.prototype.getDependencies = function (type) {\n        var dependencies = this.cache.get(type);\n\n        if (!dependencies) {\n            var parser = this;\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n            dependencies = Promise.all(\n                defs.map(function (def, index) {\n                    return parser.getDependency(type, index);\n                })\n            );\n\n            this.cache.add(type, dependencies);\n        }\n\n        return dependencies;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n        var bufferDef = this.json.buffers[bufferIndex];\n        var loader = this.fileLoader;\n\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n            throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n        }\n\n        // If present, GLB container is required to be the first buffer.\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n        }\n\n        var options = this.options;\n\n        return new Promise(function (resolve, reject) {\n            loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n                reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n            });\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n            var byteLength = bufferViewDef.byteLength || 0;\n            var byteOffset = bufferViewDef.byteOffset || 0;\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var accessorDef = this.json.accessors[accessorIndex];\n\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n            // Ignore empty accessors, which may be used to declare runtime\n            // information about attributes coming from another source (e.g. Draco\n            // compression extension).\n            return Promise.resolve(null);\n        }\n\n        var pendingBufferViews = [];\n\n        if (accessorDef.bufferView !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n        } else {\n            pendingBufferViews.push(null);\n        }\n\n        if (accessorDef.sparse !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n        }\n\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\n            var bufferView = bufferViews[0];\n\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n            var itemBytes = elementBytes * itemSize;\n            var byteOffset = accessorDef.byteOffset || 0;\n            var byteStride =\n                accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n            var normalized = accessorDef.normalized === true;\n            var array, bufferAttribute;\n\n            // The buffer is not interleaved if the stride is the item size in bytes.\n            if (byteStride && byteStride !== itemBytes) {\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n                // This makes sure that IBA.count reflects accessor.count properly\n                var ibSlice = Math.floor(byteOffset / byteStride);\n                var ibCacheKey =\n                    'InterleavedBuffer:' +\n                    accessorDef.bufferView +\n                    ':' +\n                    accessorDef.componentType +\n                    ':' +\n                    ibSlice +\n                    ':' +\n                    accessorDef.count;\n                var ib = parser.cache.get(ibCacheKey);\n\n                if (!ib) {\n                    array = new TypedArray(\n                        bufferView,\n                        ibSlice * byteStride,\n                        (accessorDef.count * byteStride) / elementBytes\n                    );\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n                    parser.cache.add(ibCacheKey, ib);\n                }\n\n                bufferAttribute = new InterleavedBufferAttribute(\n                    ib,\n                    itemSize,\n                    (byteOffset % byteStride) / elementBytes,\n                    normalized\n                );\n            } else {\n                if (bufferView === null) {\n                    array = new TypedArray(accessorDef.count * itemSize);\n                } else {\n                    array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n                }\n\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n            }\n\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n            if (accessorDef.sparse !== undefined) {\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n                var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n                var sparseIndices = new TypedArrayIndices(\n                    bufferViews[1],\n                    byteOffsetIndices,\n                    accessorDef.sparse.count * itemSizeIndices\n                );\n                var sparseValues = new TypedArray(\n                    bufferViews[2],\n                    byteOffsetValues,\n                    accessorDef.sparse.count * itemSize\n                );\n\n                if (bufferView !== null) {\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                    bufferAttribute = new BufferAttribute(\n                        bufferAttribute.array.slice(),\n                        bufferAttribute.itemSize,\n                        bufferAttribute.normalized\n                    );\n                }\n\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\n                    var index = sparseIndices[i];\n\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                    if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                    if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                    if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                    if (itemSize >= 5)\n                        throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n                }\n            }\n\n            return bufferAttribute;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n        var parser = this;\n        var json = this.json;\n        var options = this.options;\n        var textureLoader = this.textureLoader;\n\n        var URL = self.URL || self.webkitURL;\n\n        var textureDef = json.textures[textureIndex];\n\n        var textureExtensions = textureDef.extensions || {};\n\n        var source;\n\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n        } else {\n            source = json.images[textureDef.source];\n        }\n\n        var sourceURI = source.uri;\n        var isObjectURL = false;\n\n        if (source.bufferView !== undefined) {\n            // Load binary image data from bufferView, if provided.\n\n            sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n                isObjectURL = true;\n                var blob = new Blob([bufferView], { type: source.mimeType });\n                sourceURI = URL.createObjectURL(blob);\n                return sourceURI;\n            });\n        }\n\n        return Promise.resolve(sourceURI)\n            .then(function (sourceURI) {\n                // Load Texture resource.\n\n                var loader = options.manager.getHandler(sourceURI);\n\n                if (!loader) {\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n                        : textureLoader;\n                }\n\n                return new Promise(function (resolve, reject) {\n                    loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n                });\n            })\n            .then(function (texture) {\n                // Clean up resources and configure Texture.\n\n                if (isObjectURL === true) {\n                    URL.revokeObjectURL(sourceURI);\n                }\n\n                texture.flipY = false;\n\n                if (textureDef.name) texture.name = textureDef.name;\n\n                // Ignore unknown mime types, like DDS files.\n                if (source.mimeType in MIME_TYPE_FORMATS) {\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\n                }\n\n                var samplers = json.samplers || {};\n                var sampler = samplers[textureDef.sampler] || {};\n\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n                texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n                return texture;\n            });\n    };\n\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n        var parser = this;\n\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\n            if (!texture.isCompressedTexture) {\n                switch (mapName) {\n                    case 'aoMap':\n                    case 'emissiveMap':\n                    case 'metalnessMap':\n                    case 'normalMap':\n                    case 'roughnessMap':\n                        texture.format = RGBFormat;\n                        break;\n                }\n            }\n\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n            if (\n                mapDef.texCoord !== undefined &&\n                mapDef.texCoord != 0 &&\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\n            ) {\n                console.warn(\n                    'THREE.GLTFLoader: Custom UV set ' +\n                        mapDef.texCoord +\n                        ' for texture ' +\n                        mapName +\n                        ' not yet supported.'\n                );\n            }\n\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n                var transform =\n                    mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n                if (transform) {\n                    texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n                }\n            }\n\n            materialParams[mapName] = texture;\n        });\n    };\n\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n        var geometry = mesh.geometry;\n        var material = mesh.material;\n\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\n        var useVertexColors = geometry.attributes.color !== undefined;\n        var useFlatShading = geometry.attributes.normal === undefined;\n        var useSkinning = mesh.isSkinnedMesh === true;\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n        var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n        if (mesh.isPoints) {\n            var cacheKey = 'PointsMaterial:' + material.uuid;\n\n            var pointsMaterial = this.cache.get(cacheKey);\n\n            if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n                this.cache.add(cacheKey, pointsMaterial);\n            }\n\n            material = pointsMaterial;\n        } else if (mesh.isLine) {\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n            var lineMaterial = this.cache.get(cacheKey);\n\n            if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n\n                this.cache.add(cacheKey, lineMaterial);\n            }\n\n            material = lineMaterial;\n        }\n\n        // Clone the material if it will be modified\n        if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n            if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n            if (useSkinning) cacheKey += 'skinning:';\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\n            if (useVertexColors) cacheKey += 'vertex-colors:';\n            if (useFlatShading) cacheKey += 'flat-shading:';\n            if (useMorphTargets) cacheKey += 'morph-targets:';\n            if (useMorphNormals) cacheKey += 'morph-normals:';\n\n            var cachedMaterial = this.cache.get(cacheKey);\n\n            if (!cachedMaterial) {\n                cachedMaterial = material.clone();\n\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\n                if (useVertexColors) cachedMaterial.vertexColors = true;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n\n                this.cache.add(cacheKey, cachedMaterial);\n            }\n\n            material = cachedMaterial;\n        }\n\n        // workarounds for mesh and geometry\n\n        if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n            geometry.setAttribute('uv2', geometry.attributes.uv);\n        }\n\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        if (material.normalScale && !useVertexTangents) {\n            material.normalScale.y = -material.normalScale.y;\n        }\n\n        if (material.clearcoatNormalScale && !useVertexTangents) {\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n        }\n\n        mesh.material = material;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n        var materialDef = json.materials[materialIndex];\n\n        var materialType;\n        var materialParams = {};\n        var materialExtensions = materialDef.extensions || {};\n\n        var pending = [];\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n            var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n            materialType = sgExtension.getMaterialType();\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n            materialType = kmuExtension.getMaterialType();\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n        } else {\n            // Specification:\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n            materialType = MeshStandardMaterial;\n\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n            materialParams.color = new Color(1.0, 1.0, 1.0);\n            materialParams.opacity = 1.0;\n\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n\n            materialParams.metalness =\n                metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n            materialParams.roughness =\n                metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n                pending.push(\n                    parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n            }\n        }\n\n        if (materialDef.doubleSided === true) {\n            materialParams.side = DoubleSide;\n        }\n\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n        if (alphaMode === ALPHA_MODES.BLEND) {\n            materialParams.transparent = true;\n\n            // See: https://github.com/mrdoob/three.js/issues/17706\n            materialParams.depthWrite = false;\n        } else {\n            materialParams.transparent = false;\n\n            if (alphaMode === ALPHA_MODES.MASK) {\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n            }\n        }\n\n        if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n\n            materialParams.normalScale = new Vector2(1, 1);\n\n            if (materialDef.normalTexture.scale !== undefined) {\n                materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n            }\n        }\n\n        if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n            if (materialDef.occlusionTexture.strength !== undefined) {\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n            }\n        }\n\n        if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n\n        if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n        }\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\n            materialType = clearcoatExtension.getMaterialType();\n            pending.push(clearcoatExtension.extendParams(materialParams, { extensions: materialExtensions }, parser));\n        }\n\n        return Promise.all(pending).then(function () {\n            var material;\n\n            if (materialType === GLTFMeshStandardSGMaterial) {\n                material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n            } else {\n                material = new materialType(materialParams);\n            }\n\n            if (materialDef.name) material.name = materialDef.name;\n\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n            if (material.map) material.map.encoding = sRGBEncoding;\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n            assignExtrasToUserData(material, materialDef);\n\n            if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n            return material;\n        });\n    };\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n    function computeBounds(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var box = new Box3();\n\n        if (attributes.POSITION !== undefined) {\n            var accessor = parser.json.accessors[attributes.POSITION];\n\n            var min = accessor.min;\n            var max = accessor.max;\n\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n                box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n            } else {\n                console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\n                return;\n            }\n        } else {\n            return;\n        }\n\n        var targets = primitiveDef.targets;\n\n        if (targets !== undefined) {\n            var maxDisplacement = new Vector3();\n            var vector = new Vector3();\n\n            for (var i = 0, il = targets.length; i < il; i++) {\n                var target = targets[i];\n\n                if (target.POSITION !== undefined) {\n                    var accessor = parser.json.accessors[target.POSITION];\n                    var min = accessor.min;\n                    var max = accessor.max;\n\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n                    if (min !== undefined && max !== undefined) {\n                        // we need to get max of absolute components because target weight is [-1,1]\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n                        maxDisplacement.max(vector);\n                    } else {\n                        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n                    }\n                }\n            }\n\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n            box.expandByVector(maxDisplacement);\n        }\n\n        geometry.boundingBox = box;\n\n        var sphere = new Sphere();\n\n        box.getCenter(sphere.center);\n        sphere.radius = box.min.distanceTo(box.max) / 2;\n\n        geometry.boundingSphere = sphere;\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var pending = [];\n\n        function assignAttributeAccessor(accessorIndex, attributeName) {\n            return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n                geometry.setAttribute(attributeName, accessor);\n            });\n        }\n\n        for (var gltfAttributeName in attributes) {\n            var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n            // Skip attributes already provided by e.g. Draco extension.\n            if (threeAttributeName in geometry.attributes) continue;\n\n            pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n        }\n\n        if (primitiveDef.indices !== undefined && !geometry.index) {\n            var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n                geometry.setIndex(accessor);\n            });\n\n            pending.push(accessor);\n        }\n\n        assignExtrasToUserData(geometry, primitiveDef);\n\n        computeBounds(geometry, primitiveDef, parser);\n\n        return Promise.all(pending).then(function () {\n            return primitiveDef.targets !== undefined\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\n                : geometry;\n        });\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n    function toTrianglesDrawMode(geometry, drawMode) {\n        var index = geometry.getIndex();\n\n        // generate index if not present\n\n        if (index === null) {\n            var indices = [];\n\n            var position = geometry.getAttribute('position');\n\n            if (position !== undefined) {\n                for (var i = 0; i < position.count; i++) {\n                    indices.push(i);\n                }\n\n                geometry.setIndex(indices);\n                index = geometry.getIndex();\n            } else {\n                console.error(\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n                );\n                return geometry;\n            }\n        }\n\n        //\n\n        var numberOfTriangles = index.count - 2;\n        var newIndices = [];\n\n        if (drawMode === TriangleFanDrawMode) {\n            // gl.TRIANGLE_FAN\n\n            for (var i = 1; i <= numberOfTriangles; i++) {\n                newIndices.push(index.getX(0));\n                newIndices.push(index.getX(i));\n                newIndices.push(index.getX(i + 1));\n            }\n        } else {\n            // gl.TRIANGLE_STRIP\n\n            for (var i = 0; i < numberOfTriangles; i++) {\n                if (i % 2 === 0) {\n                    newIndices.push(index.getX(i));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i + 2));\n                } else {\n                    newIndices.push(index.getX(i + 2));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i));\n                }\n            }\n        }\n\n        if (newIndices.length / 3 !== numberOfTriangles) {\n            console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n        }\n\n        // build final geometry\n\n        var newGeometry = geometry.clone();\n        newGeometry.setIndex(newIndices);\n\n        return newGeometry;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n        var parser = this;\n        var extensions = this.extensions;\n        var cache = this.primitiveCache;\n\n        function createDracoPrimitive(primitive) {\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                .decodePrimitive(primitive, parser)\n                .then(function (geometry) {\n                    return addPrimitiveAttributes(geometry, primitive, parser);\n                });\n        }\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var primitive = primitives[i];\n            var cacheKey = createPrimitiveKey(primitive);\n\n            // See if we've already created this geometry\n            var cached = cache[cacheKey];\n\n            if (cached) {\n                // Use the cached geometry if it exists\n                pending.push(cached.promise);\n            } else {\n                var geometryPromise;\n\n                if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n                    // Use DRACO geometry if available\n                    geometryPromise = createDracoPrimitive(primitive);\n                } else {\n                    // Otherwise create a new geometry\n                    geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n                }\n\n                // Cache this geometry\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n                pending.push(geometryPromise);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var meshDef = json.meshes[meshIndex];\n        var primitives = meshDef.primitives;\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var material =\n                primitives[i].material === undefined\n                    ? createDefaultMaterial(this.cache)\n                    : this.getDependency('material', primitives[i].material);\n\n            pending.push(material);\n        }\n\n        pending.push(parser.loadGeometries(primitives));\n\n        return Promise.all(pending).then(function (results) {\n            var materials = results.slice(0, results.length - 1);\n            var geometries = results[results.length - 1];\n\n            var meshes = [];\n\n            for (var i = 0, il = geometries.length; i < il; i++) {\n                var geometry = geometries[i];\n                var primitive = primitives[i];\n\n                // 1. create Mesh\n\n                var mesh;\n\n                var material = materials[i];\n\n                if (\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n                    primitive.mode === undefined\n                ) {\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n                    mesh =\n                        meshDef.isSkinnedMesh === true\n                            ? new SkinnedMesh(geometry, material)\n                            : new Mesh(geometry, material);\n\n                    if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n                        mesh.normalizeSkinWeights();\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n                    mesh = new Points(geometry, material);\n                } else {\n                    throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n                }\n\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n                    updateMorphTargets(mesh, meshDef);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (geometries.length > 1) mesh.name += '_' + i;\n\n                assignExtrasToUserData(mesh, meshDef);\n\n                parser.assignFinalMaterial(mesh);\n\n                meshes.push(mesh);\n            }\n\n            if (meshes.length === 1) {\n                return meshes[0];\n            }\n\n            var group = new Group();\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n                group.add(meshes[i]);\n            }\n\n            return group;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n        var camera;\n        var cameraDef = this.json.cameras[cameraIndex];\n        var params = cameraDef[cameraDef.type];\n\n        if (!params) {\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\n            return;\n        }\n\n        if (cameraDef.type === 'perspective') {\n            camera = new PerspectiveCamera(\n                MathUtils.radToDeg(params.yfov),\n                params.aspectRatio || 1,\n                params.znear || 1,\n                params.zfar || 2e6\n            );\n        } else if (cameraDef.type === 'orthographic') {\n            camera = new OrthographicCamera(\n                -params.xmag,\n                params.xmag,\n                params.ymag,\n                -params.ymag,\n                params.znear,\n                params.zfar\n            );\n        }\n\n        if (cameraDef.name) camera.name = cameraDef.name;\n\n        assignExtrasToUserData(camera, cameraDef);\n\n        return Promise.resolve(camera);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n        var skinDef = this.json.skins[skinIndex];\n\n        var skinEntry = { joints: skinDef.joints };\n\n        if (skinDef.inverseBindMatrices === undefined) {\n            return Promise.resolve(skinEntry);\n        }\n\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n            skinEntry.inverseBindMatrices = accessor;\n\n            return skinEntry;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n        var json = this.json;\n\n        var animationDef = json.animations[animationIndex];\n\n        var pendingNodes = [];\n        var pendingInputAccessors = [];\n        var pendingOutputAccessors = [];\n        var pendingSamplers = [];\n        var pendingTargets = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n            var target = channel.target;\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n            var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n            var output =\n                animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n            pendingNodes.push(this.getDependency('node', name));\n            pendingInputAccessors.push(this.getDependency('accessor', input));\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\n            pendingSamplers.push(sampler);\n            pendingTargets.push(target);\n        }\n\n        return Promise.all([\n            Promise.all(pendingNodes),\n            Promise.all(pendingInputAccessors),\n            Promise.all(pendingOutputAccessors),\n            Promise.all(pendingSamplers),\n            Promise.all(pendingTargets)\n        ]).then(function (dependencies) {\n            var nodes = dependencies[0];\n            var inputAccessors = dependencies[1];\n            var outputAccessors = dependencies[2];\n            var samplers = dependencies[3];\n            var targets = dependencies[4];\n\n            var tracks = [];\n\n            for (var i = 0, il = nodes.length; i < il; i++) {\n                var node = nodes[i];\n                var inputAccessor = inputAccessors[i];\n                var outputAccessor = outputAccessors[i];\n                var sampler = samplers[i];\n                var target = targets[i];\n\n                if (node === undefined) continue;\n\n                node.updateMatrix();\n                node.matrixAutoUpdate = true;\n\n                var TypedKeyframeTrack;\n\n                switch (PATH_PROPERTIES[target.path]) {\n                    case PATH_PROPERTIES.weights:\n                        TypedKeyframeTrack = NumberKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.rotation:\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.position:\n                    case PATH_PROPERTIES.scale:\n                    default:\n                        TypedKeyframeTrack = VectorKeyframeTrack;\n                        break;\n                }\n\n                var targetName = node.name ? node.name : node.uuid;\n\n                var interpolation =\n                    sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n                var targetNames = [];\n\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n                    node.traverse(function (object) {\n                        if (object.isMesh === true && object.morphTargetInfluences) {\n                            targetNames.push(object.name ? object.name : object.uuid);\n                        }\n                    });\n                } else {\n                    targetNames.push(targetName);\n                }\n\n                var outputArray = outputAccessor.array;\n\n                if (outputAccessor.normalized) {\n                    var scale;\n\n                    if (outputArray.constructor === Int8Array) {\n                        scale = 1 / 127;\n                    } else if (outputArray.constructor === Uint8Array) {\n                        scale = 1 / 255;\n                    } else if (outputArray.constructor == Int16Array) {\n                        scale = 1 / 32767;\n                    } else if (outputArray.constructor === Uint16Array) {\n                        scale = 1 / 65535;\n                    } else {\n                        throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n                    }\n\n                    var scaled = new Float32Array(outputArray.length);\n\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\n                        scaled[j] = outputArray[j] * scale;\n                    }\n\n                    outputArray = scaled;\n                }\n\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\n                    var track = new TypedKeyframeTrack(\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n                        inputAccessor.array,\n                        outputArray,\n                        interpolation\n                    );\n\n                    // Override interpolation with custom factory method.\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                            // must be divided by three to get the interpolant's sampleSize argument.\n\n                            return new GLTFCubicSplineInterpolant(\n                                this.times,\n                                this.values,\n                                this.getValueSize() / 3,\n                                result\n                            );\n                        };\n\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n                    }\n\n                    tracks.push(track);\n                }\n            }\n\n            var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n            return new AnimationClip(name, undefined, tracks);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var parser = this;\n\n        var meshReferences = json.meshReferences;\n        var meshUses = json.meshUses;\n\n        var nodeDef = json.nodes[nodeIndex];\n\n        return (function () {\n            var pending = [];\n\n            if (nodeDef.mesh !== undefined) {\n                pending.push(\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n                        var node;\n\n                        if (meshReferences[nodeDef.mesh] > 1) {\n                            var instanceNum = meshUses[nodeDef.mesh]++;\n\n                            node = mesh.clone();\n                            node.name += '_instance_' + instanceNum;\n                        } else {\n                            node = mesh;\n                        }\n\n                        // if weights are provided on the node, override weights on the mesh.\n                        if (nodeDef.weights !== undefined) {\n                            node.traverse(function (o) {\n                                if (!o.isMesh) return;\n\n                                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\n                                }\n                            });\n                        }\n\n                        return node;\n                    })\n                );\n            }\n\n            if (nodeDef.camera !== undefined) {\n                pending.push(parser.getDependency('camera', nodeDef.camera));\n            }\n\n            if (\n                nodeDef.extensions &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n            ) {\n                pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n            }\n\n            return Promise.all(pending);\n        })().then(function (objects) {\n            var node;\n\n            // .isBone isn't in glTF spec. See .markDefs\n            if (nodeDef.isBone === true) {\n                node = new Bone();\n            } else if (objects.length > 1) {\n                node = new Group();\n            } else if (objects.length === 1) {\n                node = objects[0];\n            } else {\n                node = new Object3D();\n            }\n\n            if (node !== objects[0]) {\n                for (var i = 0, il = objects.length; i < il; i++) {\n                    node.add(objects[i]);\n                }\n            }\n\n            if (nodeDef.name) {\n                node.userData.name = nodeDef.name;\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n            }\n\n            assignExtrasToUserData(node, nodeDef);\n\n            if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n            if (nodeDef.matrix !== undefined) {\n                var matrix = new Matrix4();\n                matrix.fromArray(nodeDef.matrix);\n                node.applyMatrix4(matrix);\n            } else {\n                if (nodeDef.translation !== undefined) {\n                    node.position.fromArray(nodeDef.translation);\n                }\n\n                if (nodeDef.rotation !== undefined) {\n                    node.quaternion.fromArray(nodeDef.rotation);\n                }\n\n                if (nodeDef.scale !== undefined) {\n                    node.scale.fromArray(nodeDef.scale);\n                }\n            }\n\n            return node;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n    GLTFParser.prototype.loadScene = (function () {\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\n            var nodeDef = json.nodes[nodeId];\n\n            return parser\n                .getDependency('node', nodeId)\n                .then(function (node) {\n                    if (nodeDef.skin === undefined) return node;\n\n                    // build skeleton here as well\n\n                    var skinEntry;\n\n                    return parser\n                        .getDependency('skin', nodeDef.skin)\n                        .then(function (skin) {\n                            skinEntry = skin;\n\n                            var pendingJoints = [];\n\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n                                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n                            }\n\n                            return Promise.all(pendingJoints);\n                        })\n                        .then(function (jointNodes) {\n                            node.traverse(function (mesh) {\n                                if (!mesh.isMesh) return;\n\n                                var bones = [];\n                                var boneInverses = [];\n\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                                    var jointNode = jointNodes[j];\n\n                                    if (jointNode) {\n                                        bones.push(jointNode);\n\n                                        var mat = new Matrix4();\n\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\n                                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                                        }\n\n                                        boneInverses.push(mat);\n                                    } else {\n                                        console.warn(\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                                            skinEntry.joints[j]\n                                        );\n                                    }\n                                }\n\n                                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n                            });\n\n                            return node;\n                        });\n                })\n                .then(function (node) {\n                    // build node hierachy\n\n                    parentObject.add(node);\n\n                    var pending = [];\n\n                    if (nodeDef.children) {\n                        var children = nodeDef.children;\n\n                        for (var i = 0, il = children.length; i < il; i++) {\n                            var child = children[i];\n                            pending.push(buildNodeHierachy(child, node, json, parser));\n                        }\n                    }\n\n                    return Promise.all(pending);\n                });\n        }\n\n        return function loadScene(sceneIndex) {\n            var json = this.json;\n            var extensions = this.extensions;\n            var sceneDef = this.json.scenes[sceneIndex];\n            var parser = this;\n\n            // Loader returns Group, not Scene.\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n            var scene = new Group();\n            if (sceneDef.name) scene.name = sceneDef.name;\n\n            assignExtrasToUserData(scene, sceneDef);\n\n            if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n            var nodeIds = sceneDef.nodes || [];\n\n            var pending = [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n            }\n\n            return Promise.all(pending).then(function () {\n                return scene;\n            });\n        };\n    })();\n\n    return GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const ALIAS = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32,\n    tab: 9,\n    escape: 27\n};\n\nexport default class Keyboard {\n    constructor(domElement) {\n        this.domElement = domElement || document;\n        this.keyCodes = {};\n\n        // bind keyEvents\n        this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // bind window blur\n        window.addEventListener('blur', () => this.onBlur, false);\n    }\n\n    destroy() {\n        this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // unbind window blur event\n        window.removeEventListener('blur', () => this.onBlur, false);\n    }\n\n    onBlur() {\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\n    }\n\n    onKeyChange(event) {\n        // log to debug\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n        // update this.keyCodes\n        const keyCode = event.keyCode;\n        this.keyCodes[keyCode] = event.type === 'keydown';\n    }\n\n    pressed(keyDesc) {\n        const keys = keyDesc.split('+');\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\n                pressed = this.keyCodes[ALIAS[key]];\n            } else {\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n\n    eventMatches(event, keyDesc) {\n        const aliases = ALIAS;\n        const aliasKeys = Object.keys(aliases);\n        const keys = keyDesc.split('+');\n        // log to debug\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (key === 'shift') {\n                pressed = event.shiftKey ? true : false;\n            } else if (key === 'ctrl') {\n                pressed = event.ctrlKey ? true : false;\n            } else if (key === 'alt') {\n                pressed = event.altKey ? true : false;\n            } else if (key === 'meta') {\n                pressed = event.metaKey ? true : false;\n            } else if (aliasKeys.indexOf(key) !== -1) {\n                pressed = event.keyCode === aliases[key];\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n                pressed = true;\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n}\n","import Keyboard from '../../utils/keyboard';\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// Manages all input interactions\nexport default class Interaction {\n    constructor(renderer, scene, camera, controls) {\n        // Properties\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = camera;\n        this.controls = controls;\n\n        this.timeout = null;\n\n        // Instantiate keyboard helper\n        this.keyboard = new Keyboard();\n\n        // Listeners\n        // Mouse events\n        this.renderer.domElement.addEventListener(\n            'mousemove',\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\n            false\n        );\n        this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\n        this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\n\n        // Keyboard events\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\n            // Only once\n            if (event.repeat) {\n                return;\n            }\n\n            if (this.keyboard.eventMatches(event, 'escape')) {\n                console.log('Escape pressed');\n            }\n        });\n    }\n\n    onMouseOver(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = true;\n    }\n\n    onMouseLeave(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = false;\n    }\n\n    onMouseMove(event) {\n        event.preventDefault();\n\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(function () {\n            Config.isMouseMoving = false;\n        }, 200);\n\n        Config.isMouseMoving = true;\n    }\n}\n","import Config from '../../data/config';\n\nlet realities = {\n    physical: false,\n    virtual: false,\n    mixed: true\n};\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n    constructor(main) {\n        this.gui = new dat.GUI();\n\n        this.camera = main.camera.threeCamera;\n        this.controls = main.controls.threeControls;\n        this.light = main.light;\n        this.scene = main.scene;\n\n        this.model = null;\n        this.meshHelper = null;\n    }\n\n    load(main, mesh) {\n        // Add folders\n        this.gui.add(Config, 'isShowingRobotSnapshots').name('Robot Snapshots');\n        /* Labels Folder */\n        const labelsFolder = this.gui.addFolder('Labels');\n        labelsFolder.add(Config, 'isShowingLables').name('All Labels');\n        labelsFolder\n            .add(Config, 'isShowingObstacleLables')\n            .name('Obstacle Labels')\n            .onChange((value) => {\n                this.toggleLabels(this.scene.children, 'Obstacle', value);\n            });\n        labelsFolder\n            .add(Config, 'isShowingRobotLables')\n            .name('Robot Labels')\n            .onChange((value) => {\n                this.toggleLabels(this.scene.children, 'Robot', value);\n            });\n        /* Reality Folder */\n        const realityFolder = this.gui.addFolder('Reality');\n        realityFolder\n            .add(realities, 'physical')\n            .name('Physical Reality')\n            .listen()\n            .onChange((value) => {\n                this.toggleReality('physical', 'P');\n            });\n        realityFolder\n            .add(realities, 'virtual')\n            .name('Virtual Reality')\n            .listen()\n            .onChange((value) => {\n                this.toggleReality('virtual', 'V');\n            });\n        realityFolder\n            .add(realities, 'mixed')\n            .listen()\n            .name('Mixed Reality')\n            .onChange((value) => {\n                this.toggleReality('mixed', 'M');\n            });\n\n        this.gui.open();\n\n        /* Global */\n        //this.gui.close();\n\n        // this.model = main.model;\n        // this.meshHelper = main.meshHelper;\n    }\n\n    toggleLabels(objects, type, value) {\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\n            for (var variable of objects) {\n                if (variable.name.startsWith(type)) {\n                    variable.children[0].visible = value;\n                }\n            }\n        }\n    }\n\n    toggleRobotsByRealm(objects, type) {\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\n            for (let variable of objects) {\n                // TODO:\n            }\n        }\n    }\n\n    toggleReality(reality, selected) {\n        window.selectedReality = selected;\n        for (let attrib in realities) {\n            realities[attrib] = false;\n        }\n        realities[reality] = true;\n        console.log(window.selectedReality, realities);\n    }\n\n    show() {\n        this.gui.show();\n    }\n\n    unload() {\n        this.gui.destroy();\n        this.gui = new dat.GUI();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nconst OBSTACLE_PREFIX = 'Obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback !== undefined) {\n            callback();\n        }\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs !== undefined) {\n                //console.log(obs[1]);\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n\n        const mesh = new THREE.Mesh(geometry, material);\n\n        mesh.name = OBSTACLE_PREFIX + id;\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        this.scene.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position !== undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            mesh.scale.set(scene_scale, scene_scale, scene_scale);\n            mesh.position.set(scene_scale * x, scene_scale * y, scene_scale * z);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation !== undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = ((90 + x) / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            mesh.rotation.set(radX, radY, radZ);\n        }\n\n        // Show shadows of the object if enabled\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        // Add labels to every obstacle, immediately displayed if enabled\n        addLabel(OBSTACLE_PREFIX, obstacle, mesh);\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        } else {\n            throw new TypeError('unsupported geometry type');\n        }\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        let material;\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            material = new THREE.MeshBasicMaterial(m.properties);\n            material.userData.originalColor = new THREE.Color(0x666666);\n            return material;\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            material = new THREE.MeshNormalMaterial(m.properties);\n            material.userData.originalColor = new THREE.Color(0x666666);\n            return material;\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            material = new THREE.MeshPhongMaterial(m.properties);\n            material.userData.originalColor = new THREE.Color(0x666666);\n            return material;\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            material = new THREE.MeshPhysicalMaterial(m.properties);\n            material.userData.originalColor = new THREE.Color(0x666666);\n            return material;\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            material = new THREE.MeshStandardMaterial(m.properties);\n            material.userData.originalColor = new THREE.Color(0x666666);\n            return material;\n        } else {\n            // Default material type\n            material = new THREE.MeshStandardMaterial(m.properties);\n            material.userData.originalColor = new THREE.Color(0x666666);\n            return material;\n        }\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height !== undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius !== undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            } else {\n                return 0;\n            }\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = this.scene.getObjectByName(name);\n        console.log(obstacle);\n        if (obstacle !== undefined) {\n            this.scene.remove(obstacle);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = this.scene.children;\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'Robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else {\n            if (callback != null) callback('undefined');\n        }\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V', callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r == undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n                // Can create\n                // Limit the arena that robot can go\n                x = scene_scale * Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = scene_scale * Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    // Set less opacity for virtual robots\n                    const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                    const material = new THREE.MeshStandardMaterial({\n                        color: 0x666666,\n                        opacity: opacity,\n                        transparent: true\n                    });\n                    material.userData.originalColor = new THREE.Color(0x666666);\n\n                    var r = new THREE.Mesh(geometry, material);\n                    r.receiveShadow = true;\n                    r.name = ROBOT_PREFIX + id;\n                    r.scale.set(scene_scale, scene_scale, scene_scale);\n                    r.position.set(x, y, 0);\n                    r.rotation.x = 90 * THREE.Math.DEG2RAD;\n                    r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n                    r.reality = reality; // set reality flag\n\n                    // Add robot to the scene\n                    window.scene.add(r);\n\n                    r.clickEvent = function (m) {\n                        window.robot.alert(m);\n                    };\n\n                    // Add labels to every robot, immediately displayed if enabled\n                    addLabel(ROBOT_PREFIX, { id }, r);\n\n                    console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                    // Callback function\n                    if (callback != undefined) callback('success');\n                });\n            } else {\n                console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n            }\n        } else {\n            if (reality === REALITY || REALITY === 'M') {\n                // Reality matches\n\n                this.setReality(id, reality);\n                this.move(id, x, y, heading, () => {\n                    if (callback != undefined) callback('already defined, so moved');\n                });\n            } else {\n                // Robot reality not matching with environment reality\n                this.delete(id);\n            }\n        }\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n\n            if (r != undefined) {\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else {\n                if (callback != undefined) callback('not found');\n            }\n        } else {\n            if (callback != undefined) callback('id not specified');\n        }\n    }\n\n    deleteAll() {\n        // Delete all robots\n        const objects = this.scene.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n\n    setReality(id, reality) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.reality = reality;\n        }\n    }\n    exists(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            const currentHeading = r.rotation.y;\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\n\n            // TODO: need a smoother way than this rough trick\n            // If current and target rotations in different signs\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n            // Limit the arena that robot can go\n            x = scene_scale * Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n            y = scene_scale * Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        } else {\n            if (callback != null) callback('undefined');\n        }\n    }\n\n    get_coordinates(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        } else {\n            return null;\n        }\n    }\n\n    update() {\n        TWEEN.update();\n    }\n\n    alert(mesh) {\n        // Display an alert on window\n        let disp = document.querySelector('#msg-box');\n        disp.innerHTML = `${mesh.name} [${mesh.reality}]`;\n        disp.style.display = 'block';\n\n        setTimeout(function () {\n            document.querySelector('#msg-box').style.display = 'none';\n        }, 1000);\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\nimport MQTT from 'paho-mqtt';\n\nimport Config from '../../data/config';\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\n// Robot Color - NeoPixel\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene) {\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n\n        // create a random client Id\n        const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n        this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n        window.mqtt = this.client;\n\n        this.client.connect({\n            userName: Config.mqtt.user,\n            password: Config.mqtt.password,\n            reconnect: true,\n            useSSL: true,\n            cleanSession: false,\n            onSuccess: () => {\n                console.log('MQTT: connected');\n\n                // Subscribe to topics\n                this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                this.subscribe(TOPIC_ROBOT_CREATE);\n                this.subscribe(TOPIC_ROBOT_DELETE);\n                this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                this.subscribe(TOPIC_CHANGE_COLOR);\n                this.subscribe(TOPIC_OBSTACLES_LIST);\n                this.subscribe(TOPIC_OBSTACLES_DELETE);\n                this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n\n                // Request for obstacle data\n                this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n\n                // Request for coordinate data\n                this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                // Access globally\n                window.robot = this.robot;\n                window.obstacles = this.obstacles;\n\n                this.client.onMessageArrived = this.onMessageArrived;\n                this.client.onConnectionLost = this.onConnectionLost;\n            },\n            onFailure: () => {\n                console.log('MQTT: connection failed');\n            }\n        });\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            window.channel = channelHash.substring(1);\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n            try {\n                const data = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined) {\n                    // Have data on this reality\n                    for (const i in data) {\n                        const { id, x, y, heading } = data[i];\n                        const reality = data[i].reality == undefined ? 'V' : data[i].reality;\n\n                        if (reality === REALITY || REALITY === 'M') {\n                            // Create only if robots match with platform's allowed reality\n                            if (window.robot.exists(id) == undefined) {\n                                window.robot.create(id, x, y, heading, reality);\n                            } else {\n                                window.robot.move(id, x, y, heading);\n                                window.robot.setReality(id, reality);\n                            }\n                        } else {\n                            // reality not matching; remove\n                            robot.delete(id);\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n\n            window.obstacles.deleteIfExists(data.id);\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                let disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                let disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n        }\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport label from './components/label';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Helpers\nimport MeshHelper from './helpers/meshHelper';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Config data\nimport Config from './../data/config';\n\n// STLLoader\nlet STLLoader = require('three-stl-loader')(THREE);\n\n// Global Variables\nlet camera, labelRenderer, INTERSECTED;\n\n// For click event on robots\nlet raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        // Set container property to container element\n        this.container = container;\n\n        // Start Three clock\n        this.clock = new THREE.Clock();\n\n        // Main scene creation\n        this.scene = new THREE.Scene();\n        window.scene = this.scene; // config as a global variable\n        window.scene_scale = Config.scale;\n        // High level reality flag\n        window.selectedReality = Config.selectedReality;\n\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        this.mqtt = new MQTTClient(this.scene);\n\n        // Get Device Pixel Ratio first for retina\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Main renderer constructor\n        this.renderer = new Renderer(this.scene, container);\n\n        // Components instantiations\n        camera = new Camera(this.renderer.threeRenderer);\n        this.controls = new Controls(camera.threeCamera, container);\n        this.light = new Light(this.scene);\n        this.camera = camera;\n        // Create and place lights in scene\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        // Set up Stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats();\n            this.container.appendChild(this.stats.dom);\n        }\n\n        if (Config.isShowingLables) {\n            this.labelRenderer = label();\n            this.container.appendChild(this.labelRenderer.domElement);\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            this.gui = new DatGUI(this);\n        }\n\n        // Instantiate texture class\n        this.texture = new Texture();\n\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\n        this.texture.load().then(() => {\n            this.manager = new THREE.LoadingManager();\n\n            // Create the environment ---------------------------------------------\n            this.environment = new Environment();\n\n            // -----------------------------------------------------------------\n\n            if (Config.isDev) {\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                //\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                this.gui.load(this);\n                console.log('gui:', this.gui);\n                this.gui.show();\n            }\n            // -----------------------------------------------------------------\n\n            // onProgress callback\n            this.manager.onProgress = (item, loaded, total) => {\n                console.log(`${item}: ${loaded} ${total}`);\n            };\n\n            // All loaders done now\n            this.manager.onLoad = () => {\n                // alert('Loaded');\n                console.log('Loading complete!');\n\n                // Set up interaction manager with the app now that the model is finished loading\n                new Interaction(\n                    this.renderer.threeRenderer,\n                    this.scene,\n                    camera.threeCamera,\n                    this.controls.threeControls\n                );\n\n                // Add dat.GUI controls if dev\n                if (Config.isDev) {\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                    // this.gui.load(this, this.model.obj);\n                    console.log('gui:', this.gui);\n                    // this.gui.show();\n                }\n\n                // Everything is now fully loaded\n                Config.isLoaded = true;\n                this.container.querySelector('#loading').style.display = 'none';\n            };\n        });\n\n        // Start render which does not wait for model fully loaded\n\n        this.render();\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Eventlistner for catching mouse click events\n        // window.addEventListener('click', this.onDocumentMouseDown, false);\n        // Eventlistner for catching mouse move events\n        document.addEventListener('mousemove', this.onDocumentMouseMove);\n        // document.addEventListener('mouseout', this.onDocumentMouseOut);\n    }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children);\n        if (intersects.length > 0) {\n            // console.log(intersects);\n            const obj = intersects[0].object;\n\n            if (obj.clickEvent !== undefined) {\n                obj.clickEvent(obj);\n            }\n        }\n    }\n\n    onDocumentMouseMove(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children, true);\n        // TODO: Do Color change if necessary :-|\n        // if(intersects.length > 0){\n        //     let object = intersects[0].object;\n        //     object.material.color.set(0x67a169);\n        // }\n        // if(intersects.length > 0){\n        //     let object = intersects[0].object;\n        //     if(INTERSECTED !== object){\n        //         console.log('not exists', INTERSECTED, object.material);\n        //         if(INTERSECTED && INTERSECTED.material.userData !== {}){\n        //             console.log(INTERSECTED.material.userData, INTERSECTED.material.type);\n        //             INTERSECTED.material.color.set(INTERSECTED.material.userData.originalColor.getHex());\n        //         }\n        //         INTERSECTED = object;\n        //         INTERSECTED.material.color.set(0x67a169);\n        //     }\n        //     // object.material.color.set(0x67a169);\n        // }else{\n        //     if(INTERSECTED && INTERSECTED.material.userData !== {}) {\n        //         console.log('exists', INTERSECTED.material.userData);\n        //         INTERSECTED.material.color.set(INTERSECTED.material.userData.originalColor.getHex());\n        //     }\n        //     INTERSECTED = null;\n        // }\n        if (intersects.length > 0) {\n            let object = intersects[0].object;\n            if (INTERSECTED != object) {\n                if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n                INTERSECTED = object;\n                INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n                INTERSECTED.material.setValues({ opacity: 0.6 });\n            }\n        } else {\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n\n            INTERSECTED = null;\n        }\n    }\n\n    onDocumentMouseOut(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children, true);\n        if (intersects.length > 0) {\n            let object = intersects[0].object;\n            console.log(object.material.userData.originalColor);\n            object.material.color.set(object.material.userData.originalColor);\n        }\n    }\n\n    render() {\n        // Call render function and pass in created scene and camera\n        this.renderer.render(this.scene, camera.threeCamera);\n\n        // render labels if enabled\n        if (Config.isShowingLables && this.labelRenderer.isShowingLables) {\n            this.labelRenderer.domElement.hidden = false;\n            this.labelRenderer.render(this.scene, camera.threeCamera);\n        } else {\n            this.labelRenderer.domElement.hidden = true;\n        }\n\n        // Delta time is sometimes needed for certain updates\n        //const delta = this.clock.getDelta();\n\n        // Call any vendor or module frame updates here\n        TWEEN.update();\n        this.controls.threeControls.update();\n\n        camera.threeCamera.updateMatrixWorld();\n\n        // update stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats.update();\n        }\n\n        // RAF\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}