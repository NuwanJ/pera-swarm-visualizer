{"version":3,"sources":["webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/label.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/helpers/vertexNormalsHelper.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/loaders/GLTFLoader.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["scale","arena","size","minX","maxX","minY","maxY","mqtt","server","port","path","user","password","channel","mixedReality","obstacles","robots","isDev","isShowingStats","isShowingLables","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","fov","far","aspect","posX","posY","posZ","controls","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","Infinity","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","target","x","y","z","ambientLight","enabled","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","top","right","bottom","left","pointLight","distance","hemiLight","groundColor","canvas","window","CanvasRenderingContext2D","webgl","document","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Renderer","scene","container","threeRenderer","THREE","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","shadowMap","type","Config","capabilities","getMaxAnisotropy","updateSize","addEventListener","setSize","offsetWidth","offsetHeight","render","renderer","CSS2DRenderer","innerWidth","innerHeight","position","Camera","height","threeCamera","set","up","updateProjectionMatrix","Light","init","visible","castShadow","mapSize","directionalLightHelper","lightName","add","Controls","threeControls","OrbitControls","enableRotate","Environment","console","log","scene_scale","geometry","depthWrite","ground","receiveShadow","grid","rotation","opacity","transparent","_v1","Vector3","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","object","hex","nNormals","objGeometry","isGeometry","faces","length","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","call","LineBasicMaterial","toneMapped","matrixAutoUpdate","update","prototype","Object","create","constructor","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","copy","applyMatrix4","applyMatrix3","normalize","multiplyScalar","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","edges","edgesLine","vertexHelper","boxHelper","remove","Helpers","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","round","error","value","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","keys","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","get","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","angle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","Vector2","BINARY_EXTENSION_CHUNK_TYPES","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","clone","offset","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","event","onKeyChange","onBlur","removeEventListener","prop","keyCode","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","throttle","onMouseMove","onMouseLeave","onMouseOver","eventMatches","preventDefault","snapshot","addRobot","DatGUI","main","gui","dat","GUI","model","meshHelper","close","show","destroy","Obstacle","callback","entries","obs","obstacle","createGeometry","random","deleteIfExists","calculateZ","radX","radY","radZ","prefix","className","textContent","marginTop","elementLabel","CSS2DObject","removeLabel","addLabel","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","obj","startsWith","STLLoader","require","Robot","R","G","B","ambient","r","setRGB","heading","reality","REALITY","DEG2RAD","clickEvent","robot","alert","move","currentHeading","newHeading","rotationFlag","sqrt","pow","Tween","to","onUpdate","onComplete","delay","start","disp","querySelector","display","MQTTClient","updateChannel","client_id","toString","substring","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","publish","onMessageArrived","onConnectionLost","onFailure","channelHash","location","hash","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","destinationName","topic","entry","exists","createList","deleteAll","changeColor","reload","subTopic","message","payload","Message","pubTopic","send","raycaster","mouse","Main","clock","place","stats","Stats","dom","label","labelRenderer","environment","item","enable","onDocumentMouseDown","clientX","clientY","setFromCamera","intersects","intersectObjects","requestAnimationFrame","Detector","getElementById"],"mappings":"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","file":"0.app.js","sourcesContent":["import TWEEN from '@tweenjs/tween.js';\n\n// This object contains the state of the app\nexport default {\n    scale: 1,\n    arena: {\n        size: 300,\n        minX: -140,\n        maxX: 140,\n        minY: -140,\n        maxY: 140\n    },\n    mqtt: {\n        server: 'swarm-gui.tk',\n        port: 8883,\n        path: '/socket.io',\n        user: 'swarm_user',\n        password: 'swarm_usere15',\n        channel: 'v1'\n    },\n    mixedReality: {\n        obstacles: 'M',\n        robots: 'M'\n    },\n    isDev: true,\n    isShowingStats: true,\n    isShowingLables: false,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\n\nexport default function () {\n    let renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    return renderer;\n}\n\nexport const addLabel = (prefix, object, mesh) => {\n    if (mesh !== undefined) {\n        let element = document.createElement('div');\n        element.className = 'label';\n        element.textContent = `${prefix}[${object.id}]`;\n        element.style.marginTop = '-1.2em';\n        const elementLabel = new CSS2DObject(element);\n        elementLabel.name = `Label[${object.id}]`;\n        elementLabel.position.set(0, 1, 0);\n        mesh.add(elementLabel);\n        mesh.removeLabel = () => {\n            mesh.remove(elementLabel);\n        }\n    }\n};\n\nexport const removeLabel = (mesh) => {\n    if(mesh !== undefined && mesh.removeLabel !== undefined) {\n        mesh.removeLabel();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n    constructor(renderer) {\n        const width = renderer.domElement.width;\n        const height = renderer.domElement.height;\n\n        // Create and position a Perspective Camera\n        this.threeCamera = new THREE.PerspectiveCamera(\n            Config.camera.fov,\n            width / height,\n            Config.camera.near,\n            Config.camera.far\n        );\n        this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\n        this.threeCamera.up.set(0, 0, 1);\n\n        // Initial sizing\n        this.updateSize(renderer);\n\n        // Listeners\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\n    }\n\n    updateSize(renderer) {\n        // Update camera aspect ratio with window aspect ratio\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n        // Always call updateProjectionMatrix on camera change\n        this.threeCamera.updateProjectionMatrix();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import * as THREE from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n    constructor(camera, container) {\n        this.threeControls = new OrbitControls(camera, container);\n\n        this.init();\n    }\n\n    init() {\n        this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\n        this.threeControls.autoRotate = Config.controls.autoRotate;\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n        this.threeControls.minDistance = Config.controls.minDistance;\n        this.threeControls.maxDistance = Config.controls.maxDistance;\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n        this.threeControls.enableDamping = Config.controls.enableDamping;\n        this.threeControls.enableZoom = Config.controls.enableZoom;\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\n\n        this.threeControls.enableRotate = true;\n        this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\n        this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\n\n        /*this.threeControls.mouseButtons = {\n            LEFT: THREE.MOUSE.ROTATE,\n            MIDDLE: THREE.MOUSE.DOLLY,\n            RIGHT: THREE.MOUSE.PAN\n        }*/\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        var material = new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\n        ground.position.set(0, 0, 0);\n        ground.receiveShadow = true;\n        scene.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 30, 0x000000, 0x5b5b5b);\n        grid.rotation.x = -Math.PI / 2;\n        grid.scale.set(scene_scale, scene_scale, scene_scale);\n        grid.position.set(0, 0, 0);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        scene.add(grid);\n    }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nconst _keys = ['a', 'b', 'c'];\n\nfunction VertexNormalsHelper(object, size, hex) {\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n\n    const color = hex !== undefined ? hex : 0xff0000;\n\n    //\n\n    let nNormals = 0;\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        nNormals = objGeometry.attributes.normal.count;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n\n    geometry.setAttribute('position', positions);\n\n    LineSegments.call(this, geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n    let idx;\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        const vertices = objGeometry.vertices;\n\n        const faces = objGeometry.faces;\n\n        idx = 0;\n\n        for (let i = 0, l = faces.length; i < l; i++) {\n            const face = faces[i];\n\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                const vertex = vertices[face[_keys[j]]];\n                const normal = face.vertexNormals[j];\n\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\n                _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n                idx = idx + 1;\n\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n                idx = idx + 1;\n            }\n        }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        const objPos = objGeometry.attributes.position;\n        const objNorm = objGeometry.attributes.normal;\n\n        idx = 0;\n\n        // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n            _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n            idx = idx + 1;\n\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n            idx = idx + 1;\n        }\n    }\n\n    position.needsUpdate = true;\n};\n\nexport { VertexNormalsHelper };\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\n// Promise polyfill for IE\nimport { Promise } from 'es6-promise';\n\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\n// Using promises to preload textures prevents issues when applying textures to materials\n// before the textures have loaded.\nexport default class Texture {\n    constructor() {\n        // Prop that will contain all loaded textures\n        this.textures = {};\n    }\n\n    load() {\n        const loader = new THREE.TextureLoader();\n        const maxAnisotropy = Config.maxAnisotropy;\n        const imageFiles = Config.texture.imageFiles;\n        const promiseArray = [];\n\n        loader.setPath(Config.texture.path);\n\n        imageFiles.forEach((imageFile) => {\n            // Add an individual Promise for each image in array\n            promiseArray.push(\n                new Promise((resolve, reject) => {\n                    // Each Promise will attempt to load the image file\n                    loader.load(\n                        imageFile.image,\n                        // This gets called on load with the loaded texture\n                        (texture) => {\n                            texture.anisotropy = maxAnisotropy;\n\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\n                            const modelOBJ = {};\n                            modelOBJ[imageFile.name] = texture;\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture) resolve(modelOBJ);\n                        },\n                        Helpers.logProgress(),\n                        (xhr) => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\n                    );\n                })\n            );\n        });\n\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\n        return Promise.all(promiseArray).then(\n            (textures) => {\n                // Set the textures prop object to have name be the resolved texture\n                for (let i = 0; i < textures.length; i++) {\n                    this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\n                }\n            },\n            (reason) => console.log(reason)\n        );\n    }\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    AnimationClip,\n    Bone,\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    ClampToEdgeWrapping,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    FileLoader,\n    FrontSide,\n    Group,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Interpolant,\n    InterpolateDiscrete,\n    InterpolateLinear,\n    Line,\n    LineBasicMaterial,\n    LineLoop,\n    LineSegments,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipmapNearestFilter,\n    Loader,\n    LoaderUtils,\n    Material,\n    MathUtils,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    MeshPhysicalMaterial,\n    MeshStandardMaterial,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    NumberKeyframeTrack,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Points,\n    PointsMaterial,\n    PropertyBinding,\n    QuaternionKeyframeTrack,\n    RGBAFormat,\n    RGBFormat,\n    RepeatWrapping,\n    Skeleton,\n    SkinnedMesh,\n    Sphere,\n    SpotLight,\n    TangentSpaceNormalMap,\n    TextureLoader,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    Vector2,\n    Vector3,\n    VectorKeyframeTrack,\n    sRGBEncoding\n} from 'three';\n\nconst GLTFLoader = (function () {\n    function GLTFLoader(manager) {\n        Loader.call(this, manager);\n\n        this.dracoLoader = null;\n        this.ddsLoader = null;\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n        constructor: GLTFLoader,\n\n        load: function (url, onLoad, onProgress, onError) {\n            var scope = this;\n\n            var resourcePath;\n\n            if (this.resourcePath !== '') {\n                resourcePath = this.resourcePath;\n            } else if (this.path !== '') {\n                resourcePath = this.path;\n            } else {\n                resourcePath = LoaderUtils.extractUrlBase(url);\n            }\n\n            // Tells the LoadingManager to track an extra item, which resolves after\n            // the model is fully loaded. This means the count of items loaded will\n            // be incorrect, but ensures manager.onLoad() does not fire early.\n            scope.manager.itemStart(url);\n\n            var _onError = function (e) {\n                if (onError) {\n                    onError(e);\n                } else {\n                    console.error(e);\n                }\n\n                scope.manager.itemError(url);\n                scope.manager.itemEnd(url);\n            };\n\n            var loader = new FileLoader(scope.manager);\n\n            loader.setPath(this.path);\n            loader.setResponseType('arraybuffer');\n\n            if (scope.crossOrigin === 'use-credentials') {\n                loader.setWithCredentials(true);\n            }\n\n            loader.load(\n                url,\n                function (data) {\n                    try {\n                        scope.parse(\n                            data,\n                            resourcePath,\n                            function (gltf) {\n                                onLoad(gltf);\n\n                                scope.manager.itemEnd(url);\n                            },\n                            _onError\n                        );\n                    } catch (e) {\n                        _onError(e);\n                    }\n                },\n                onProgress,\n                _onError\n            );\n        },\n\n        setDRACOLoader: function (dracoLoader) {\n            this.dracoLoader = dracoLoader;\n            return this;\n        },\n\n        setDDSLoader: function (ddsLoader) {\n            this.ddsLoader = ddsLoader;\n            return this;\n        },\n\n        parse: function (data, path, onLoad, onError) {\n            var content;\n            var extensions = {};\n\n            if (typeof data === 'string') {\n                content = data;\n            } else {\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n                    try {\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n                    } catch (error) {\n                        if (onError) onError(error);\n                        return;\n                    }\n\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n                } else {\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\n                }\n            }\n\n            var json = JSON.parse(content);\n\n            if (json.asset === undefined || json.asset.version[0] < 2) {\n                if (onError)\n                    onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n                return;\n            }\n\n            if (json.extensionsUsed) {\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\n                    var extensionName = json.extensionsUsed[i];\n                    var extensionsRequired = json.extensionsRequired || [];\n\n                    switch (extensionName) {\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                            extensions[extensionName] = new GLTFLightsExtension(json);\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n                            extensions[extensionName] = new GLTFMaterialsClearcoatExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                            extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n                            break;\n\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\n                            extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n                            break;\n\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                            extensions[extensionName] = new GLTFTextureTransformExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                            extensions[extensionName] = new GLTFMeshQuantizationExtension();\n                            break;\n\n                        default:\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\n                                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n                            }\n                    }\n                }\n            }\n\n            var parser = new GLTFParser(json, extensions, {\n                path: path || this.resourcePath || '',\n                crossOrigin: this.crossOrigin,\n                manager: this.manager\n            });\n\n            parser.parse(onLoad, onError);\n        }\n    });\n\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n        var objects = {};\n\n        return {\n            get: function (key) {\n                return objects[key];\n            },\n\n            add: function (key, object) {\n                objects[key] = object;\n            },\n\n            remove: function (key) {\n                delete objects[key];\n            },\n\n            removeAll: function () {\n                objects = {};\n            }\n        };\n    }\n\n    /*********************************/\n    /********** EXTENSIONS ***********/\n    /*********************************/\n\n    var EXTENSIONS = {\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n    function GLTFTextureDDSExtension(ddsLoader) {\n        if (!ddsLoader) {\n            throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n        }\n\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n        this.ddsLoader = ddsLoader;\n    }\n\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n    function GLTFLightsExtension(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n        this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n        var lightDef = this.lightDefs[lightIndex];\n        var lightNode;\n\n        var color = new Color(0xffffff);\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n        switch (lightDef.type) {\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                lightNode.distance = range;\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.distance = range;\n                // Handle spotlight properties.\n                lightDef.spot = lightDef.spot || {};\n                lightDef.spot.innerConeAngle =\n                    lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n                lightDef.spot.outerConeAngle =\n                    lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n                lightNode.angle = lightDef.spot.outerConeAngle;\n                lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            default:\n                throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n        }\n\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n        // here, because node-level parsing will only override position if explicitly specified.\n        lightNode.position.set(0, 0, 0);\n\n        lightNode.decay = 2;\n\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\n\n        return Promise.resolve(lightNode);\n    };\n\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n    function GLTFMaterialsUnlitExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n        return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        if (metallicRoughness) {\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n    function GLTFMaterialsClearcoatExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n        return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        var extension = materialDef.extensions[this.name];\n\n        if (extension.clearcoatFactor !== undefined) {\n            materialParams.clearcoat = extension.clearcoatFactor;\n        }\n\n        if (extension.clearcoatTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n        }\n\n        if (extension.clearcoatRoughnessFactor !== undefined) {\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n        }\n\n        if (extension.clearcoatRoughnessTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture)\n            );\n        }\n\n        if (extension.clearcoatNormalTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\n                var scale = extension.clearcoatNormalTexture.scale;\n\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /* BINARY EXTENSION */\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n    function GLTFBinaryExtension(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n        } else if (this.header.version < 2.0) {\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n                this.content = LoaderUtils.decodeText(contentArray);\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n        }\n\n        if (this.content === null) {\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\n        }\n    }\n\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n        if (!dracoLoader) {\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n        }\n\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n        this.json = json;\n        this.dracoLoader = dracoLoader;\n        this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n        var json = this.json;\n        var dracoLoader = this.dracoLoader;\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\n        var threeAttributeMap = {};\n        var attributeNormalizedMap = {};\n        var attributeTypeMap = {};\n\n        for (var attributeName in gltfAttributeMap) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n        }\n\n        for (attributeName in primitive.attributes) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            if (gltfAttributeMap[attributeName] !== undefined) {\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n                attributeTypeMap[threeAttributeName] = componentType;\n                attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n            }\n        }\n\n        return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n            return new Promise(function (resolve) {\n                dracoLoader.decodeDracoFile(\n                    bufferView,\n                    function (geometry) {\n                        for (var attributeName in geometry.attributes) {\n                            var attribute = geometry.attributes[attributeName];\n                            var normalized = attributeNormalizedMap[attributeName];\n\n                            if (normalized !== undefined) attribute.normalized = normalized;\n                        }\n\n                        resolve(geometry);\n                    },\n                    threeAttributeMap,\n                    attributeTypeMap\n                );\n            });\n        });\n    };\n\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n    function GLTFTextureTransformExtension() {\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n        texture = texture.clone();\n\n        if (transform.offset !== undefined) {\n            texture.offset.fromArray(transform.offset);\n        }\n\n        if (transform.rotation !== undefined) {\n            texture.rotation = transform.rotation;\n        }\n\n        if (transform.scale !== undefined) {\n            texture.repeat.fromArray(transform.scale);\n        }\n\n        if (transform.texCoord !== undefined) {\n            console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n        }\n\n        texture.needsUpdate = true;\n\n        return texture;\n    };\n\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n    function GLTFMeshStandardSGMaterial(params) {\n        MeshStandardMaterial.call(this);\n\n        this.isGLTFSpecularGlossinessMaterial = true;\n\n        //various chunks that need replacing\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\n            '\\n'\n        );\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n            'material.specularRoughness += geometryRoughness;',\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n            'material.specularColor = specularFactor.rgb;'\n        ].join('\\n');\n\n        var uniforms = {\n            specular: { value: new Color().setHex(0xffffff) },\n            glossiness: { value: 1 },\n            specularMap: { value: null },\n            glossinessMap: { value: null }\n        };\n\n        this._extraUniforms = uniforms;\n\n        // please see #14031 or #13198 for an alternate approach\n        this.onBeforeCompile = function (shader) {\n            for (var uniformName in uniforms) {\n                shader.uniforms[uniformName] = uniforms[uniformName];\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float metalness;',\n                'uniform float glossiness;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_pars_fragment>',\n                specularMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_pars_fragment>',\n                glossinessMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_fragment>',\n                specularMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_fragment>',\n                glossinessMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <lights_physical_fragment>',\n                lightPhysicalFragmentChunk\n            );\n        };\n\n        /*eslint-disable*/\n        Object.defineProperties(this, {\n            specular: {\n                get: function () {\n                    return uniforms.specular.value;\n                },\n                set: function (v) {\n                    uniforms.specular.value = v;\n                }\n            },\n            specularMap: {\n                get: function () {\n                    return uniforms.specularMap.value;\n                },\n                set: function (v) {\n                    uniforms.specularMap.value = v;\n                }\n            },\n            glossiness: {\n                get: function () {\n                    return uniforms.glossiness.value;\n                },\n                set: function (v) {\n                    uniforms.glossiness.value = v;\n                }\n            },\n            glossinessMap: {\n                get: function () {\n                    return uniforms.glossinessMap.value;\n                },\n                set: function (v) {\n                    uniforms.glossinessMap.value = v;\n                    //how about something like this - @pailhead\n                    if (v) {\n                        this.defines.USE_GLOSSINESSMAP = '';\n                        // set USE_ROUGHNESSMAP to enable vUv\n                        this.defines.USE_ROUGHNESSMAP = '';\n                    } else {\n                        delete this.defines.USE_ROUGHNESSMAP;\n                        delete this.defines.USE_GLOSSINESSMAP;\n                    }\n                }\n            }\n        });\n\n        /*eslint-enable*/\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n\n        this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n        MeshStandardMaterial.prototype.copy.call(this, source);\n        this.specularMap = source.specularMap;\n        this.specular.copy(source.specular);\n        this.glossinessMap = source.glossinessMap;\n        this.glossiness = source.glossiness;\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n        return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n        return {\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n            specularGlossinessParams: [\n                'color',\n                'map',\n                'lightMap',\n                'lightMapIntensity',\n                'aoMap',\n                'aoMapIntensity',\n                'emissive',\n                'emissiveIntensity',\n                'emissiveMap',\n                'bumpMap',\n                'bumpScale',\n                'normalMap',\n                'normalMapType',\n                'displacementMap',\n                'displacementScale',\n                'displacementBias',\n                'specularMap',\n                'specular',\n                'glossinessMap',\n                'glossiness',\n                'alphaMap',\n                'envMap',\n                'envMapIntensity',\n                'refractionRatio'\n            ],\n\n            getMaterialType: function () {\n                return GLTFMeshStandardSGMaterial;\n            },\n\n            extendParams: function (materialParams, materialDef, parser) {\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n                materialParams.color = new Color(1.0, 1.0, 1.0);\n                materialParams.opacity = 1.0;\n\n                var pending = [];\n\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n                    var array = pbrSpecularGlossiness.diffuseFactor;\n\n                    materialParams.color.fromArray(array);\n                    materialParams.opacity = array[3];\n                }\n\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n                    pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n                }\n\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\n                materialParams.glossiness =\n                    pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n                    materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n                    pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n                    pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n                }\n\n                return Promise.all(pending);\n            },\n\n            createMaterial: function (materialParams) {\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\n                material.fog = true;\n\n                material.color = materialParams.color;\n\n                material.map = materialParams.map === undefined ? null : materialParams.map;\n\n                material.lightMap = null;\n                material.lightMapIntensity = 1.0;\n\n                material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n                material.aoMapIntensity = 1.0;\n\n                material.emissive = materialParams.emissive;\n                material.emissiveIntensity = 1.0;\n                material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n                material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n                material.bumpScale = 1;\n\n                material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n                material.normalMapType = TangentSpaceNormalMap;\n\n                if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n\n                material.displacementMap = null;\n                material.displacementScale = 1;\n                material.displacementBias = 0;\n\n                material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n                material.specular = materialParams.specular;\n\n                material.glossinessMap =\n                    materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n                material.glossiness = materialParams.glossiness;\n\n                material.alphaMap = null;\n\n                material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n                material.envMapIntensity = 1.0;\n\n                material.refractionRatio = 0.98;\n\n                return material;\n            }\n        };\n    }\n\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n    function GLTFMeshQuantizationExtension() {\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n\n    /*********************************/\n    /********** INTERPOLATION ********/\n    /*********************************/\n\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n        Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n        // Copies a sample value to the result buffer. See description of glTF\n        // CUBICSPLINE values layout in interpolate_() function below.\n\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            valueSize = this.valueSize,\n            offset = index * valueSize * 3 + valueSize;\n\n        for (var i = 0; i !== valueSize; i++) {\n            result[i] = values[offset + i];\n        }\n\n        return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n        var result = this.resultBuffer;\n        var values = this.sampleValues;\n        var stride = this.valueSize;\n\n        var stride2 = stride * 2;\n        var stride3 = stride * 3;\n\n        var td = t1 - t0;\n\n        var p = (t - t0) / td;\n        var pp = p * p;\n        var ppp = pp * p;\n\n        var offset1 = i1 * stride3;\n        var offset0 = offset1 - stride3;\n\n        var s2 = -2 * ppp + 3 * pp;\n        var s3 = ppp - pp;\n        var s0 = 1 - s2;\n        var s1 = s3 - pp + p;\n\n        // Layout of keyframe output values for CUBICSPLINE animations:\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n        for (var i = 0; i !== stride; i++) {\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n        }\n\n        return result;\n    };\n\n    /*********************************/\n    /********** INTERNALS ************/\n    /*********************************/\n\n    /* CONSTANTS */\n\n    var WEBGL_CONSTANTS = {\n        FLOAT: 5126,\n        //FLOAT_MAT2: 35674,\n        FLOAT_MAT3: 35675,\n        FLOAT_MAT4: 35676,\n        FLOAT_VEC2: 35664,\n        FLOAT_VEC3: 35665,\n        FLOAT_VEC4: 35666,\n        LINEAR: 9729,\n        REPEAT: 10497,\n        SAMPLER_2D: 35678,\n        POINTS: 0,\n        LINES: 1,\n        LINE_LOOP: 2,\n        LINE_STRIP: 3,\n        TRIANGLES: 4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN: 6,\n        UNSIGNED_BYTE: 5121,\n        UNSIGNED_SHORT: 5123\n    };\n\n    var WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    var WEBGL_FILTERS = {\n        9728: NearestFilter,\n        9729: LinearFilter,\n        9984: NearestMipmapNearestFilter,\n        9985: LinearMipmapNearestFilter,\n        9986: NearestMipmapLinearFilter,\n        9987: LinearMipmapLinearFilter\n    };\n\n    var WEBGL_WRAPPINGS = {\n        33071: ClampToEdgeWrapping,\n        33648: MirroredRepeatWrapping,\n        10497: RepeatWrapping\n    };\n\n    var WEBGL_TYPE_SIZES = {\n        SCALAR: 1,\n        VEC2: 2,\n        VEC3: 3,\n        VEC4: 4,\n        MAT2: 4,\n        MAT3: 9,\n        MAT4: 16\n    };\n\n    var ATTRIBUTES = {\n        POSITION: 'position',\n        NORMAL: 'normal',\n        TANGENT: 'tangent',\n        TEXCOORD_0: 'uv',\n        TEXCOORD_1: 'uv2',\n        COLOR_0: 'color',\n        WEIGHTS_0: 'skinWeight',\n        JOINTS_0: 'skinIndex'\n    };\n\n    var PATH_PROPERTIES = {\n        scale: 'scale',\n        translation: 'position',\n        rotation: 'quaternion',\n        weights: 'morphTargetInfluences'\n    };\n\n    var INTERPOLATION = {\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n        // keyframe track will be initialized with a default interpolation type, then modified.\n        LINEAR: InterpolateLinear,\n        STEP: InterpolateDiscrete\n    };\n\n    var ALPHA_MODES = {\n        OPAQUE: 'OPAQUE',\n        MASK: 'MASK',\n        BLEND: 'BLEND'\n    };\n\n    var MIME_TYPE_FORMATS = {\n        'image/png': RGBAFormat,\n        'image/jpeg': RGBFormat\n    };\n\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return '';\n\n        // Host Relative URL\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n            // eslint-disable-next-line no-useless-escape\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) return url;\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) return url;\n\n        // Relative URL\n        return path + url;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n    function createDefaultMaterial(cache) {\n        if (cache['DefaultMaterial'] === undefined) {\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\n                color: 0xffffff,\n                emissive: 0x000000,\n                metalness: 1,\n                roughness: 1,\n                transparent: false,\n                depthTest: true,\n                side: FrontSide\n            });\n        }\n\n        return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n        // Add unknown glTF extensions to an object's userData.\n\n        for (var name in objectDef.extensions) {\n            if (knownExtensions[name] === undefined) {\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\n            }\n        }\n    }\n\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n    function assignExtrasToUserData(object, gltfDef) {\n        if (gltfDef.extras !== undefined) {\n            if (typeof gltfDef.extras === 'object') {\n                Object.assign(object.userData, gltfDef.extras);\n            } else {\n                console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n            }\n        }\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addMorphTargets(geometry, targets, parser) {\n        var hasMorphPosition = false;\n        var hasMorphNormal = false;\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (target.POSITION !== undefined) hasMorphPosition = true;\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\n\n            if (hasMorphPosition && hasMorphNormal) break;\n        }\n\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n        var pendingPositionAccessors = [];\n        var pendingNormalAccessors = [];\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (hasMorphPosition) {\n                var pendingAccessor =\n                    target.POSITION !== undefined\n                        ? parser.getDependency('accessor', target.POSITION)\n                        : geometry.attributes.position;\n\n                pendingPositionAccessors.push(pendingAccessor);\n            }\n\n            if (hasMorphNormal) {\n                var pendingAccessor =\n                    target.NORMAL !== undefined\n                        ? parser.getDependency('accessor', target.NORMAL)\n                        : geometry.attributes.normal;\n\n                pendingNormalAccessors.push(pendingAccessor);\n            }\n        }\n\n        return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\n            accessors\n        ) {\n            var morphPositions = accessors[0];\n            var morphNormals = accessors[1];\n\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n            geometry.morphTargetsRelative = true;\n\n            return geometry;\n        });\n    }\n\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n    function updateMorphTargets(mesh, meshDef) {\n        mesh.updateMorphTargets();\n\n        if (meshDef.weights !== undefined) {\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\n            }\n        }\n\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n            var targetNames = meshDef.extras.targetNames;\n\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\n                mesh.morphTargetDictionary = {};\n\n                for (var i = 0, il = targetNames.length; i < il; i++) {\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\n                }\n            } else {\n                console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n            }\n        }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n        var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n        var geometryKey;\n\n        if (dracoExtension) {\n            geometryKey =\n                'draco:' +\n                dracoExtension.bufferView +\n                ':' +\n                dracoExtension.indices +\n                ':' +\n                createAttributesKey(dracoExtension.attributes);\n        } else {\n            geometryKey =\n                primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n        }\n\n        return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n        var attributesKey = '';\n\n        var keys = Object.keys(attributes).sort();\n\n        for (var i = 0, il = keys.length; i < il; i++) {\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n        }\n\n        return attributesKey;\n    }\n\n    /* GLTF PARSER */\n\n    function GLTFParser(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n\n        // BufferGeometry caching\n        this.primitiveCache = {};\n\n        this.textureLoader = new TextureLoader(this.options.manager);\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n        this.fileLoader = new FileLoader(this.options.manager);\n        this.fileLoader.setResponseType('arraybuffer');\n\n        if (this.options.crossOrigin === 'use-credentials') {\n            this.fileLoader.setWithCredentials(true);\n        }\n    }\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Mark the special nodes/meshes in json for efficient parse\n        this.markDefs();\n\n        Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\n            .then(function (dependencies) {\n                var result = {\n                    scene: dependencies[0][json.scene || 0],\n                    scenes: dependencies[0],\n                    animations: dependencies[1],\n                    cameras: dependencies[2],\n                    asset: json.asset,\n                    parser: parser,\n                    userData: {}\n                };\n\n                addUnknownExtensionsToUserData(extensions, result, json);\n\n                assignExtrasToUserData(result, json);\n\n                onLoad(result);\n            })\n            .catch(onError);\n    };\n\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n    GLTFParser.prototype.markDefs = function () {\n        var nodeDefs = this.json.nodes || [];\n        var skinDefs = this.json.skins || [];\n        var meshDefs = this.json.meshes || [];\n\n        var meshReferences = {};\n        var meshUses = {};\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n            var joints = skinDefs[skinIndex].joints;\n\n            for (var i = 0, il = joints.length; i < il; i++) {\n                nodeDefs[joints[i]].isBone = true;\n            }\n        }\n\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n        // avoid having more than one Mesh with the same name, count\n        // references and rename instances below.\n        //\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n        for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n            var nodeDef = nodeDefs[nodeIndex];\n\n            if (nodeDef.mesh !== undefined) {\n                if (meshReferences[nodeDef.mesh] === undefined) {\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n                }\n\n                meshReferences[nodeDef.mesh]++;\n\n                // Nothing in the mesh definition indicates whether it is\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\n                // to mark SkinnedMesh if node has skin.\n                if (nodeDef.skin !== undefined) {\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n                }\n            }\n        }\n\n        this.json.meshReferences = meshReferences;\n        this.json.meshUses = meshUses;\n    };\n\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n    GLTFParser.prototype.getDependency = function (type, index) {\n        var cacheKey = type + ':' + index;\n        var dependency = this.cache.get(cacheKey);\n\n        if (!dependency) {\n            switch (type) {\n                case 'scene':\n                    dependency = this.loadScene(index);\n                    break;\n\n                case 'node':\n                    dependency = this.loadNode(index);\n                    break;\n\n                case 'mesh':\n                    dependency = this.loadMesh(index);\n                    break;\n\n                case 'accessor':\n                    dependency = this.loadAccessor(index);\n                    break;\n\n                case 'bufferView':\n                    dependency = this.loadBufferView(index);\n                    break;\n\n                case 'buffer':\n                    dependency = this.loadBuffer(index);\n                    break;\n\n                case 'material':\n                    dependency = this.loadMaterial(index);\n                    break;\n\n                case 'texture':\n                    dependency = this.loadTexture(index);\n                    break;\n\n                case 'skin':\n                    dependency = this.loadSkin(index);\n                    break;\n\n                case 'animation':\n                    dependency = this.loadAnimation(index);\n                    break;\n\n                case 'camera':\n                    dependency = this.loadCamera(index);\n                    break;\n\n                case 'light':\n                    dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n                    break;\n\n                default:\n                    throw new Error('Unknown type: ' + type);\n            }\n\n            this.cache.add(cacheKey, dependency);\n        }\n\n        return dependency;\n    };\n\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n    GLTFParser.prototype.getDependencies = function (type) {\n        var dependencies = this.cache.get(type);\n\n        if (!dependencies) {\n            var parser = this;\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n            dependencies = Promise.all(\n                defs.map(function (def, index) {\n                    return parser.getDependency(type, index);\n                })\n            );\n\n            this.cache.add(type, dependencies);\n        }\n\n        return dependencies;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n        var bufferDef = this.json.buffers[bufferIndex];\n        var loader = this.fileLoader;\n\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n            throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n        }\n\n        // If present, GLB container is required to be the first buffer.\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n        }\n\n        var options = this.options;\n\n        return new Promise(function (resolve, reject) {\n            loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n                reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n            });\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n            var byteLength = bufferViewDef.byteLength || 0;\n            var byteOffset = bufferViewDef.byteOffset || 0;\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var accessorDef = this.json.accessors[accessorIndex];\n\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n            // Ignore empty accessors, which may be used to declare runtime\n            // information about attributes coming from another source (e.g. Draco\n            // compression extension).\n            return Promise.resolve(null);\n        }\n\n        var pendingBufferViews = [];\n\n        if (accessorDef.bufferView !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n        } else {\n            pendingBufferViews.push(null);\n        }\n\n        if (accessorDef.sparse !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n        }\n\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\n            var bufferView = bufferViews[0];\n\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n            var itemBytes = elementBytes * itemSize;\n            var byteOffset = accessorDef.byteOffset || 0;\n            var byteStride =\n                accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n            var normalized = accessorDef.normalized === true;\n            var array, bufferAttribute;\n\n            // The buffer is not interleaved if the stride is the item size in bytes.\n            if (byteStride && byteStride !== itemBytes) {\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n                // This makes sure that IBA.count reflects accessor.count properly\n                var ibSlice = Math.floor(byteOffset / byteStride);\n                var ibCacheKey =\n                    'InterleavedBuffer:' +\n                    accessorDef.bufferView +\n                    ':' +\n                    accessorDef.componentType +\n                    ':' +\n                    ibSlice +\n                    ':' +\n                    accessorDef.count;\n                var ib = parser.cache.get(ibCacheKey);\n\n                if (!ib) {\n                    array = new TypedArray(\n                        bufferView,\n                        ibSlice * byteStride,\n                        (accessorDef.count * byteStride) / elementBytes\n                    );\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n                    parser.cache.add(ibCacheKey, ib);\n                }\n\n                bufferAttribute = new InterleavedBufferAttribute(\n                    ib,\n                    itemSize,\n                    (byteOffset % byteStride) / elementBytes,\n                    normalized\n                );\n            } else {\n                if (bufferView === null) {\n                    array = new TypedArray(accessorDef.count * itemSize);\n                } else {\n                    array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n                }\n\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n            }\n\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n            if (accessorDef.sparse !== undefined) {\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n                var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n                var sparseIndices = new TypedArrayIndices(\n                    bufferViews[1],\n                    byteOffsetIndices,\n                    accessorDef.sparse.count * itemSizeIndices\n                );\n                var sparseValues = new TypedArray(\n                    bufferViews[2],\n                    byteOffsetValues,\n                    accessorDef.sparse.count * itemSize\n                );\n\n                if (bufferView !== null) {\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                    bufferAttribute = new BufferAttribute(\n                        bufferAttribute.array.slice(),\n                        bufferAttribute.itemSize,\n                        bufferAttribute.normalized\n                    );\n                }\n\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\n                    var index = sparseIndices[i];\n\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                    if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                    if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                    if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                    if (itemSize >= 5)\n                        throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n                }\n            }\n\n            return bufferAttribute;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n        var parser = this;\n        var json = this.json;\n        var options = this.options;\n        var textureLoader = this.textureLoader;\n\n        var URL = self.URL || self.webkitURL;\n\n        var textureDef = json.textures[textureIndex];\n\n        var textureExtensions = textureDef.extensions || {};\n\n        var source;\n\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n        } else {\n            source = json.images[textureDef.source];\n        }\n\n        var sourceURI = source.uri;\n        var isObjectURL = false;\n\n        if (source.bufferView !== undefined) {\n            // Load binary image data from bufferView, if provided.\n\n            sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n                isObjectURL = true;\n                var blob = new Blob([bufferView], { type: source.mimeType });\n                sourceURI = URL.createObjectURL(blob);\n                return sourceURI;\n            });\n        }\n\n        return Promise.resolve(sourceURI)\n            .then(function (sourceURI) {\n                // Load Texture resource.\n\n                var loader = options.manager.getHandler(sourceURI);\n\n                if (!loader) {\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n                        : textureLoader;\n                }\n\n                return new Promise(function (resolve, reject) {\n                    loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n                });\n            })\n            .then(function (texture) {\n                // Clean up resources and configure Texture.\n\n                if (isObjectURL === true) {\n                    URL.revokeObjectURL(sourceURI);\n                }\n\n                texture.flipY = false;\n\n                if (textureDef.name) texture.name = textureDef.name;\n\n                // Ignore unknown mime types, like DDS files.\n                if (source.mimeType in MIME_TYPE_FORMATS) {\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\n                }\n\n                var samplers = json.samplers || {};\n                var sampler = samplers[textureDef.sampler] || {};\n\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n                texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n                return texture;\n            });\n    };\n\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n        var parser = this;\n\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\n            if (!texture.isCompressedTexture) {\n                switch (mapName) {\n                    case 'aoMap':\n                    case 'emissiveMap':\n                    case 'metalnessMap':\n                    case 'normalMap':\n                    case 'roughnessMap':\n                        texture.format = RGBFormat;\n                        break;\n                }\n            }\n\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n            if (\n                mapDef.texCoord !== undefined &&\n                mapDef.texCoord != 0 &&\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\n            ) {\n                console.warn(\n                    'THREE.GLTFLoader: Custom UV set ' +\n                        mapDef.texCoord +\n                        ' for texture ' +\n                        mapName +\n                        ' not yet supported.'\n                );\n            }\n\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n                var transform =\n                    mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n                if (transform) {\n                    texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n                }\n            }\n\n            materialParams[mapName] = texture;\n        });\n    };\n\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n        var geometry = mesh.geometry;\n        var material = mesh.material;\n\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\n        var useVertexColors = geometry.attributes.color !== undefined;\n        var useFlatShading = geometry.attributes.normal === undefined;\n        var useSkinning = mesh.isSkinnedMesh === true;\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n        var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n        if (mesh.isPoints) {\n            var cacheKey = 'PointsMaterial:' + material.uuid;\n\n            var pointsMaterial = this.cache.get(cacheKey);\n\n            if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n                this.cache.add(cacheKey, pointsMaterial);\n            }\n\n            material = pointsMaterial;\n        } else if (mesh.isLine) {\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n            var lineMaterial = this.cache.get(cacheKey);\n\n            if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n\n                this.cache.add(cacheKey, lineMaterial);\n            }\n\n            material = lineMaterial;\n        }\n\n        // Clone the material if it will be modified\n        if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n            if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n            if (useSkinning) cacheKey += 'skinning:';\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\n            if (useVertexColors) cacheKey += 'vertex-colors:';\n            if (useFlatShading) cacheKey += 'flat-shading:';\n            if (useMorphTargets) cacheKey += 'morph-targets:';\n            if (useMorphNormals) cacheKey += 'morph-normals:';\n\n            var cachedMaterial = this.cache.get(cacheKey);\n\n            if (!cachedMaterial) {\n                cachedMaterial = material.clone();\n\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\n                if (useVertexColors) cachedMaterial.vertexColors = true;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n\n                this.cache.add(cacheKey, cachedMaterial);\n            }\n\n            material = cachedMaterial;\n        }\n\n        // workarounds for mesh and geometry\n\n        if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n            geometry.setAttribute('uv2', geometry.attributes.uv);\n        }\n\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        if (material.normalScale && !useVertexTangents) {\n            material.normalScale.y = -material.normalScale.y;\n        }\n\n        if (material.clearcoatNormalScale && !useVertexTangents) {\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n        }\n\n        mesh.material = material;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n        var materialDef = json.materials[materialIndex];\n\n        var materialType;\n        var materialParams = {};\n        var materialExtensions = materialDef.extensions || {};\n\n        var pending = [];\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n            var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n            materialType = sgExtension.getMaterialType();\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n            materialType = kmuExtension.getMaterialType();\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n        } else {\n            // Specification:\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n            materialType = MeshStandardMaterial;\n\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n            materialParams.color = new Color(1.0, 1.0, 1.0);\n            materialParams.opacity = 1.0;\n\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n\n            materialParams.metalness =\n                metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n            materialParams.roughness =\n                metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n                pending.push(\n                    parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n            }\n        }\n\n        if (materialDef.doubleSided === true) {\n            materialParams.side = DoubleSide;\n        }\n\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n        if (alphaMode === ALPHA_MODES.BLEND) {\n            materialParams.transparent = true;\n\n            // See: https://github.com/mrdoob/three.js/issues/17706\n            materialParams.depthWrite = false;\n        } else {\n            materialParams.transparent = false;\n\n            if (alphaMode === ALPHA_MODES.MASK) {\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n            }\n        }\n\n        if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n\n            materialParams.normalScale = new Vector2(1, 1);\n\n            if (materialDef.normalTexture.scale !== undefined) {\n                materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n            }\n        }\n\n        if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n            if (materialDef.occlusionTexture.strength !== undefined) {\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n            }\n        }\n\n        if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n\n        if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n        }\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\n            materialType = clearcoatExtension.getMaterialType();\n            pending.push(clearcoatExtension.extendParams(materialParams, { extensions: materialExtensions }, parser));\n        }\n\n        return Promise.all(pending).then(function () {\n            var material;\n\n            if (materialType === GLTFMeshStandardSGMaterial) {\n                material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n            } else {\n                material = new materialType(materialParams);\n            }\n\n            if (materialDef.name) material.name = materialDef.name;\n\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n            if (material.map) material.map.encoding = sRGBEncoding;\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n            assignExtrasToUserData(material, materialDef);\n\n            if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n            return material;\n        });\n    };\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n    function computeBounds(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var box = new Box3();\n\n        if (attributes.POSITION !== undefined) {\n            var accessor = parser.json.accessors[attributes.POSITION];\n\n            var min = accessor.min;\n            var max = accessor.max;\n\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n                box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n            } else {\n                console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\n                return;\n            }\n        } else {\n            return;\n        }\n\n        var targets = primitiveDef.targets;\n\n        if (targets !== undefined) {\n            var maxDisplacement = new Vector3();\n            var vector = new Vector3();\n\n            for (var i = 0, il = targets.length; i < il; i++) {\n                var target = targets[i];\n\n                if (target.POSITION !== undefined) {\n                    var accessor = parser.json.accessors[target.POSITION];\n                    var min = accessor.min;\n                    var max = accessor.max;\n\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n                    if (min !== undefined && max !== undefined) {\n                        // we need to get max of absolute components because target weight is [-1,1]\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n                        maxDisplacement.max(vector);\n                    } else {\n                        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n                    }\n                }\n            }\n\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n            box.expandByVector(maxDisplacement);\n        }\n\n        geometry.boundingBox = box;\n\n        var sphere = new Sphere();\n\n        box.getCenter(sphere.center);\n        sphere.radius = box.min.distanceTo(box.max) / 2;\n\n        geometry.boundingSphere = sphere;\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var pending = [];\n\n        function assignAttributeAccessor(accessorIndex, attributeName) {\n            return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n                geometry.setAttribute(attributeName, accessor);\n            });\n        }\n\n        for (var gltfAttributeName in attributes) {\n            var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n            // Skip attributes already provided by e.g. Draco extension.\n            if (threeAttributeName in geometry.attributes) continue;\n\n            pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n        }\n\n        if (primitiveDef.indices !== undefined && !geometry.index) {\n            var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n                geometry.setIndex(accessor);\n            });\n\n            pending.push(accessor);\n        }\n\n        assignExtrasToUserData(geometry, primitiveDef);\n\n        computeBounds(geometry, primitiveDef, parser);\n\n        return Promise.all(pending).then(function () {\n            return primitiveDef.targets !== undefined\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\n                : geometry;\n        });\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n    function toTrianglesDrawMode(geometry, drawMode) {\n        var index = geometry.getIndex();\n\n        // generate index if not present\n\n        if (index === null) {\n            var indices = [];\n\n            var position = geometry.getAttribute('position');\n\n            if (position !== undefined) {\n                for (var i = 0; i < position.count; i++) {\n                    indices.push(i);\n                }\n\n                geometry.setIndex(indices);\n                index = geometry.getIndex();\n            } else {\n                console.error(\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n                );\n                return geometry;\n            }\n        }\n\n        //\n\n        var numberOfTriangles = index.count - 2;\n        var newIndices = [];\n\n        if (drawMode === TriangleFanDrawMode) {\n            // gl.TRIANGLE_FAN\n\n            for (var i = 1; i <= numberOfTriangles; i++) {\n                newIndices.push(index.getX(0));\n                newIndices.push(index.getX(i));\n                newIndices.push(index.getX(i + 1));\n            }\n        } else {\n            // gl.TRIANGLE_STRIP\n\n            for (var i = 0; i < numberOfTriangles; i++) {\n                if (i % 2 === 0) {\n                    newIndices.push(index.getX(i));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i + 2));\n                } else {\n                    newIndices.push(index.getX(i + 2));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i));\n                }\n            }\n        }\n\n        if (newIndices.length / 3 !== numberOfTriangles) {\n            console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n        }\n\n        // build final geometry\n\n        var newGeometry = geometry.clone();\n        newGeometry.setIndex(newIndices);\n\n        return newGeometry;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n        var parser = this;\n        var extensions = this.extensions;\n        var cache = this.primitiveCache;\n\n        function createDracoPrimitive(primitive) {\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                .decodePrimitive(primitive, parser)\n                .then(function (geometry) {\n                    return addPrimitiveAttributes(geometry, primitive, parser);\n                });\n        }\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var primitive = primitives[i];\n            var cacheKey = createPrimitiveKey(primitive);\n\n            // See if we've already created this geometry\n            var cached = cache[cacheKey];\n\n            if (cached) {\n                // Use the cached geometry if it exists\n                pending.push(cached.promise);\n            } else {\n                var geometryPromise;\n\n                if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n                    // Use DRACO geometry if available\n                    geometryPromise = createDracoPrimitive(primitive);\n                } else {\n                    // Otherwise create a new geometry\n                    geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n                }\n\n                // Cache this geometry\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n                pending.push(geometryPromise);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var meshDef = json.meshes[meshIndex];\n        var primitives = meshDef.primitives;\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var material =\n                primitives[i].material === undefined\n                    ? createDefaultMaterial(this.cache)\n                    : this.getDependency('material', primitives[i].material);\n\n            pending.push(material);\n        }\n\n        pending.push(parser.loadGeometries(primitives));\n\n        return Promise.all(pending).then(function (results) {\n            var materials = results.slice(0, results.length - 1);\n            var geometries = results[results.length - 1];\n\n            var meshes = [];\n\n            for (var i = 0, il = geometries.length; i < il; i++) {\n                var geometry = geometries[i];\n                var primitive = primitives[i];\n\n                // 1. create Mesh\n\n                var mesh;\n\n                var material = materials[i];\n\n                if (\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n                    primitive.mode === undefined\n                ) {\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n                    mesh =\n                        meshDef.isSkinnedMesh === true\n                            ? new SkinnedMesh(geometry, material)\n                            : new Mesh(geometry, material);\n\n                    if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n                        mesh.normalizeSkinWeights();\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n                    mesh = new Points(geometry, material);\n                } else {\n                    throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n                }\n\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n                    updateMorphTargets(mesh, meshDef);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (geometries.length > 1) mesh.name += '_' + i;\n\n                assignExtrasToUserData(mesh, meshDef);\n\n                parser.assignFinalMaterial(mesh);\n\n                meshes.push(mesh);\n            }\n\n            if (meshes.length === 1) {\n                return meshes[0];\n            }\n\n            var group = new Group();\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n                group.add(meshes[i]);\n            }\n\n            return group;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n        var camera;\n        var cameraDef = this.json.cameras[cameraIndex];\n        var params = cameraDef[cameraDef.type];\n\n        if (!params) {\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\n            return;\n        }\n\n        if (cameraDef.type === 'perspective') {\n            camera = new PerspectiveCamera(\n                MathUtils.radToDeg(params.yfov),\n                params.aspectRatio || 1,\n                params.znear || 1,\n                params.zfar || 2e6\n            );\n        } else if (cameraDef.type === 'orthographic') {\n            camera = new OrthographicCamera(\n                -params.xmag,\n                params.xmag,\n                params.ymag,\n                -params.ymag,\n                params.znear,\n                params.zfar\n            );\n        }\n\n        if (cameraDef.name) camera.name = cameraDef.name;\n\n        assignExtrasToUserData(camera, cameraDef);\n\n        return Promise.resolve(camera);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n        var skinDef = this.json.skins[skinIndex];\n\n        var skinEntry = { joints: skinDef.joints };\n\n        if (skinDef.inverseBindMatrices === undefined) {\n            return Promise.resolve(skinEntry);\n        }\n\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n            skinEntry.inverseBindMatrices = accessor;\n\n            return skinEntry;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n        var json = this.json;\n\n        var animationDef = json.animations[animationIndex];\n\n        var pendingNodes = [];\n        var pendingInputAccessors = [];\n        var pendingOutputAccessors = [];\n        var pendingSamplers = [];\n        var pendingTargets = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n            var target = channel.target;\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n            var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n            var output =\n                animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n            pendingNodes.push(this.getDependency('node', name));\n            pendingInputAccessors.push(this.getDependency('accessor', input));\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\n            pendingSamplers.push(sampler);\n            pendingTargets.push(target);\n        }\n\n        return Promise.all([\n            Promise.all(pendingNodes),\n            Promise.all(pendingInputAccessors),\n            Promise.all(pendingOutputAccessors),\n            Promise.all(pendingSamplers),\n            Promise.all(pendingTargets)\n        ]).then(function (dependencies) {\n            var nodes = dependencies[0];\n            var inputAccessors = dependencies[1];\n            var outputAccessors = dependencies[2];\n            var samplers = dependencies[3];\n            var targets = dependencies[4];\n\n            var tracks = [];\n\n            for (var i = 0, il = nodes.length; i < il; i++) {\n                var node = nodes[i];\n                var inputAccessor = inputAccessors[i];\n                var outputAccessor = outputAccessors[i];\n                var sampler = samplers[i];\n                var target = targets[i];\n\n                if (node === undefined) continue;\n\n                node.updateMatrix();\n                node.matrixAutoUpdate = true;\n\n                var TypedKeyframeTrack;\n\n                switch (PATH_PROPERTIES[target.path]) {\n                    case PATH_PROPERTIES.weights:\n                        TypedKeyframeTrack = NumberKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.rotation:\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.position:\n                    case PATH_PROPERTIES.scale:\n                    default:\n                        TypedKeyframeTrack = VectorKeyframeTrack;\n                        break;\n                }\n\n                var targetName = node.name ? node.name : node.uuid;\n\n                var interpolation =\n                    sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n                var targetNames = [];\n\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n                    node.traverse(function (object) {\n                        if (object.isMesh === true && object.morphTargetInfluences) {\n                            targetNames.push(object.name ? object.name : object.uuid);\n                        }\n                    });\n                } else {\n                    targetNames.push(targetName);\n                }\n\n                var outputArray = outputAccessor.array;\n\n                if (outputAccessor.normalized) {\n                    var scale;\n\n                    if (outputArray.constructor === Int8Array) {\n                        scale = 1 / 127;\n                    } else if (outputArray.constructor === Uint8Array) {\n                        scale = 1 / 255;\n                    } else if (outputArray.constructor == Int16Array) {\n                        scale = 1 / 32767;\n                    } else if (outputArray.constructor === Uint16Array) {\n                        scale = 1 / 65535;\n                    } else {\n                        throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n                    }\n\n                    var scaled = new Float32Array(outputArray.length);\n\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\n                        scaled[j] = outputArray[j] * scale;\n                    }\n\n                    outputArray = scaled;\n                }\n\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\n                    var track = new TypedKeyframeTrack(\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n                        inputAccessor.array,\n                        outputArray,\n                        interpolation\n                    );\n\n                    // Override interpolation with custom factory method.\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                            // must be divided by three to get the interpolant's sampleSize argument.\n\n                            return new GLTFCubicSplineInterpolant(\n                                this.times,\n                                this.values,\n                                this.getValueSize() / 3,\n                                result\n                            );\n                        };\n\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n                    }\n\n                    tracks.push(track);\n                }\n            }\n\n            var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n            return new AnimationClip(name, undefined, tracks);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var parser = this;\n\n        var meshReferences = json.meshReferences;\n        var meshUses = json.meshUses;\n\n        var nodeDef = json.nodes[nodeIndex];\n\n        return (function () {\n            var pending = [];\n\n            if (nodeDef.mesh !== undefined) {\n                pending.push(\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n                        var node;\n\n                        if (meshReferences[nodeDef.mesh] > 1) {\n                            var instanceNum = meshUses[nodeDef.mesh]++;\n\n                            node = mesh.clone();\n                            node.name += '_instance_' + instanceNum;\n                        } else {\n                            node = mesh;\n                        }\n\n                        // if weights are provided on the node, override weights on the mesh.\n                        if (nodeDef.weights !== undefined) {\n                            node.traverse(function (o) {\n                                if (!o.isMesh) return;\n\n                                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\n                                }\n                            });\n                        }\n\n                        return node;\n                    })\n                );\n            }\n\n            if (nodeDef.camera !== undefined) {\n                pending.push(parser.getDependency('camera', nodeDef.camera));\n            }\n\n            if (\n                nodeDef.extensions &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n            ) {\n                pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n            }\n\n            return Promise.all(pending);\n        })().then(function (objects) {\n            var node;\n\n            // .isBone isn't in glTF spec. See .markDefs\n            if (nodeDef.isBone === true) {\n                node = new Bone();\n            } else if (objects.length > 1) {\n                node = new Group();\n            } else if (objects.length === 1) {\n                node = objects[0];\n            } else {\n                node = new Object3D();\n            }\n\n            if (node !== objects[0]) {\n                for (var i = 0, il = objects.length; i < il; i++) {\n                    node.add(objects[i]);\n                }\n            }\n\n            if (nodeDef.name) {\n                node.userData.name = nodeDef.name;\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n            }\n\n            assignExtrasToUserData(node, nodeDef);\n\n            if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n            if (nodeDef.matrix !== undefined) {\n                var matrix = new Matrix4();\n                matrix.fromArray(nodeDef.matrix);\n                node.applyMatrix4(matrix);\n            } else {\n                if (nodeDef.translation !== undefined) {\n                    node.position.fromArray(nodeDef.translation);\n                }\n\n                if (nodeDef.rotation !== undefined) {\n                    node.quaternion.fromArray(nodeDef.rotation);\n                }\n\n                if (nodeDef.scale !== undefined) {\n                    node.scale.fromArray(nodeDef.scale);\n                }\n            }\n\n            return node;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n    GLTFParser.prototype.loadScene = (function () {\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\n            var nodeDef = json.nodes[nodeId];\n\n            return parser\n                .getDependency('node', nodeId)\n                .then(function (node) {\n                    if (nodeDef.skin === undefined) return node;\n\n                    // build skeleton here as well\n\n                    var skinEntry;\n\n                    return parser\n                        .getDependency('skin', nodeDef.skin)\n                        .then(function (skin) {\n                            skinEntry = skin;\n\n                            var pendingJoints = [];\n\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n                                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n                            }\n\n                            return Promise.all(pendingJoints);\n                        })\n                        .then(function (jointNodes) {\n                            node.traverse(function (mesh) {\n                                if (!mesh.isMesh) return;\n\n                                var bones = [];\n                                var boneInverses = [];\n\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                                    var jointNode = jointNodes[j];\n\n                                    if (jointNode) {\n                                        bones.push(jointNode);\n\n                                        var mat = new Matrix4();\n\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\n                                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                                        }\n\n                                        boneInverses.push(mat);\n                                    } else {\n                                        console.warn(\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                                            skinEntry.joints[j]\n                                        );\n                                    }\n                                }\n\n                                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n                            });\n\n                            return node;\n                        });\n                })\n                .then(function (node) {\n                    // build node hierachy\n\n                    parentObject.add(node);\n\n                    var pending = [];\n\n                    if (nodeDef.children) {\n                        var children = nodeDef.children;\n\n                        for (var i = 0, il = children.length; i < il; i++) {\n                            var child = children[i];\n                            pending.push(buildNodeHierachy(child, node, json, parser));\n                        }\n                    }\n\n                    return Promise.all(pending);\n                });\n        }\n\n        return function loadScene(sceneIndex) {\n            var json = this.json;\n            var extensions = this.extensions;\n            var sceneDef = this.json.scenes[sceneIndex];\n            var parser = this;\n\n            // Loader returns Group, not Scene.\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n            var scene = new Group();\n            if (sceneDef.name) scene.name = sceneDef.name;\n\n            assignExtrasToUserData(scene, sceneDef);\n\n            if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n            var nodeIds = sceneDef.nodes || [];\n\n            var pending = [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n            }\n\n            return Promise.all(pending).then(function () {\n                return scene;\n            });\n        };\n    })();\n\n    return GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const ALIAS = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32,\n    tab: 9,\n    escape: 27\n};\n\nexport default class Keyboard {\n    constructor(domElement) {\n        this.domElement = domElement || document;\n        this.keyCodes = {};\n\n        // bind keyEvents\n        this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // bind window blur\n        window.addEventListener('blur', () => this.onBlur, false);\n    }\n\n    destroy() {\n        this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // unbind window blur event\n        window.removeEventListener('blur', () => this.onBlur, false);\n    }\n\n    onBlur() {\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\n    }\n\n    onKeyChange(event) {\n        // log to debug\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n        // update this.keyCodes\n        const keyCode = event.keyCode;\n        this.keyCodes[keyCode] = event.type === 'keydown';\n    }\n\n    pressed(keyDesc) {\n        const keys = keyDesc.split('+');\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\n                pressed = this.keyCodes[ALIAS[key]];\n            } else {\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n\n    eventMatches(event, keyDesc) {\n        const aliases = ALIAS;\n        const aliasKeys = Object.keys(aliases);\n        const keys = keyDesc.split('+');\n        // log to debug\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (key === 'shift') {\n                pressed = event.shiftKey ? true : false;\n            } else if (key === 'ctrl') {\n                pressed = event.ctrlKey ? true : false;\n            } else if (key === 'alt') {\n                pressed = event.altKey ? true : false;\n            } else if (key === 'meta') {\n                pressed = event.metaKey ? true : false;\n            } else if (aliasKeys.indexOf(key) !== -1) {\n                pressed = event.keyCode === aliases[key];\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n                pressed = true;\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n}\n","import Keyboard from '../../utils/keyboard';\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// Manages all input interactions\nexport default class Interaction {\n    constructor(renderer, scene, camera, controls) {\n        // Properties\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = camera;\n        this.controls = controls;\n\n        this.timeout = null;\n\n        // Instantiate keyboard helper\n        this.keyboard = new Keyboard();\n\n        // Listeners\n        // Mouse events\n        this.renderer.domElement.addEventListener(\n            'mousemove',\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\n            false\n        );\n        this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\n        this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\n\n        // Keyboard events\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\n            // Only once\n            if (event.repeat) {\n                return;\n            }\n\n            if (this.keyboard.eventMatches(event, 'escape')) {\n                console.log('Escape pressed');\n            }\n        });\n    }\n\n    onMouseOver(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = true;\n    }\n\n    onMouseLeave(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = false;\n    }\n\n    onMouseMove(event) {\n        event.preventDefault();\n\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(function () {\n            Config.isMouseMoving = false;\n        }, 200);\n\n        Config.isMouseMoving = true;\n    }\n}\n","import Config from '../../data/config';\n\nconst params = {\n    snapshot: false,\n    addRobot: false\n};\n\nconst addRobot = () => {\n    console.log('Add Robot');\n};\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n    constructor(main) {\n        this.gui = new dat.GUI();\n\n        this.camera = main.camera.threeCamera;\n        this.controls = main.controls.threeControls;\n        this.light = main.light;\n        this.scene = main.scene;\n\n        this.model = null;\n        this.meshHelper = null;\n    }\n\n    load(main, mesh) {\n        // Add folders\n        this.gui.add(params, 'snapshot');\n        this.gui.add(params, 'addRobot');\n        console.log(this.gui);\n\n        this.gui.close();\n\n        //this.gui.open();\n\n        /* Global */\n        //this.gui.close();\n\n        // this.model = main.model;\n        // this.meshHelper = main.meshHelper;\n        //\n        // /* Camera */\n        // const cameraFolder = this.gui.addFolder('Camera');\n        // const cameraFOVGui = cameraFolder.add(Config.camera, 'fov', 0, 180).name('Camera FOV');\n        // cameraFOVGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.camera.fov = value;\n        // });\n        // cameraFOVGui.onFinishChange(() => {\n        //     this.camera.updateProjectionMatrix();\n        //\n        //     this.controls.enableRotate = true;\n        // });\n        // const cameraAspectGui = cameraFolder.add(Config.camera, 'aspect', 0, 4).name('Camera Aspect');\n        // cameraAspectGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.camera.aspect = value;\n        // });\n        // cameraAspectGui.onFinishChange(() => {\n        //     this.camera.updateProjectionMatrix();\n        //\n        //     this.controls.enableRotate = true;\n        // });\n        // const cameraFogColorGui = cameraFolder.addColor(Config.fog, 'color').name('Fog Color');\n        // cameraFogColorGui.onChange((value) => {\n        //     this.scene.fog.color.setHex(value);\n        // });\n        // const cameraFogNearGui = cameraFolder.add(Config.fog, 'near', 0.0, 0.01).name('Fog Near');\n        // cameraFogNearGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.scene.fog.density = value;\n        // });\n        // cameraFogNearGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        //\n        // /* Controls */\n        // const controlsFolder = this.gui.addFolder('Controls');\n        // controlsFolder\n        //     .add(Config.controls, 'autoRotate')\n        //     .name('Auto Rotate')\n        //     .onChange((value) => {\n        //         this.controls.autoRotate = value;\n        //     });\n        // const controlsAutoRotateSpeedGui = controlsFolder\n        //     .add(Config.controls, 'autoRotateSpeed', -1, 1)\n        //     .name('Rotation Speed');\n        // controlsAutoRotateSpeedGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //     this.controls.autoRotateSpeed = value;\n        // });\n        // controlsAutoRotateSpeedGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        //\n        // /* Model */\n        // const modelFolder = this.gui.addFolder('Model');\n        // modelFolder\n        //     .add(Config.model, 'type', [...Config.model.initialTypes])\n        //     .name('Select Model')\n        //     .onChange((value) => {\n        //         if (value) {\n        //             if (Config.mesh.enableHelper) this.meshHelper.disable();\n        //\n        //             Config.model.selected = Config.model.initialTypes.indexOf(value);\n        //             this.unload();\n        //             this.model.unload();\n        //             this.model.load(value);\n        //         }\n        //     });\n        //\n        // /* Mesh */\n        // const meshFolder = this.gui.addFolder('Mesh');\n        // meshFolder\n        //     .add(Config.mesh, 'enableHelper', true)\n        //     .name('Enable Helpers')\n        //     .onChange((value) => {\n        //         if (value) {\n        //             this.meshHelper.enable();\n        //         } else {\n        //             this.meshHelper.disable();\n        //         }\n        //     });\n        // meshFolder\n        //     .add(Config.mesh, 'translucent', true)\n        //     .name('Translucent')\n        //     .onChange((value) => {\n        //         if (value) {\n        //             mesh.material.transparent = true;\n        //             mesh.material.opacity = 0.5;\n        //         } else {\n        //             mesh.material.opacity = 1.0;\n        //         }\n        //     });\n        // meshFolder\n        //     .add(Config.mesh, 'wireframe', true)\n        //     .name('Wireframe')\n        //     .onChange((value) => {\n        //         mesh.material.wireframe = value;\n        //     });\n        //\n        // /* Lights */\n        // // Ambient Light\n        // const ambientLightFolder = this.gui.addFolder('Ambient Light');\n        // ambientLightFolder\n        //     .add(Config.ambientLight, 'enabled')\n        //     .name('Enabled')\n        //     .onChange((value) => {\n        //         this.light.ambientLight.visible = value;\n        //     });\n        // ambientLightFolder\n        //     .addColor(Config.ambientLight, 'color')\n        //     .name('Color')\n        //     .onChange((value) => {\n        //         this.light.ambientLight.color.setHex(value);\n        //     });\n        //\n        // // Directional Light\n        // const directionalLightFolder = this.gui.addFolder('Directional Light');\n        // directionalLightFolder\n        //     .add(Config.directionalLight, 'enabled')\n        //     .name('Enabled')\n        //     .onChange((value) => {\n        //         this.light.directionalLight.visible = value;\n        //     });\n        // directionalLightFolder\n        //     .addColor(Config.directionalLight, 'color')\n        //     .name('Color')\n        //     .onChange((value) => {\n        //         this.light.directionalLight.color.setHex(value);\n        //     });\n        // const directionalLightIntensityGui = directionalLightFolder\n        //     .add(Config.directionalLight, 'intensity', 0, 2)\n        //     .name('Intensity');\n        // directionalLightIntensityGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.intensity = value;\n        // });\n        // directionalLightIntensityGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const directionalLightPositionXGui = directionalLightFolder\n        //     .add(Config.directionalLight, 'x', -1000, 1000)\n        //     .name('Position X');\n        // directionalLightPositionXGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.position.x = value;\n        // });\n        // directionalLightPositionXGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const directionalLightPositionYGui = directionalLightFolder\n        //     .add(Config.directionalLight, 'y', -1000, 1000)\n        //     .name('Position Y');\n        // directionalLightPositionYGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.position.y = value;\n        // });\n        // directionalLightPositionYGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const directionalLightPositionZGui = directionalLightFolder\n        //     .add(Config.directionalLight, 'z', -1000, 1000)\n        //     .name('Position Z');\n        // directionalLightPositionZGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.position.z = value;\n        // });\n        // directionalLightPositionZGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        //\n        // // Shadow Map\n        // const shadowFolder = this.gui.addFolder('Shadow Map');\n        // shadowFolder\n        //     .add(Config.shadow, 'enabled')\n        //     .name('Enabled')\n        //     .onChange((value) => {\n        //         this.light.directionalLight.castShadow = value;\n        //     });\n        // shadowFolder\n        //     .add(Config.shadow, 'helperEnabled')\n        //     .name('Helper Enabled')\n        //     .onChange((value) => {\n        //         this.light.directionalLightHelper.visible = value;\n        //     });\n        // const shadowNearGui = shadowFolder.add(Config.shadow, 'near', 0, 400).name('Near');\n        // shadowNearGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.camera.near = value;\n        // });\n        // shadowNearGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        // const shadowFarGui = shadowFolder.add(Config.shadow, 'far', 0, 1200).name('Far');\n        // shadowFarGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.camera.far = value;\n        // });\n        // shadowFarGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        // const shadowTopGui = shadowFolder.add(Config.shadow, 'top', -400, 400).name('Top');\n        // shadowTopGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.camera.top = value;\n        // });\n        // shadowTopGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        // const shadowRightGui = shadowFolder.add(Config.shadow, 'right', -400, 400).name('Right');\n        // shadowRightGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.camera.right = value;\n        // });\n        // shadowRightGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        // const shadowBottomGui = shadowFolder.add(Config.shadow, 'bottom', -400, 400).name('Bottom');\n        // shadowBottomGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.camera.bottom = value;\n        // });\n        // shadowBottomGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        // const shadowLeftGui = shadowFolder.add(Config.shadow, 'left', -400, 400).name('Left');\n        // shadowLeftGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.camera.left = value;\n        // });\n        // shadowLeftGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        // const shadowBiasGui = shadowFolder.add(Config.shadow, 'bias', -0.00001, 1).name('Bias');\n        // shadowBiasGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.directionalLight.shadow.bias = value;\n        // });\n        // shadowBiasGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        //     this.light.directionalLight.shadow.map.dispose();\n        //     this.light.directionalLight.shadow.map = null;\n        //     this.light.directionalLightHelper.update();\n        // });\n        //\n        // // Point Light\n        // const pointLightFolder = this.gui.addFolder('Point Light');\n        // pointLightFolder\n        //     .add(Config.pointLight, 'enabled')\n        //     .name('Enabled')\n        //     .onChange((value) => {\n        //         this.light.pointLight.visible = value;\n        //     });\n        // pointLightFolder\n        //     .addColor(Config.pointLight, 'color')\n        //     .name('Color')\n        //     .onChange((value) => {\n        //         this.light.pointLight.color.setHex(value);\n        //     });\n        // const pointLightIntensityGui = pointLightFolder.add(Config.pointLight, 'intensity', 0, 2).name('Intensity');\n        // pointLightIntensityGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.pointLight.intensity = value;\n        // });\n        // pointLightIntensityGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const pointLightDistanceGui = pointLightFolder.add(Config.pointLight, 'distance', 0, 1000).name('Distance');\n        // pointLightDistanceGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.pointLight.distance = value;\n        // });\n        // pointLightDistanceGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const pointLightPositionXGui = pointLightFolder.add(Config.pointLight, 'x', -1000, 1000).name('Position X');\n        // pointLightPositionXGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.pointLight.position.x = value;\n        // });\n        // pointLightPositionXGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const pointLightPositionYGui = pointLightFolder.add(Config.pointLight, 'y', -1000, 1000).name('Position Y');\n        // pointLightPositionYGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.pointLight.position.y = value;\n        // });\n        // pointLightPositionYGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const pointLightPositionZGui = pointLightFolder.add(Config.pointLight, 'z', -1000, 1000).name('Position Z');\n        // pointLightPositionZGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.pointLight.position.z = value;\n        // });\n        // pointLightPositionZGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        //\n        // // Hemi Light\n        // const hemiLightFolder = this.gui.addFolder('Hemi Light');\n        // hemiLightFolder\n        //     .add(Config.hemiLight, 'enabled')\n        //     .name('Enabled')\n        //     .onChange((value) => {\n        //         this.light.hemiLight.visible = value;\n        //     });\n        // hemiLightFolder\n        //     .addColor(Config.hemiLight, 'color')\n        //     .name('Color')\n        //     .onChange((value) => {\n        //         this.light.hemiLight.color.setHex(value);\n        //     });\n        // hemiLightFolder\n        //     .addColor(Config.hemiLight, 'groundColor')\n        //     .name('ground Color')\n        //     .onChange((value) => {\n        //         this.light.hemiLight.groundColor.setHex(value);\n        //     });\n        // const hemiLightIntensityGui = hemiLightFolder.add(Config.hemiLight, 'intensity', 0, 2).name('Intensity');\n        // hemiLightIntensityGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.hemiLight.intensity = value;\n        // });\n        // hemiLightIntensityGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const hemiLightPositionXGui = hemiLightFolder.add(Config.hemiLight, 'x', -1000, 1000).name('Position X');\n        // hemiLightPositionXGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.hemiLight.position.x = value;\n        // });\n        // hemiLightPositionXGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const hemiLightPositionYGui = hemiLightFolder.add(Config.hemiLight, 'y', -500, 1000).name('Position Y');\n        // hemiLightPositionYGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.hemiLight.position.y = value;\n        // });\n        // hemiLightPositionYGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n        // const hemiLightPositionZGui = hemiLightFolder.add(Config.hemiLight, 'z', -1000, 1000).name('Position Z');\n        // hemiLightPositionZGui.onChange((value) => {\n        //     this.controls.enableRotate = false;\n        //\n        //     this.light.hemiLight.position.z = value;\n        // });\n        // hemiLightPositionZGui.onFinishChange(() => {\n        //     this.controls.enableRotate = true;\n        // });\n    }\n\n    show() {\n        this.gui.show();\n    }\n\n    unload() {\n        this.gui.destroy();\n        this.gui = new dat.GUI();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nconst OBSTACLE_PREFIX = 'Obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback !== undefined) {\n            callback();\n        }\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs !== undefined) {\n                //console.log(obs[1]);\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n\n        const mesh = new THREE.Mesh(geometry, material);\n\n        mesh.name = OBSTACLE_PREFIX + id;\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        this.scene.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position !== undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            mesh.scale.set(scene_scale, scene_scale, scene_scale);\n            mesh.position.set(scene_scale * x, scene_scale * y, scene_scale * z);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation !== undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = ((90 + x) / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            mesh.rotation.set(radX, radY, radZ);\n        }\n\n        // Show shadows of the object if enabled\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        // Add labels if enabled\n        if (Config.isShowingLables) {\n            addLabel(OBSTACLE_PREFIX, obstacle, mesh);\n        }\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        } else {\n            throw new TypeError('unsupported geometry type');\n        }\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        } else {\n            // Default material type\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height !== undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius !== undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            } else {\n                return 0;\n            }\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = this.scene.getObjectByName(name);\n        console.log(obstacle);\n        if (obstacle !== undefined) {\n            this.scene.remove(obstacle);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = this.scene.children;\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else {\n            if (callback != null) callback('undefined');\n        }\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V', callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r == undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n                // Can create\n                // Limit the arena that robot can go\n                x = scene_scale * Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = scene_scale * Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    // Set less opacity for virtual robots\n                    const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                    const material = new THREE.MeshStandardMaterial({\n                        color: 0x666666,\n                        opacity: opacity,\n                        transparent: true\n                    });\n\n                    var r = new THREE.Mesh(geometry, material);\n                    r.receiveShadow = true;\n                    r.name = ROBOT_PREFIX + id;\n                    r.scale.set(scene_scale, scene_scale, scene_scale);\n                    r.position.set(x, y, 0);\n                    r.rotation.x = 90 * THREE.Math.DEG2RAD;\n                    r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n                    r.reality = reality; // set reality flag\n\n                    // Add robot to the scene\n                    window.scene.add(r);\n\n                    r.clickEvent = function (m) {\n                        window.robot.alert(m);\n                    };\n\n                    console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                    // Callback function\n                    if (callback != undefined) callback('success');\n                });\n            } else {\n                console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n            }\n        } else {\n            if (reality === REALITY || REALITY === 'M') {\n                // Reality matches\n                this.move(id, x, y, heading, () => {\n                    if (callback != undefined) callback('already defined, so moved');\n                });\n            } else {\n                // Robot reality not matching with environment reality\n                this.delete(id);\n            }\n        }\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n\n            if (r != undefined) {\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else {\n                if (callback != undefined) callback('not found');\n            }\n        } else {\n            if (callback != undefined) callback('id not specified');\n        }\n    }\n\n    deleteAll() {\n        // Delete all robots\n        const objects = this.scene.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                console.log('Deleted>', name);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n\n    exists(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            const currentHeading = r.rotation.y;\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\n\n            // TODO: need a smoother way than this rough trick\n            // If current and target rotations in different signs\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n            // Limit the arena that robot can go\n            x = scene_scale * Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n            y = scene_scale * Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        } else {\n            if (callback != null) callback('undefined');\n        }\n    }\n\n    get_coordinates(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        } else {\n            return null;\n        }\n    }\n\n    update() {\n        TWEEN.update();\n    }\n\n    alert(mesh) {\n        // Display an alert on window\n        let disp = document.querySelector('#msg-box');\n        disp.innerHTML = `${mesh.name} [${mesh.reality}]`;\n        disp.style.display = 'block';\n\n        setTimeout(function () {\n            document.querySelector('#msg-box').style.display = 'none';\n        }, 1000);\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\nimport MQTT from 'paho-mqtt';\n\nimport Config from '../../data/config';\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\n// Robot Color - NeoPixel\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene) {\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n\n        // create a random client Id\n        const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n        this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n        window.mqtt = this.client;\n\n        this.client.connect({\n            userName: Config.mqtt.user,\n            password: Config.mqtt.password,\n            reconnect: true,\n            useSSL: true,\n            cleanSession: false,\n            onSuccess: () => {\n                console.log('MQTT: connected');\n\n                // Subscribe to topics\n                this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                this.subscribe(TOPIC_ROBOT_CREATE);\n                this.subscribe(TOPIC_ROBOT_DELETE);\n                this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                this.subscribe(TOPIC_CHANGE_COLOR);\n                this.subscribe(TOPIC_OBSTACLES_LIST);\n                this.subscribe(TOPIC_OBSTACLES_DELETE);\n                this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n\n                // Request for obstacle data\n                this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n\n                // Request for coordinate data\n                this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                // Access globally\n                window.robot = this.robot;\n                window.obstacles = this.obstacles;\n\n                this.client.onMessageArrived = this.onMessageArrived;\n                this.client.onConnectionLost = this.onConnectionLost;\n            },\n            onFailure: () => {\n                console.log('MQTT: connection failed');\n            }\n        });\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            window.channel = channelHash.substring(1);\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n            try {\n                const { data, reality } = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined && (reality == REALITY || REALITY == 'M')) {\n                    // Have data on this reality\n                    Object.entries(data).forEach((entry) => {\n                        const r = entry[1];\n\n                        if (window.robot.exists(r.id) == undefined) {\n                            window.robot.create(r.id, r.x, r.y, r.heading, reality);\n                        } else {\n                            window.robot.move(r.id, r.x, r.y, r.heading);\n                        }\n                    });\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n\n            window.obstacles.deleteIfExists(data.id);\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                let disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                let disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n        }\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport label from './components/label';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Helpers\nimport MeshHelper from './helpers/meshHelper';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Config data\nimport Config from './../data/config';\n\n// STLLoader\nlet STLLoader = require('three-stl-loader')(THREE);\n\n// Camera\nlet camera, labelRenderer;\n\n// For click event on robots\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        // Set container property to container element\n        this.container = container;\n\n        // Start Three clock\n        this.clock = new THREE.Clock();\n\n        // Main scene creation\n        this.scene = new THREE.Scene();\n        window.scene = this.scene; // config as a global variable\n        window.scene_scale = Config.scale;\n\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        this.mqtt = new MQTTClient(this.scene);\n\n        // Get Device Pixel Ratio first for retina\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Main renderer constructor\n        this.renderer = new Renderer(this.scene, container);\n\n        // Components instantiations\n        camera = new Camera(this.renderer.threeRenderer);\n        this.controls = new Controls(camera.threeCamera, container);\n        this.light = new Light(this.scene);\n        this.camera = camera;\n        // Create and place lights in scene\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        // Set up Stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats();\n            this.container.appendChild(this.stats.dom);\n        }\n\n        if (Config.isShowingLables) {\n            console.log('labels:', label);\n            this.labelRenderer = label();\n            this.container.appendChild(this.labelRenderer.domElement);\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            this.gui = new DatGUI(this);\n        }\n\n        // Instantiate texture class\n        this.texture = new Texture();\n\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\n        this.texture.load().then(() => {\n            this.manager = new THREE.LoadingManager();\n\n            // Create the environment ---------------------------------------------\n            this.environment = new Environment();\n\n            // -----------------------------------------------------------------\n\n            if (Config.isDev) {\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                //\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                this.gui.load(this);\n                console.log('gui:', this.gui);\n                this.gui.show();\n            }\n            // -----------------------------------------------------------------\n\n            // onProgress callback\n            this.manager.onProgress = (item, loaded, total) => {\n                console.log(`${item}: ${loaded} ${total}`);\n            };\n\n            // All loaders done now\n            this.manager.onLoad = () => {\n                // alert('Loaded');\n                console.log('Loading complete!');\n\n                // Set up interaction manager with the app now that the model is finished loading\n                new Interaction(\n                    this.renderer.threeRenderer,\n                    this.scene,\n                    camera.threeCamera,\n                    this.controls.threeControls\n                );\n\n                // Add dat.GUI controls if dev\n                if (Config.isDev) {\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                    // this.gui.load(this, this.model.obj);\n                    console.log('gui:', this.gui);\n                    // this.gui.show();\n                }\n\n                // Everything is now fully loaded\n                Config.isLoaded = true;\n                this.container.querySelector('#loading').style.display = 'none';\n            };\n        });\n\n        // Start render which does not wait for model fully loaded\n\n        this.render();\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Add eventlistner for catch mouse click events\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n    }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children);\n        if (intersects.length > 0) {\n            // console.log(intersects);\n            const obj = intersects[0].object;\n\n            if (obj.clickEvent != undefined) {\n                obj.clickEvent(obj);\n            }\n        }\n    }\n\n    render() {\n        // Call render function and pass in created scene and camera\n        this.renderer.render(this.scene, camera.threeCamera);\n\n        // render labels if enabled\n        if (Config.isShowingLables) {\n            this.labelRenderer.render(this.scene, camera.threeCamera);\n        }\n\n        // update stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats.update();\n        }\n\n        // Delta time is sometimes needed for certain updates\n        //const delta = this.clock.getDelta();\n\n        // Call any vendor or module frame updates here\n        TWEEN.update();\n        this.controls.threeControls.update();\n\n        // RAF\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}