{"version":3,"sources":["webpack:///./src/js/utils/orbitControls.js","webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/helpers/vertexNormalsHelper.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/loaders/GLTFLoader.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["module","exports","THREE","MOUSE","OrbitConstraint","object","this","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","v","offset","quat","quatInverse","lastPosition","lastQuaternion","scope","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","position","clone","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","Quaternion","setFromUnitVectors","up","inverse","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","ZOOM","MIDDLE","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","reset","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","arena","size","minX","maxX","minY","maxY","mqtt","server","port","path","user","password","channel","mixedReality","obstacles","robots","isDev","isShowingStats","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","far","aspect","posX","posY","posZ","controls","ambientLight","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","pointLight","hemiLight","groundColor","canvas","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","innerHTML","join","addGetWebGLMessage","parameters","parent","appendChild","Renderer","scene","container","threeRenderer","antialias","setClearColor","setPixelRatio","devicePixelRatio","shadowMap","Config","capabilities","getMaxAnisotropy","updateSize","setSize","offsetWidth","offsetHeight","render","Camera","renderer","height","threeCamera","Light","init","visible","castShadow","mapSize","directionalLightHelper","lightName","Controls","orbitControls","threeControls","rS","bS","glS","tS","Environment","log","scene_scale","geometry","depthWrite","ground","receiveShadow","grid","rotation","opacity","transparent","Stats","start","tick","frame","end","BrowserStats","glStats","threeStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","_v1","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","hex","nNormals","objGeometry","isGeometry","faces","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","call","LineBasicMaterial","toneMapped","matrixAutoUpdate","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","applyMatrix4","applyMatrix3","normalize","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","edges","edgesLine","vertexHelper","boxHelper","remove","Helpers","fn","threshhold","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","round","error","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","BINARY_EXTENSION_CHUNK_TYPES","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","repeat","texCoord","source","copySampleValue_","index","result","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","Matrix4","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","onKeyChange","onBlur","prop","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","throttle","onMouseLeave","onMouseOver","eventMatches","Obstacle","callback","entries","obs","obstacle","createGeometry","random","deleteIfExists","calculateZ","radX","radY","radZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","obj","startsWith","STLLoader","require","Robot","R","G","B","ambient","r","setRGB","heading","reality","REALITY","DEG2RAD","clickEvent","robot","alert","move","currentHeading","newHeading","rotationFlag","Tween","to","onUpdate","onComplete","delay","disp","querySelector","display","MQTTClient","updateChannel","client_id","toString","substring","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","publish","onMessageArrived","onConnectionLost","onFailure","channelHash","location","hash","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","destinationName","topic","entry","exists","createList","deleteAll","changeColor","reload","subTopic","message","payload","Message","pubTopic","send","raycaster","mouse","Main","clock","place","stats","setUp","environment","item","meshHelper","model","enable","onDocumentMouseDown","innerWidth","innerHeight","setFromCamera","intersects","intersectObjects","requestAnimationFrame","Detector","getElementById"],"mappings":"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","file":"0.app.js","sourcesContent":["module.exports = function (THREE) {\n    var MOUSE = THREE.MOUSE;\n    if (!MOUSE) MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     */\n    /*global THREE, console */\n\n    function OrbitConstraint(object) {\n        this.object = object;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        // and where it pans with respect to.\n        this.target = new THREE.Vector3();\n\n        // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // Limits to how far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var EPS = 0.000001;\n\n        // Current position in spherical coordinate system.\n        var theta;\n        var phi;\n\n        // Pending changes\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n\n        // API\n\n        this.getPolarAngle = function () {\n            return phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return theta;\n        };\n\n        this.rotateLeft = function (angle) {\n            thetaDelta -= angle;\n        };\n\n        this.rotateUp = function (angle) {\n            phiDelta -= angle;\n        };\n\n        // pass in distance in world space to move left\n        this.panLeft = (function () {\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance) {\n                var te = this.object.matrix.elements;\n\n                // get X column of matrix\n                v.set(te[0], te[1], te[2]);\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in distance in world space to move up\n        this.panUp = (function () {\n            var v = new THREE.Vector3();\n\n            return function panUp(distance) {\n                var te = this.object.matrix.elements;\n\n                // get Y column of matrix\n                v.set(te[4], te[5], te[6]);\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                var offset = position.clone().sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n                // we actually don't use screenWidth, since perspective camera is fixed to screen height\n                scope.panLeft((2 * deltaX * targetDistance) / screenHeight);\n                scope.panUp((2 * deltaY * targetDistance) / screenHeight);\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                // orthographic\n                scope.panLeft((deltaX * (scope.object.right - scope.object.left)) / screenWidth);\n                scope.panUp((deltaY * (scope.object.top - scope.object.bottom)) / screenHeight);\n            } else {\n                // camera neither orthographic or perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            }\n        };\n\n        this.dollyIn = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.dollyOut = function (dollyScale) {\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            }\n        };\n\n        this.update = (function () {\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n            var quatInverse = quat.clone().inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function () {\n                var position = this.object.position;\n\n                offset.copy(position).sub(this.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n\n                theta = Math.atan2(offset.x, offset.z);\n\n                // angle from y-axis\n\n                phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n\n                theta += thetaDelta;\n                phi += phiDelta;\n\n                // restrict theta to be between desired limits\n                theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n\n                // restrict phi to be between desired limits\n                phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n                // restrict phi to be betwee EPS and PI-EPS\n                phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n                var radius = offset.length() * scale;\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n                // move target to panned location\n                this.target.add(panOffset);\n\n                offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                offset.y = radius * Math.cos(phi);\n                offset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position.copy(this.target).add(offset);\n\n                this.object.lookAt(this.target);\n\n                if (this.enableDamping === true) {\n                    thetaDelta *= 1 - this.dampingFactor;\n                    phiDelta *= 1 - this.dampingFactor;\n                } else {\n                    thetaDelta = 0;\n                    phiDelta = 0;\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                    lastPosition.distanceToSquared(this.object.position) > EPS ||\n                    8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n                ) {\n                    lastPosition.copy(this.object.position);\n                    lastQuaternion.copy(this.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n                }\n\n                return false;\n            };\n        })();\n    }\n\n    // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n    // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n    // supported.\n    //\n    //    Orbit - left mouse / touch: one finger move\n    //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n    //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n    function OrbitControls(object, domElement) {\n        var constraint = new OrbitConstraint(object);\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // API\n\n        Object.defineProperty(this, 'constraint', {\n            get: function () {\n                return constraint;\n            }\n        });\n\n        this.getPolarAngle = function () {\n            return constraint.getPolarAngle();\n        };\n\n        this.getAzimuthalAngle = function () {\n            return constraint.getAzimuthalAngle();\n        };\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // center is old, deprecated; use \"target\" instead\n        this.center = this.target;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for\n        // backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n\n        ////////////\n        // internals\n\n        var scope = this;\n\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n\n        var state = STATE.NONE;\n\n        // for reset\n\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        // events\n\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n\n        // pass in x,y of change desired in pixel space,\n        // right and down are positive\n        function pan(deltaX, deltaY) {\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            constraint.pan(deltaX, deltaY, element.clientWidth, element.clientHeight);\n        }\n\n        this.update = function () {\n            if (this.autoRotate && state === STATE.NONE) {\n                constraint.rotateLeft(getAutoRotationAngle());\n            }\n\n            if (constraint.update() === true) {\n                this.dispatchEvent(changeEvent);\n            }\n        };\n\n        this.reset = function () {\n            state = STATE.NONE;\n\n            this.target.copy(this.target0);\n            this.object.position.copy(this.position0);\n            this.object.zoom = this.zoom0;\n\n            this.object.updateProjectionMatrix();\n            this.dispatchEvent(changeEvent);\n\n            this.update();\n        };\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function onMouseDown(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            if (event.button === scope.mouseButtons.ORBIT) {\n                if (scope.enableRotate === false) return;\n\n                state = STATE.ROTATE;\n\n                rotateStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n                if (scope.enableZoom === false) return;\n\n                state = STATE.DOLLY;\n\n                dollyStart.set(event.clientX, event.clientY);\n            } else if (event.button === scope.mouseButtons.PAN) {\n                if (scope.enablePan === false) return;\n\n                state = STATE.PAN;\n\n                panStart.set(event.clientX, event.clientY);\n            }\n\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false);\n                document.addEventListener('mouseup', onMouseUp, false);\n                scope.dispatchEvent(startEvent);\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            if (state === STATE.ROTATE) {\n                if (scope.enableRotate === false) return;\n\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                // rotating across whole screen goes 360 degrees around\n                constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n            } else if (state === STATE.DOLLY) {\n                if (scope.enableZoom === false) return;\n\n                dollyEnd.set(event.clientX, event.clientY);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    constraint.dollyIn(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n                    constraint.dollyOut(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n            } else if (state === STATE.PAN) {\n                if (scope.enablePan === false) return;\n\n                panEnd.set(event.clientX, event.clientY);\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n            }\n\n            if (state !== STATE.NONE) scope.update();\n        }\n\n        function onMouseUp(/* event */) {\n            if (scope.enabled === false) return;\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function onMouseWheel(event) {\n            if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var delta = 0;\n\n            if (event.wheelDelta !== undefined) {\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n            } else if (event.detail !== undefined) {\n                // Firefox\n\n                delta = -event.detail;\n            }\n\n            if (delta > 0) {\n                constraint.dollyOut(getZoomScale());\n            } else if (delta < 0) {\n                constraint.dollyIn(getZoomScale());\n            }\n\n            scope.update();\n            scope.dispatchEvent(startEvent);\n            scope.dispatchEvent(endEvent);\n        }\n\n        function onKeyDown(event) {\n            if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n            switch (event.keyCode) {\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n            }\n        }\n\n        function touchstart(event) {\n            if (scope.enabled === false) return;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n\n                    state = STATE.TOUCH_ROTATE;\n\n                    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n\n                    state = STATE.TOUCH_DOLLY;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n                    dollyStart.set(0, distance);\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n\n                    state = STATE.TOUCH_PAN;\n\n                    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) scope.dispatchEvent(startEvent);\n        }\n\n        function touchmove(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            switch (event.touches.length) {\n                case 1: // one-fingered touch: rotate\n                    if (scope.enableRotate === false) return;\n                    if (state !== STATE.TOUCH_ROTATE) return;\n\n                    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                    // rotating across whole screen goes 360 degrees around\n                    constraint.rotateLeft(((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed);\n                    // rotating up and down along whole screen attempts to go 360, but limited to 180\n                    constraint.rotateUp(((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed);\n\n                    rotateStart.copy(rotateEnd);\n\n                    scope.update();\n                    break;\n\n                case 2: // two-fingered touch: dolly\n                    if (scope.enableZoom === false) return;\n                    if (state !== STATE.TOUCH_DOLLY) return;\n\n                    var dx = event.touches[0].pageX - event.touches[1].pageX;\n                    var dy = event.touches[0].pageY - event.touches[1].pageY;\n                    var distance = Math.sqrt(dx * dx + dy * dy);\n\n                    dollyEnd.set(0, distance);\n                    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                    if (dollyDelta.y > 0) {\n                        constraint.dollyOut(getZoomScale());\n                    } else if (dollyDelta.y < 0) {\n                        constraint.dollyIn(getZoomScale());\n                    }\n\n                    dollyStart.copy(dollyEnd);\n\n                    scope.update();\n                    break;\n\n                case 3: // three-fingered touch: pan\n                    if (scope.enablePan === false) return;\n                    if (state !== STATE.TOUCH_PAN) return;\n\n                    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                    panDelta.subVectors(panEnd, panStart);\n\n                    pan(panDelta.x, panDelta.y);\n\n                    panStart.copy(panEnd);\n\n                    scope.update();\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n        }\n\n        function touchend(/* event */) {\n            if (scope.enabled === false) return;\n\n            scope.dispatchEvent(endEvent);\n            state = STATE.NONE;\n        }\n\n        function contextmenu(event) {\n            event.preventDefault();\n        }\n\n        this.dispose = function () {\n            this.domElement.removeEventListener('contextmenu', contextmenu, false);\n            this.domElement.removeEventListener('mousedown', onMouseDown, false);\n            this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n            this.domElement.removeEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n            this.domElement.removeEventListener('touchstart', touchstart, false);\n            this.domElement.removeEventListener('touchend', touchend, false);\n            this.domElement.removeEventListener('touchmove', touchmove, false);\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n\n            window.removeEventListener('keydown', onKeyDown, false);\n        };\n\n        this.domElement.addEventListener('contextmenu', contextmenu, false);\n\n        this.domElement.addEventListener('mousedown', onMouseDown, false);\n        this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n        this.domElement.addEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n        this.domElement.addEventListener('touchstart', touchstart, false);\n        this.domElement.addEventListener('touchend', touchend, false);\n        this.domElement.addEventListener('touchmove', touchmove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        // force an update at start\n        this.update();\n    }\n\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n\n    Object.defineProperties(OrbitControls.prototype, {\n        object: {\n            get: function () {\n                return this.constraint.object;\n            }\n        },\n\n        target: {\n            get: function () {\n                return this.constraint.target;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: target is now immutable. Use target.set() instead.');\n                this.constraint.target.copy(value);\n            }\n        },\n\n        minDistance: {\n            get: function () {\n                return this.constraint.minDistance;\n            },\n\n            set: function (value) {\n                this.constraint.minDistance = value;\n            }\n        },\n\n        maxDistance: {\n            get: function () {\n                return this.constraint.maxDistance;\n            },\n\n            set: function (value) {\n                this.constraint.maxDistance = value;\n            }\n        },\n\n        minZoom: {\n            get: function () {\n                return this.constraint.minZoom;\n            },\n\n            set: function (value) {\n                this.constraint.minZoom = value;\n            }\n        },\n\n        maxZoom: {\n            get: function () {\n                return this.constraint.maxZoom;\n            },\n\n            set: function (value) {\n                this.constraint.maxZoom = value;\n            }\n        },\n\n        minPolarAngle: {\n            get: function () {\n                return this.constraint.minPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minPolarAngle = value;\n            }\n        },\n\n        maxPolarAngle: {\n            get: function () {\n                return this.constraint.maxPolarAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxPolarAngle = value;\n            }\n        },\n\n        minAzimuthAngle: {\n            get: function () {\n                return this.constraint.minAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.minAzimuthAngle = value;\n            }\n        },\n\n        maxAzimuthAngle: {\n            get: function () {\n                return this.constraint.maxAzimuthAngle;\n            },\n\n            set: function (value) {\n                this.constraint.maxAzimuthAngle = value;\n            }\n        },\n\n        enableDamping: {\n            get: function () {\n                return this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                this.constraint.enableDamping = value;\n            }\n        },\n\n        dampingFactor: {\n            get: function () {\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                this.constraint.dampingFactor = value;\n            }\n        },\n\n        // backward compatibility\n\n        noZoom: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                return !this.enableZoom;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                this.enableZoom = !value;\n            }\n        },\n\n        noRotate: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                return !this.enableRotate;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                this.enableRotate = !value;\n            }\n        },\n\n        noPan: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                return !this.enablePan;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                this.enablePan = !value;\n            }\n        },\n\n        noKeys: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                return !this.enableKeys;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                this.enableKeys = !value;\n            }\n        },\n\n        staticMoving: {\n            get: function () {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                return !this.constraint.enableDamping;\n            },\n\n            set: function (value) {\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n                this.constraint.enableDamping = !value;\n            }\n        },\n\n        dynamicDampingFactor: {\n            get: function () {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                return this.constraint.dampingFactor;\n            },\n\n            set: function (value) {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                this.constraint.dampingFactor = value;\n            }\n        }\n    });\n\n    return OrbitControls;\n};\n","import TWEEN from '@tweenjs/tween.js';\n\n// This object contains the state of the app\nexport default {\n    scale: 1,\n    arena: {\n        size: 300,\n        minX: -140,\n        maxX: 140,\n        minY: -140,\n        maxY: 140\n    },\n    mqtt: {\n        server: 'swarm-gui.tk',\n        port: 8883,\n        path: '/socket.io',\n        user: 'swarm_user',\n        password: 'swarm_usere15',\n        channel: 'v1'\n    },\n    mixedReality: {\n        obstacles: 'M',\n        robots: 'M'\n    },\n    isDev: true,\n    isShowingStats: false,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n    constructor(renderer) {\n        const width = renderer.domElement.width;\n        const height = renderer.domElement.height;\n\n        // Create and position a Perspective Camera\n        this.threeCamera = new THREE.PerspectiveCamera(\n            Config.camera.fov,\n            width / height,\n            Config.camera.near,\n            Config.camera.far\n        );\n        this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\n        this.threeCamera.up.set(0, 0, 1);\n\n        // Initial sizing\n        this.updateSize(renderer);\n\n        // Listeners\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\n    }\n\n    updateSize(renderer) {\n        // Update camera aspect ratio with window aspect ratio\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n        // Always call updateProjectionMatrix on camera change\n        this.threeCamera.updateProjectionMatrix();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import * as THREE from 'three';\n\nimport OrbitControls from '../../utils/orbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n    constructor(camera, container) {\n        // Orbit controls first needs to pass in THREE to constructor\n        const orbitControls = new OrbitControls(THREE);\n        this.threeControls = new orbitControls(camera, container);\n\n        this.init();\n    }\n\n    init() {\n        this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\n        this.threeControls.autoRotate = Config.controls.autoRotate;\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n        this.threeControls.minDistance = Config.controls.minDistance;\n        this.threeControls.maxDistance = Config.controls.maxDistance;\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n        this.threeControls.enableDamping = Config.controls.enableDamping;\n        this.threeControls.enableZoom = Config.controls.enableZoom;\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\n\n        this.threeControls.enableRotate = true;\n        this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\n        this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\n\n        /*this.threeControls.mouseButtons = {\n            LEFT: THREE.MOUSE.ROTATE,\n            MIDDLE: THREE.MOUSE.DOLLY,\n            RIGHT: THREE.MOUSE.PAN\n        }*/\n    }\n}\n","// Local vars for rStats\nlet rS, bS, glS, tS;\n\nexport default class Stats {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n\n    setUp() {\n        bS = new BrowserStats();\n        glS = new glStats();\n        tS = new threeStats(this.renderer.threeRenderer);\n\n        rS = new rStats({\n            CSSPath: './css/',\n            userTimingAPI: true,\n            values: {\n                frame: {\n                    caption: 'Total frame time (ms)',\n                    over: 16,\n                    average: true,\n                    avgMs: 100\n                },\n                fps: { caption: 'Framerate (FPS)', below: 30 },\n                calls: { caption: 'Calls (three.js)', over: 3000 },\n                raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\n                rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\n                texture: { caption: 'GenTex', average: true, avgMs: 100 }\n            },\n            groups: [\n                { caption: 'Framerate', values: ['fps', 'raf'] },\n                {\n                    caption: 'Frame Budget',\n                    values: ['frame', 'texture', 'setup', 'render']\n                }\n            ],\n            fractions: [{ base: 'frame', steps: ['texture', 'setup', 'render'] }],\n            plugins: [bS, tS]\n        });\n    }\n\n    static start() {\n        rS('frame').start();\n        glS.start();\n\n        rS('rAF').tick();\n        rS('FPS').frame();\n\n        rS('render').start();\n    }\n\n    static end() {\n        rS('render').end(); // render finished\n        rS('frame').end(); // frame finished\n\n        // Local rStats update\n        rS('rStats').start();\n        rS().update();\n        rS('rStats').end();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        var material = new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\n        ground.position.set(0, 0, 0);\n        ground.receiveShadow = true;\n        scene.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 30, 0x000000, 0x5b5b5b);\n        grid.rotation.x = -Math.PI / 2;\n        grid.scale.set(scene_scale, scene_scale, scene_scale);\n        grid.position.set(0, 0, 0);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        scene.add(grid);\n    }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nconst _keys = ['a', 'b', 'c'];\n\nfunction VertexNormalsHelper(object, size, hex) {\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n\n    const color = hex !== undefined ? hex : 0xff0000;\n\n    //\n\n    let nNormals = 0;\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        nNormals = objGeometry.attributes.normal.count;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n\n    geometry.setAttribute('position', positions);\n\n    LineSegments.call(this, geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n    let idx;\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        const vertices = objGeometry.vertices;\n\n        const faces = objGeometry.faces;\n\n        idx = 0;\n\n        for (let i = 0, l = faces.length; i < l; i++) {\n            const face = faces[i];\n\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                const vertex = vertices[face[_keys[j]]];\n                const normal = face.vertexNormals[j];\n\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\n                _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n                idx = idx + 1;\n\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n                idx = idx + 1;\n            }\n        }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        const objPos = objGeometry.attributes.position;\n        const objNorm = objGeometry.attributes.normal;\n\n        idx = 0;\n\n        // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n            _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n            idx = idx + 1;\n\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n            idx = idx + 1;\n        }\n    }\n\n    position.needsUpdate = true;\n};\n\nexport { VertexNormalsHelper };\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\n// Promise polyfill for IE\nimport { Promise } from 'es6-promise';\n\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\n// Using promises to preload textures prevents issues when applying textures to materials\n// before the textures have loaded.\nexport default class Texture {\n    constructor() {\n        // Prop that will contain all loaded textures\n        this.textures = {};\n    }\n\n    load() {\n        const loader = new THREE.TextureLoader();\n        const maxAnisotropy = Config.maxAnisotropy;\n        const imageFiles = Config.texture.imageFiles;\n        const promiseArray = [];\n\n        loader.setPath(Config.texture.path);\n\n        imageFiles.forEach((imageFile) => {\n            // Add an individual Promise for each image in array\n            promiseArray.push(\n                new Promise((resolve, reject) => {\n                    // Each Promise will attempt to load the image file\n                    loader.load(\n                        imageFile.image,\n                        // This gets called on load with the loaded texture\n                        (texture) => {\n                            texture.anisotropy = maxAnisotropy;\n\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\n                            const modelOBJ = {};\n                            modelOBJ[imageFile.name] = texture;\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture) resolve(modelOBJ);\n                        },\n                        Helpers.logProgress(),\n                        (xhr) => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\n                    );\n                })\n            );\n        });\n\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\n        return Promise.all(promiseArray).then(\n            (textures) => {\n                // Set the textures prop object to have name be the resolved texture\n                for (let i = 0; i < textures.length; i++) {\n                    this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\n                }\n            },\n            (reason) => console.log(reason)\n        );\n    }\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    AnimationClip,\n    Bone,\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    ClampToEdgeWrapping,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    FileLoader,\n    FrontSide,\n    Group,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Interpolant,\n    InterpolateDiscrete,\n    InterpolateLinear,\n    Line,\n    LineBasicMaterial,\n    LineLoop,\n    LineSegments,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipmapNearestFilter,\n    Loader,\n    LoaderUtils,\n    Material,\n    MathUtils,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    MeshPhysicalMaterial,\n    MeshStandardMaterial,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    NumberKeyframeTrack,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Points,\n    PointsMaterial,\n    PropertyBinding,\n    QuaternionKeyframeTrack,\n    RGBAFormat,\n    RGBFormat,\n    RepeatWrapping,\n    Skeleton,\n    SkinnedMesh,\n    Sphere,\n    SpotLight,\n    TangentSpaceNormalMap,\n    TextureLoader,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    Vector2,\n    Vector3,\n    VectorKeyframeTrack,\n    sRGBEncoding\n} from 'three';\n\nconst GLTFLoader = (function () {\n    function GLTFLoader(manager) {\n        Loader.call(this, manager);\n\n        this.dracoLoader = null;\n        this.ddsLoader = null;\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n        constructor: GLTFLoader,\n\n        load: function (url, onLoad, onProgress, onError) {\n            var scope = this;\n\n            var resourcePath;\n\n            if (this.resourcePath !== '') {\n                resourcePath = this.resourcePath;\n            } else if (this.path !== '') {\n                resourcePath = this.path;\n            } else {\n                resourcePath = LoaderUtils.extractUrlBase(url);\n            }\n\n            // Tells the LoadingManager to track an extra item, which resolves after\n            // the model is fully loaded. This means the count of items loaded will\n            // be incorrect, but ensures manager.onLoad() does not fire early.\n            scope.manager.itemStart(url);\n\n            var _onError = function (e) {\n                if (onError) {\n                    onError(e);\n                } else {\n                    console.error(e);\n                }\n\n                scope.manager.itemError(url);\n                scope.manager.itemEnd(url);\n            };\n\n            var loader = new FileLoader(scope.manager);\n\n            loader.setPath(this.path);\n            loader.setResponseType('arraybuffer');\n\n            if (scope.crossOrigin === 'use-credentials') {\n                loader.setWithCredentials(true);\n            }\n\n            loader.load(\n                url,\n                function (data) {\n                    try {\n                        scope.parse(\n                            data,\n                            resourcePath,\n                            function (gltf) {\n                                onLoad(gltf);\n\n                                scope.manager.itemEnd(url);\n                            },\n                            _onError\n                        );\n                    } catch (e) {\n                        _onError(e);\n                    }\n                },\n                onProgress,\n                _onError\n            );\n        },\n\n        setDRACOLoader: function (dracoLoader) {\n            this.dracoLoader = dracoLoader;\n            return this;\n        },\n\n        setDDSLoader: function (ddsLoader) {\n            this.ddsLoader = ddsLoader;\n            return this;\n        },\n\n        parse: function (data, path, onLoad, onError) {\n            var content;\n            var extensions = {};\n\n            if (typeof data === 'string') {\n                content = data;\n            } else {\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n                    try {\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n                    } catch (error) {\n                        if (onError) onError(error);\n                        return;\n                    }\n\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n                } else {\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\n                }\n            }\n\n            var json = JSON.parse(content);\n\n            if (json.asset === undefined || json.asset.version[0] < 2) {\n                if (onError)\n                    onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n                return;\n            }\n\n            if (json.extensionsUsed) {\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\n                    var extensionName = json.extensionsUsed[i];\n                    var extensionsRequired = json.extensionsRequired || [];\n\n                    switch (extensionName) {\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                            extensions[extensionName] = new GLTFLightsExtension(json);\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n                            extensions[extensionName] = new GLTFMaterialsClearcoatExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                            extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n                            break;\n\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\n                            extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n                            break;\n\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                            extensions[extensionName] = new GLTFTextureTransformExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                            extensions[extensionName] = new GLTFMeshQuantizationExtension();\n                            break;\n\n                        default:\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\n                                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n                            }\n                    }\n                }\n            }\n\n            var parser = new GLTFParser(json, extensions, {\n                path: path || this.resourcePath || '',\n                crossOrigin: this.crossOrigin,\n                manager: this.manager\n            });\n\n            parser.parse(onLoad, onError);\n        }\n    });\n\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n        var objects = {};\n\n        return {\n            get: function (key) {\n                return objects[key];\n            },\n\n            add: function (key, object) {\n                objects[key] = object;\n            },\n\n            remove: function (key) {\n                delete objects[key];\n            },\n\n            removeAll: function () {\n                objects = {};\n            }\n        };\n    }\n\n    /*********************************/\n    /********** EXTENSIONS ***********/\n    /*********************************/\n\n    var EXTENSIONS = {\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n    function GLTFTextureDDSExtension(ddsLoader) {\n        if (!ddsLoader) {\n            throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n        }\n\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n        this.ddsLoader = ddsLoader;\n    }\n\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n    function GLTFLightsExtension(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n        this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n        var lightDef = this.lightDefs[lightIndex];\n        var lightNode;\n\n        var color = new Color(0xffffff);\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n        switch (lightDef.type) {\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                lightNode.distance = range;\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.distance = range;\n                // Handle spotlight properties.\n                lightDef.spot = lightDef.spot || {};\n                lightDef.spot.innerConeAngle =\n                    lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n                lightDef.spot.outerConeAngle =\n                    lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n                lightNode.angle = lightDef.spot.outerConeAngle;\n                lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            default:\n                throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n        }\n\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n        // here, because node-level parsing will only override position if explicitly specified.\n        lightNode.position.set(0, 0, 0);\n\n        lightNode.decay = 2;\n\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\n\n        return Promise.resolve(lightNode);\n    };\n\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n    function GLTFMaterialsUnlitExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n        return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        if (metallicRoughness) {\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n    function GLTFMaterialsClearcoatExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n        return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        var extension = materialDef.extensions[this.name];\n\n        if (extension.clearcoatFactor !== undefined) {\n            materialParams.clearcoat = extension.clearcoatFactor;\n        }\n\n        if (extension.clearcoatTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n        }\n\n        if (extension.clearcoatRoughnessFactor !== undefined) {\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n        }\n\n        if (extension.clearcoatRoughnessTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture)\n            );\n        }\n\n        if (extension.clearcoatNormalTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\n                var scale = extension.clearcoatNormalTexture.scale;\n\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /* BINARY EXTENSION */\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n    function GLTFBinaryExtension(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n        } else if (this.header.version < 2.0) {\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n                this.content = LoaderUtils.decodeText(contentArray);\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n        }\n\n        if (this.content === null) {\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\n        }\n    }\n\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n        if (!dracoLoader) {\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n        }\n\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n        this.json = json;\n        this.dracoLoader = dracoLoader;\n        this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n        var json = this.json;\n        var dracoLoader = this.dracoLoader;\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\n        var threeAttributeMap = {};\n        var attributeNormalizedMap = {};\n        var attributeTypeMap = {};\n\n        for (var attributeName in gltfAttributeMap) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n        }\n\n        for (attributeName in primitive.attributes) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            if (gltfAttributeMap[attributeName] !== undefined) {\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n                attributeTypeMap[threeAttributeName] = componentType;\n                attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n            }\n        }\n\n        return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n            return new Promise(function (resolve) {\n                dracoLoader.decodeDracoFile(\n                    bufferView,\n                    function (geometry) {\n                        for (var attributeName in geometry.attributes) {\n                            var attribute = geometry.attributes[attributeName];\n                            var normalized = attributeNormalizedMap[attributeName];\n\n                            if (normalized !== undefined) attribute.normalized = normalized;\n                        }\n\n                        resolve(geometry);\n                    },\n                    threeAttributeMap,\n                    attributeTypeMap\n                );\n            });\n        });\n    };\n\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n    function GLTFTextureTransformExtension() {\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n        texture = texture.clone();\n\n        if (transform.offset !== undefined) {\n            texture.offset.fromArray(transform.offset);\n        }\n\n        if (transform.rotation !== undefined) {\n            texture.rotation = transform.rotation;\n        }\n\n        if (transform.scale !== undefined) {\n            texture.repeat.fromArray(transform.scale);\n        }\n\n        if (transform.texCoord !== undefined) {\n            console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n        }\n\n        texture.needsUpdate = true;\n\n        return texture;\n    };\n\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n    function GLTFMeshStandardSGMaterial(params) {\n        MeshStandardMaterial.call(this);\n\n        this.isGLTFSpecularGlossinessMaterial = true;\n\n        //various chunks that need replacing\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\n            '\\n'\n        );\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n            'material.specularRoughness += geometryRoughness;',\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n            'material.specularColor = specularFactor.rgb;'\n        ].join('\\n');\n\n        var uniforms = {\n            specular: { value: new Color().setHex(0xffffff) },\n            glossiness: { value: 1 },\n            specularMap: { value: null },\n            glossinessMap: { value: null }\n        };\n\n        this._extraUniforms = uniforms;\n\n        // please see #14031 or #13198 for an alternate approach\n        this.onBeforeCompile = function (shader) {\n            for (var uniformName in uniforms) {\n                shader.uniforms[uniformName] = uniforms[uniformName];\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float metalness;',\n                'uniform float glossiness;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_pars_fragment>',\n                specularMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_pars_fragment>',\n                glossinessMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_fragment>',\n                specularMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_fragment>',\n                glossinessMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <lights_physical_fragment>',\n                lightPhysicalFragmentChunk\n            );\n        };\n\n        /*eslint-disable*/\n        Object.defineProperties(this, {\n            specular: {\n                get: function () {\n                    return uniforms.specular.value;\n                },\n                set: function (v) {\n                    uniforms.specular.value = v;\n                }\n            },\n            specularMap: {\n                get: function () {\n                    return uniforms.specularMap.value;\n                },\n                set: function (v) {\n                    uniforms.specularMap.value = v;\n                }\n            },\n            glossiness: {\n                get: function () {\n                    return uniforms.glossiness.value;\n                },\n                set: function (v) {\n                    uniforms.glossiness.value = v;\n                }\n            },\n            glossinessMap: {\n                get: function () {\n                    return uniforms.glossinessMap.value;\n                },\n                set: function (v) {\n                    uniforms.glossinessMap.value = v;\n                    //how about something like this - @pailhead\n                    if (v) {\n                        this.defines.USE_GLOSSINESSMAP = '';\n                        // set USE_ROUGHNESSMAP to enable vUv\n                        this.defines.USE_ROUGHNESSMAP = '';\n                    } else {\n                        delete this.defines.USE_ROUGHNESSMAP;\n                        delete this.defines.USE_GLOSSINESSMAP;\n                    }\n                }\n            }\n        });\n\n        /*eslint-enable*/\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n\n        this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n        MeshStandardMaterial.prototype.copy.call(this, source);\n        this.specularMap = source.specularMap;\n        this.specular.copy(source.specular);\n        this.glossinessMap = source.glossinessMap;\n        this.glossiness = source.glossiness;\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n        return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n        return {\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n            specularGlossinessParams: [\n                'color',\n                'map',\n                'lightMap',\n                'lightMapIntensity',\n                'aoMap',\n                'aoMapIntensity',\n                'emissive',\n                'emissiveIntensity',\n                'emissiveMap',\n                'bumpMap',\n                'bumpScale',\n                'normalMap',\n                'normalMapType',\n                'displacementMap',\n                'displacementScale',\n                'displacementBias',\n                'specularMap',\n                'specular',\n                'glossinessMap',\n                'glossiness',\n                'alphaMap',\n                'envMap',\n                'envMapIntensity',\n                'refractionRatio'\n            ],\n\n            getMaterialType: function () {\n                return GLTFMeshStandardSGMaterial;\n            },\n\n            extendParams: function (materialParams, materialDef, parser) {\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n                materialParams.color = new Color(1.0, 1.0, 1.0);\n                materialParams.opacity = 1.0;\n\n                var pending = [];\n\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n                    var array = pbrSpecularGlossiness.diffuseFactor;\n\n                    materialParams.color.fromArray(array);\n                    materialParams.opacity = array[3];\n                }\n\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n                    pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n                }\n\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\n                materialParams.glossiness =\n                    pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n                    materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n                    pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n                    pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n                }\n\n                return Promise.all(pending);\n            },\n\n            createMaterial: function (materialParams) {\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\n                material.fog = true;\n\n                material.color = materialParams.color;\n\n                material.map = materialParams.map === undefined ? null : materialParams.map;\n\n                material.lightMap = null;\n                material.lightMapIntensity = 1.0;\n\n                material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n                material.aoMapIntensity = 1.0;\n\n                material.emissive = materialParams.emissive;\n                material.emissiveIntensity = 1.0;\n                material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n                material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n                material.bumpScale = 1;\n\n                material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n                material.normalMapType = TangentSpaceNormalMap;\n\n                if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n\n                material.displacementMap = null;\n                material.displacementScale = 1;\n                material.displacementBias = 0;\n\n                material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n                material.specular = materialParams.specular;\n\n                material.glossinessMap =\n                    materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n                material.glossiness = materialParams.glossiness;\n\n                material.alphaMap = null;\n\n                material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n                material.envMapIntensity = 1.0;\n\n                material.refractionRatio = 0.98;\n\n                return material;\n            }\n        };\n    }\n\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n    function GLTFMeshQuantizationExtension() {\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n\n    /*********************************/\n    /********** INTERPOLATION ********/\n    /*********************************/\n\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n        Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n        // Copies a sample value to the result buffer. See description of glTF\n        // CUBICSPLINE values layout in interpolate_() function below.\n\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            valueSize = this.valueSize,\n            offset = index * valueSize * 3 + valueSize;\n\n        for (var i = 0; i !== valueSize; i++) {\n            result[i] = values[offset + i];\n        }\n\n        return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n        var result = this.resultBuffer;\n        var values = this.sampleValues;\n        var stride = this.valueSize;\n\n        var stride2 = stride * 2;\n        var stride3 = stride * 3;\n\n        var td = t1 - t0;\n\n        var p = (t - t0) / td;\n        var pp = p * p;\n        var ppp = pp * p;\n\n        var offset1 = i1 * stride3;\n        var offset0 = offset1 - stride3;\n\n        var s2 = -2 * ppp + 3 * pp;\n        var s3 = ppp - pp;\n        var s0 = 1 - s2;\n        var s1 = s3 - pp + p;\n\n        // Layout of keyframe output values for CUBICSPLINE animations:\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n        for (var i = 0; i !== stride; i++) {\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n        }\n\n        return result;\n    };\n\n    /*********************************/\n    /********** INTERNALS ************/\n    /*********************************/\n\n    /* CONSTANTS */\n\n    var WEBGL_CONSTANTS = {\n        FLOAT: 5126,\n        //FLOAT_MAT2: 35674,\n        FLOAT_MAT3: 35675,\n        FLOAT_MAT4: 35676,\n        FLOAT_VEC2: 35664,\n        FLOAT_VEC3: 35665,\n        FLOAT_VEC4: 35666,\n        LINEAR: 9729,\n        REPEAT: 10497,\n        SAMPLER_2D: 35678,\n        POINTS: 0,\n        LINES: 1,\n        LINE_LOOP: 2,\n        LINE_STRIP: 3,\n        TRIANGLES: 4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN: 6,\n        UNSIGNED_BYTE: 5121,\n        UNSIGNED_SHORT: 5123\n    };\n\n    var WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    var WEBGL_FILTERS = {\n        9728: NearestFilter,\n        9729: LinearFilter,\n        9984: NearestMipmapNearestFilter,\n        9985: LinearMipmapNearestFilter,\n        9986: NearestMipmapLinearFilter,\n        9987: LinearMipmapLinearFilter\n    };\n\n    var WEBGL_WRAPPINGS = {\n        33071: ClampToEdgeWrapping,\n        33648: MirroredRepeatWrapping,\n        10497: RepeatWrapping\n    };\n\n    var WEBGL_TYPE_SIZES = {\n        SCALAR: 1,\n        VEC2: 2,\n        VEC3: 3,\n        VEC4: 4,\n        MAT2: 4,\n        MAT3: 9,\n        MAT4: 16\n    };\n\n    var ATTRIBUTES = {\n        POSITION: 'position',\n        NORMAL: 'normal',\n        TANGENT: 'tangent',\n        TEXCOORD_0: 'uv',\n        TEXCOORD_1: 'uv2',\n        COLOR_0: 'color',\n        WEIGHTS_0: 'skinWeight',\n        JOINTS_0: 'skinIndex'\n    };\n\n    var PATH_PROPERTIES = {\n        scale: 'scale',\n        translation: 'position',\n        rotation: 'quaternion',\n        weights: 'morphTargetInfluences'\n    };\n\n    var INTERPOLATION = {\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n        // keyframe track will be initialized with a default interpolation type, then modified.\n        LINEAR: InterpolateLinear,\n        STEP: InterpolateDiscrete\n    };\n\n    var ALPHA_MODES = {\n        OPAQUE: 'OPAQUE',\n        MASK: 'MASK',\n        BLEND: 'BLEND'\n    };\n\n    var MIME_TYPE_FORMATS = {\n        'image/png': RGBAFormat,\n        'image/jpeg': RGBFormat\n    };\n\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return '';\n\n        // Host Relative URL\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n            // eslint-disable-next-line no-useless-escape\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) return url;\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) return url;\n\n        // Relative URL\n        return path + url;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n    function createDefaultMaterial(cache) {\n        if (cache['DefaultMaterial'] === undefined) {\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\n                color: 0xffffff,\n                emissive: 0x000000,\n                metalness: 1,\n                roughness: 1,\n                transparent: false,\n                depthTest: true,\n                side: FrontSide\n            });\n        }\n\n        return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n        // Add unknown glTF extensions to an object's userData.\n\n        for (var name in objectDef.extensions) {\n            if (knownExtensions[name] === undefined) {\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\n            }\n        }\n    }\n\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n    function assignExtrasToUserData(object, gltfDef) {\n        if (gltfDef.extras !== undefined) {\n            if (typeof gltfDef.extras === 'object') {\n                Object.assign(object.userData, gltfDef.extras);\n            } else {\n                console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n            }\n        }\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addMorphTargets(geometry, targets, parser) {\n        var hasMorphPosition = false;\n        var hasMorphNormal = false;\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (target.POSITION !== undefined) hasMorphPosition = true;\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\n\n            if (hasMorphPosition && hasMorphNormal) break;\n        }\n\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n        var pendingPositionAccessors = [];\n        var pendingNormalAccessors = [];\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (hasMorphPosition) {\n                var pendingAccessor =\n                    target.POSITION !== undefined\n                        ? parser.getDependency('accessor', target.POSITION)\n                        : geometry.attributes.position;\n\n                pendingPositionAccessors.push(pendingAccessor);\n            }\n\n            if (hasMorphNormal) {\n                var pendingAccessor =\n                    target.NORMAL !== undefined\n                        ? parser.getDependency('accessor', target.NORMAL)\n                        : geometry.attributes.normal;\n\n                pendingNormalAccessors.push(pendingAccessor);\n            }\n        }\n\n        return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\n            accessors\n        ) {\n            var morphPositions = accessors[0];\n            var morphNormals = accessors[1];\n\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n            geometry.morphTargetsRelative = true;\n\n            return geometry;\n        });\n    }\n\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n    function updateMorphTargets(mesh, meshDef) {\n        mesh.updateMorphTargets();\n\n        if (meshDef.weights !== undefined) {\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\n            }\n        }\n\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n            var targetNames = meshDef.extras.targetNames;\n\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\n                mesh.morphTargetDictionary = {};\n\n                for (var i = 0, il = targetNames.length; i < il; i++) {\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\n                }\n            } else {\n                console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n            }\n        }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n        var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n        var geometryKey;\n\n        if (dracoExtension) {\n            geometryKey =\n                'draco:' +\n                dracoExtension.bufferView +\n                ':' +\n                dracoExtension.indices +\n                ':' +\n                createAttributesKey(dracoExtension.attributes);\n        } else {\n            geometryKey =\n                primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n        }\n\n        return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n        var attributesKey = '';\n\n        var keys = Object.keys(attributes).sort();\n\n        for (var i = 0, il = keys.length; i < il; i++) {\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n        }\n\n        return attributesKey;\n    }\n\n    /* GLTF PARSER */\n\n    function GLTFParser(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n\n        // BufferGeometry caching\n        this.primitiveCache = {};\n\n        this.textureLoader = new TextureLoader(this.options.manager);\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n        this.fileLoader = new FileLoader(this.options.manager);\n        this.fileLoader.setResponseType('arraybuffer');\n\n        if (this.options.crossOrigin === 'use-credentials') {\n            this.fileLoader.setWithCredentials(true);\n        }\n    }\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Mark the special nodes/meshes in json for efficient parse\n        this.markDefs();\n\n        Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\n            .then(function (dependencies) {\n                var result = {\n                    scene: dependencies[0][json.scene || 0],\n                    scenes: dependencies[0],\n                    animations: dependencies[1],\n                    cameras: dependencies[2],\n                    asset: json.asset,\n                    parser: parser,\n                    userData: {}\n                };\n\n                addUnknownExtensionsToUserData(extensions, result, json);\n\n                assignExtrasToUserData(result, json);\n\n                onLoad(result);\n            })\n            .catch(onError);\n    };\n\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n    GLTFParser.prototype.markDefs = function () {\n        var nodeDefs = this.json.nodes || [];\n        var skinDefs = this.json.skins || [];\n        var meshDefs = this.json.meshes || [];\n\n        var meshReferences = {};\n        var meshUses = {};\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n            var joints = skinDefs[skinIndex].joints;\n\n            for (var i = 0, il = joints.length; i < il; i++) {\n                nodeDefs[joints[i]].isBone = true;\n            }\n        }\n\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n        // avoid having more than one Mesh with the same name, count\n        // references and rename instances below.\n        //\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n        for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n            var nodeDef = nodeDefs[nodeIndex];\n\n            if (nodeDef.mesh !== undefined) {\n                if (meshReferences[nodeDef.mesh] === undefined) {\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n                }\n\n                meshReferences[nodeDef.mesh]++;\n\n                // Nothing in the mesh definition indicates whether it is\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\n                // to mark SkinnedMesh if node has skin.\n                if (nodeDef.skin !== undefined) {\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n                }\n            }\n        }\n\n        this.json.meshReferences = meshReferences;\n        this.json.meshUses = meshUses;\n    };\n\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n    GLTFParser.prototype.getDependency = function (type, index) {\n        var cacheKey = type + ':' + index;\n        var dependency = this.cache.get(cacheKey);\n\n        if (!dependency) {\n            switch (type) {\n                case 'scene':\n                    dependency = this.loadScene(index);\n                    break;\n\n                case 'node':\n                    dependency = this.loadNode(index);\n                    break;\n\n                case 'mesh':\n                    dependency = this.loadMesh(index);\n                    break;\n\n                case 'accessor':\n                    dependency = this.loadAccessor(index);\n                    break;\n\n                case 'bufferView':\n                    dependency = this.loadBufferView(index);\n                    break;\n\n                case 'buffer':\n                    dependency = this.loadBuffer(index);\n                    break;\n\n                case 'material':\n                    dependency = this.loadMaterial(index);\n                    break;\n\n                case 'texture':\n                    dependency = this.loadTexture(index);\n                    break;\n\n                case 'skin':\n                    dependency = this.loadSkin(index);\n                    break;\n\n                case 'animation':\n                    dependency = this.loadAnimation(index);\n                    break;\n\n                case 'camera':\n                    dependency = this.loadCamera(index);\n                    break;\n\n                case 'light':\n                    dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n                    break;\n\n                default:\n                    throw new Error('Unknown type: ' + type);\n            }\n\n            this.cache.add(cacheKey, dependency);\n        }\n\n        return dependency;\n    };\n\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n    GLTFParser.prototype.getDependencies = function (type) {\n        var dependencies = this.cache.get(type);\n\n        if (!dependencies) {\n            var parser = this;\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n            dependencies = Promise.all(\n                defs.map(function (def, index) {\n                    return parser.getDependency(type, index);\n                })\n            );\n\n            this.cache.add(type, dependencies);\n        }\n\n        return dependencies;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n        var bufferDef = this.json.buffers[bufferIndex];\n        var loader = this.fileLoader;\n\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n            throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n        }\n\n        // If present, GLB container is required to be the first buffer.\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n        }\n\n        var options = this.options;\n\n        return new Promise(function (resolve, reject) {\n            loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n                reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n            });\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n            var byteLength = bufferViewDef.byteLength || 0;\n            var byteOffset = bufferViewDef.byteOffset || 0;\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var accessorDef = this.json.accessors[accessorIndex];\n\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n            // Ignore empty accessors, which may be used to declare runtime\n            // information about attributes coming from another source (e.g. Draco\n            // compression extension).\n            return Promise.resolve(null);\n        }\n\n        var pendingBufferViews = [];\n\n        if (accessorDef.bufferView !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n        } else {\n            pendingBufferViews.push(null);\n        }\n\n        if (accessorDef.sparse !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n        }\n\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\n            var bufferView = bufferViews[0];\n\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n            var itemBytes = elementBytes * itemSize;\n            var byteOffset = accessorDef.byteOffset || 0;\n            var byteStride =\n                accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n            var normalized = accessorDef.normalized === true;\n            var array, bufferAttribute;\n\n            // The buffer is not interleaved if the stride is the item size in bytes.\n            if (byteStride && byteStride !== itemBytes) {\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n                // This makes sure that IBA.count reflects accessor.count properly\n                var ibSlice = Math.floor(byteOffset / byteStride);\n                var ibCacheKey =\n                    'InterleavedBuffer:' +\n                    accessorDef.bufferView +\n                    ':' +\n                    accessorDef.componentType +\n                    ':' +\n                    ibSlice +\n                    ':' +\n                    accessorDef.count;\n                var ib = parser.cache.get(ibCacheKey);\n\n                if (!ib) {\n                    array = new TypedArray(\n                        bufferView,\n                        ibSlice * byteStride,\n                        (accessorDef.count * byteStride) / elementBytes\n                    );\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n                    parser.cache.add(ibCacheKey, ib);\n                }\n\n                bufferAttribute = new InterleavedBufferAttribute(\n                    ib,\n                    itemSize,\n                    (byteOffset % byteStride) / elementBytes,\n                    normalized\n                );\n            } else {\n                if (bufferView === null) {\n                    array = new TypedArray(accessorDef.count * itemSize);\n                } else {\n                    array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n                }\n\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n            }\n\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n            if (accessorDef.sparse !== undefined) {\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n                var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n                var sparseIndices = new TypedArrayIndices(\n                    bufferViews[1],\n                    byteOffsetIndices,\n                    accessorDef.sparse.count * itemSizeIndices\n                );\n                var sparseValues = new TypedArray(\n                    bufferViews[2],\n                    byteOffsetValues,\n                    accessorDef.sparse.count * itemSize\n                );\n\n                if (bufferView !== null) {\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                    bufferAttribute = new BufferAttribute(\n                        bufferAttribute.array.slice(),\n                        bufferAttribute.itemSize,\n                        bufferAttribute.normalized\n                    );\n                }\n\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\n                    var index = sparseIndices[i];\n\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                    if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                    if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                    if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                    if (itemSize >= 5)\n                        throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n                }\n            }\n\n            return bufferAttribute;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n        var parser = this;\n        var json = this.json;\n        var options = this.options;\n        var textureLoader = this.textureLoader;\n\n        var URL = self.URL || self.webkitURL;\n\n        var textureDef = json.textures[textureIndex];\n\n        var textureExtensions = textureDef.extensions || {};\n\n        var source;\n\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n        } else {\n            source = json.images[textureDef.source];\n        }\n\n        var sourceURI = source.uri;\n        var isObjectURL = false;\n\n        if (source.bufferView !== undefined) {\n            // Load binary image data from bufferView, if provided.\n\n            sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n                isObjectURL = true;\n                var blob = new Blob([bufferView], { type: source.mimeType });\n                sourceURI = URL.createObjectURL(blob);\n                return sourceURI;\n            });\n        }\n\n        return Promise.resolve(sourceURI)\n            .then(function (sourceURI) {\n                // Load Texture resource.\n\n                var loader = options.manager.getHandler(sourceURI);\n\n                if (!loader) {\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n                        : textureLoader;\n                }\n\n                return new Promise(function (resolve, reject) {\n                    loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n                });\n            })\n            .then(function (texture) {\n                // Clean up resources and configure Texture.\n\n                if (isObjectURL === true) {\n                    URL.revokeObjectURL(sourceURI);\n                }\n\n                texture.flipY = false;\n\n                if (textureDef.name) texture.name = textureDef.name;\n\n                // Ignore unknown mime types, like DDS files.\n                if (source.mimeType in MIME_TYPE_FORMATS) {\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\n                }\n\n                var samplers = json.samplers || {};\n                var sampler = samplers[textureDef.sampler] || {};\n\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n                texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n                return texture;\n            });\n    };\n\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n        var parser = this;\n\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\n            if (!texture.isCompressedTexture) {\n                switch (mapName) {\n                    case 'aoMap':\n                    case 'emissiveMap':\n                    case 'metalnessMap':\n                    case 'normalMap':\n                    case 'roughnessMap':\n                        texture.format = RGBFormat;\n                        break;\n                }\n            }\n\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n            if (\n                mapDef.texCoord !== undefined &&\n                mapDef.texCoord != 0 &&\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\n            ) {\n                console.warn(\n                    'THREE.GLTFLoader: Custom UV set ' +\n                        mapDef.texCoord +\n                        ' for texture ' +\n                        mapName +\n                        ' not yet supported.'\n                );\n            }\n\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n                var transform =\n                    mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n                if (transform) {\n                    texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n                }\n            }\n\n            materialParams[mapName] = texture;\n        });\n    };\n\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n        var geometry = mesh.geometry;\n        var material = mesh.material;\n\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\n        var useVertexColors = geometry.attributes.color !== undefined;\n        var useFlatShading = geometry.attributes.normal === undefined;\n        var useSkinning = mesh.isSkinnedMesh === true;\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n        var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n        if (mesh.isPoints) {\n            var cacheKey = 'PointsMaterial:' + material.uuid;\n\n            var pointsMaterial = this.cache.get(cacheKey);\n\n            if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n                this.cache.add(cacheKey, pointsMaterial);\n            }\n\n            material = pointsMaterial;\n        } else if (mesh.isLine) {\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n            var lineMaterial = this.cache.get(cacheKey);\n\n            if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n\n                this.cache.add(cacheKey, lineMaterial);\n            }\n\n            material = lineMaterial;\n        }\n\n        // Clone the material if it will be modified\n        if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n            if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n            if (useSkinning) cacheKey += 'skinning:';\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\n            if (useVertexColors) cacheKey += 'vertex-colors:';\n            if (useFlatShading) cacheKey += 'flat-shading:';\n            if (useMorphTargets) cacheKey += 'morph-targets:';\n            if (useMorphNormals) cacheKey += 'morph-normals:';\n\n            var cachedMaterial = this.cache.get(cacheKey);\n\n            if (!cachedMaterial) {\n                cachedMaterial = material.clone();\n\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\n                if (useVertexColors) cachedMaterial.vertexColors = true;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n\n                this.cache.add(cacheKey, cachedMaterial);\n            }\n\n            material = cachedMaterial;\n        }\n\n        // workarounds for mesh and geometry\n\n        if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n            geometry.setAttribute('uv2', geometry.attributes.uv);\n        }\n\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        if (material.normalScale && !useVertexTangents) {\n            material.normalScale.y = -material.normalScale.y;\n        }\n\n        if (material.clearcoatNormalScale && !useVertexTangents) {\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n        }\n\n        mesh.material = material;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n        var materialDef = json.materials[materialIndex];\n\n        var materialType;\n        var materialParams = {};\n        var materialExtensions = materialDef.extensions || {};\n\n        var pending = [];\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n            var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n            materialType = sgExtension.getMaterialType();\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n            materialType = kmuExtension.getMaterialType();\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n        } else {\n            // Specification:\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n            materialType = MeshStandardMaterial;\n\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n            materialParams.color = new Color(1.0, 1.0, 1.0);\n            materialParams.opacity = 1.0;\n\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n\n            materialParams.metalness =\n                metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n            materialParams.roughness =\n                metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n                pending.push(\n                    parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n            }\n        }\n\n        if (materialDef.doubleSided === true) {\n            materialParams.side = DoubleSide;\n        }\n\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n        if (alphaMode === ALPHA_MODES.BLEND) {\n            materialParams.transparent = true;\n\n            // See: https://github.com/mrdoob/three.js/issues/17706\n            materialParams.depthWrite = false;\n        } else {\n            materialParams.transparent = false;\n\n            if (alphaMode === ALPHA_MODES.MASK) {\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n            }\n        }\n\n        if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n\n            materialParams.normalScale = new Vector2(1, 1);\n\n            if (materialDef.normalTexture.scale !== undefined) {\n                materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n            }\n        }\n\n        if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n            if (materialDef.occlusionTexture.strength !== undefined) {\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n            }\n        }\n\n        if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n\n        if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n        }\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\n            materialType = clearcoatExtension.getMaterialType();\n            pending.push(clearcoatExtension.extendParams(materialParams, { extensions: materialExtensions }, parser));\n        }\n\n        return Promise.all(pending).then(function () {\n            var material;\n\n            if (materialType === GLTFMeshStandardSGMaterial) {\n                material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n            } else {\n                material = new materialType(materialParams);\n            }\n\n            if (materialDef.name) material.name = materialDef.name;\n\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n            if (material.map) material.map.encoding = sRGBEncoding;\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n            assignExtrasToUserData(material, materialDef);\n\n            if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n            return material;\n        });\n    };\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n    function computeBounds(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var box = new Box3();\n\n        if (attributes.POSITION !== undefined) {\n            var accessor = parser.json.accessors[attributes.POSITION];\n\n            var min = accessor.min;\n            var max = accessor.max;\n\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n                box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n            } else {\n                console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\n                return;\n            }\n        } else {\n            return;\n        }\n\n        var targets = primitiveDef.targets;\n\n        if (targets !== undefined) {\n            var maxDisplacement = new Vector3();\n            var vector = new Vector3();\n\n            for (var i = 0, il = targets.length; i < il; i++) {\n                var target = targets[i];\n\n                if (target.POSITION !== undefined) {\n                    var accessor = parser.json.accessors[target.POSITION];\n                    var min = accessor.min;\n                    var max = accessor.max;\n\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n                    if (min !== undefined && max !== undefined) {\n                        // we need to get max of absolute components because target weight is [-1,1]\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n                        maxDisplacement.max(vector);\n                    } else {\n                        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n                    }\n                }\n            }\n\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n            box.expandByVector(maxDisplacement);\n        }\n\n        geometry.boundingBox = box;\n\n        var sphere = new Sphere();\n\n        box.getCenter(sphere.center);\n        sphere.radius = box.min.distanceTo(box.max) / 2;\n\n        geometry.boundingSphere = sphere;\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var pending = [];\n\n        function assignAttributeAccessor(accessorIndex, attributeName) {\n            return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n                geometry.setAttribute(attributeName, accessor);\n            });\n        }\n\n        for (var gltfAttributeName in attributes) {\n            var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n            // Skip attributes already provided by e.g. Draco extension.\n            if (threeAttributeName in geometry.attributes) continue;\n\n            pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n        }\n\n        if (primitiveDef.indices !== undefined && !geometry.index) {\n            var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n                geometry.setIndex(accessor);\n            });\n\n            pending.push(accessor);\n        }\n\n        assignExtrasToUserData(geometry, primitiveDef);\n\n        computeBounds(geometry, primitiveDef, parser);\n\n        return Promise.all(pending).then(function () {\n            return primitiveDef.targets !== undefined\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\n                : geometry;\n        });\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n    function toTrianglesDrawMode(geometry, drawMode) {\n        var index = geometry.getIndex();\n\n        // generate index if not present\n\n        if (index === null) {\n            var indices = [];\n\n            var position = geometry.getAttribute('position');\n\n            if (position !== undefined) {\n                for (var i = 0; i < position.count; i++) {\n                    indices.push(i);\n                }\n\n                geometry.setIndex(indices);\n                index = geometry.getIndex();\n            } else {\n                console.error(\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n                );\n                return geometry;\n            }\n        }\n\n        //\n\n        var numberOfTriangles = index.count - 2;\n        var newIndices = [];\n\n        if (drawMode === TriangleFanDrawMode) {\n            // gl.TRIANGLE_FAN\n\n            for (var i = 1; i <= numberOfTriangles; i++) {\n                newIndices.push(index.getX(0));\n                newIndices.push(index.getX(i));\n                newIndices.push(index.getX(i + 1));\n            }\n        } else {\n            // gl.TRIANGLE_STRIP\n\n            for (var i = 0; i < numberOfTriangles; i++) {\n                if (i % 2 === 0) {\n                    newIndices.push(index.getX(i));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i + 2));\n                } else {\n                    newIndices.push(index.getX(i + 2));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i));\n                }\n            }\n        }\n\n        if (newIndices.length / 3 !== numberOfTriangles) {\n            console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n        }\n\n        // build final geometry\n\n        var newGeometry = geometry.clone();\n        newGeometry.setIndex(newIndices);\n\n        return newGeometry;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n        var parser = this;\n        var extensions = this.extensions;\n        var cache = this.primitiveCache;\n\n        function createDracoPrimitive(primitive) {\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                .decodePrimitive(primitive, parser)\n                .then(function (geometry) {\n                    return addPrimitiveAttributes(geometry, primitive, parser);\n                });\n        }\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var primitive = primitives[i];\n            var cacheKey = createPrimitiveKey(primitive);\n\n            // See if we've already created this geometry\n            var cached = cache[cacheKey];\n\n            if (cached) {\n                // Use the cached geometry if it exists\n                pending.push(cached.promise);\n            } else {\n                var geometryPromise;\n\n                if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n                    // Use DRACO geometry if available\n                    geometryPromise = createDracoPrimitive(primitive);\n                } else {\n                    // Otherwise create a new geometry\n                    geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n                }\n\n                // Cache this geometry\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n                pending.push(geometryPromise);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var meshDef = json.meshes[meshIndex];\n        var primitives = meshDef.primitives;\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var material =\n                primitives[i].material === undefined\n                    ? createDefaultMaterial(this.cache)\n                    : this.getDependency('material', primitives[i].material);\n\n            pending.push(material);\n        }\n\n        pending.push(parser.loadGeometries(primitives));\n\n        return Promise.all(pending).then(function (results) {\n            var materials = results.slice(0, results.length - 1);\n            var geometries = results[results.length - 1];\n\n            var meshes = [];\n\n            for (var i = 0, il = geometries.length; i < il; i++) {\n                var geometry = geometries[i];\n                var primitive = primitives[i];\n\n                // 1. create Mesh\n\n                var mesh;\n\n                var material = materials[i];\n\n                if (\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n                    primitive.mode === undefined\n                ) {\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n                    mesh =\n                        meshDef.isSkinnedMesh === true\n                            ? new SkinnedMesh(geometry, material)\n                            : new Mesh(geometry, material);\n\n                    if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n                        mesh.normalizeSkinWeights();\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n                    mesh = new Points(geometry, material);\n                } else {\n                    throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n                }\n\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n                    updateMorphTargets(mesh, meshDef);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (geometries.length > 1) mesh.name += '_' + i;\n\n                assignExtrasToUserData(mesh, meshDef);\n\n                parser.assignFinalMaterial(mesh);\n\n                meshes.push(mesh);\n            }\n\n            if (meshes.length === 1) {\n                return meshes[0];\n            }\n\n            var group = new Group();\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n                group.add(meshes[i]);\n            }\n\n            return group;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n        var camera;\n        var cameraDef = this.json.cameras[cameraIndex];\n        var params = cameraDef[cameraDef.type];\n\n        if (!params) {\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\n            return;\n        }\n\n        if (cameraDef.type === 'perspective') {\n            camera = new PerspectiveCamera(\n                MathUtils.radToDeg(params.yfov),\n                params.aspectRatio || 1,\n                params.znear || 1,\n                params.zfar || 2e6\n            );\n        } else if (cameraDef.type === 'orthographic') {\n            camera = new OrthographicCamera(\n                -params.xmag,\n                params.xmag,\n                params.ymag,\n                -params.ymag,\n                params.znear,\n                params.zfar\n            );\n        }\n\n        if (cameraDef.name) camera.name = cameraDef.name;\n\n        assignExtrasToUserData(camera, cameraDef);\n\n        return Promise.resolve(camera);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n        var skinDef = this.json.skins[skinIndex];\n\n        var skinEntry = { joints: skinDef.joints };\n\n        if (skinDef.inverseBindMatrices === undefined) {\n            return Promise.resolve(skinEntry);\n        }\n\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n            skinEntry.inverseBindMatrices = accessor;\n\n            return skinEntry;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n        var json = this.json;\n\n        var animationDef = json.animations[animationIndex];\n\n        var pendingNodes = [];\n        var pendingInputAccessors = [];\n        var pendingOutputAccessors = [];\n        var pendingSamplers = [];\n        var pendingTargets = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n            var target = channel.target;\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n            var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n            var output =\n                animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n            pendingNodes.push(this.getDependency('node', name));\n            pendingInputAccessors.push(this.getDependency('accessor', input));\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\n            pendingSamplers.push(sampler);\n            pendingTargets.push(target);\n        }\n\n        return Promise.all([\n            Promise.all(pendingNodes),\n            Promise.all(pendingInputAccessors),\n            Promise.all(pendingOutputAccessors),\n            Promise.all(pendingSamplers),\n            Promise.all(pendingTargets)\n        ]).then(function (dependencies) {\n            var nodes = dependencies[0];\n            var inputAccessors = dependencies[1];\n            var outputAccessors = dependencies[2];\n            var samplers = dependencies[3];\n            var targets = dependencies[4];\n\n            var tracks = [];\n\n            for (var i = 0, il = nodes.length; i < il; i++) {\n                var node = nodes[i];\n                var inputAccessor = inputAccessors[i];\n                var outputAccessor = outputAccessors[i];\n                var sampler = samplers[i];\n                var target = targets[i];\n\n                if (node === undefined) continue;\n\n                node.updateMatrix();\n                node.matrixAutoUpdate = true;\n\n                var TypedKeyframeTrack;\n\n                switch (PATH_PROPERTIES[target.path]) {\n                    case PATH_PROPERTIES.weights:\n                        TypedKeyframeTrack = NumberKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.rotation:\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.position:\n                    case PATH_PROPERTIES.scale:\n                    default:\n                        TypedKeyframeTrack = VectorKeyframeTrack;\n                        break;\n                }\n\n                var targetName = node.name ? node.name : node.uuid;\n\n                var interpolation =\n                    sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n                var targetNames = [];\n\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n                    node.traverse(function (object) {\n                        if (object.isMesh === true && object.morphTargetInfluences) {\n                            targetNames.push(object.name ? object.name : object.uuid);\n                        }\n                    });\n                } else {\n                    targetNames.push(targetName);\n                }\n\n                var outputArray = outputAccessor.array;\n\n                if (outputAccessor.normalized) {\n                    var scale;\n\n                    if (outputArray.constructor === Int8Array) {\n                        scale = 1 / 127;\n                    } else if (outputArray.constructor === Uint8Array) {\n                        scale = 1 / 255;\n                    } else if (outputArray.constructor == Int16Array) {\n                        scale = 1 / 32767;\n                    } else if (outputArray.constructor === Uint16Array) {\n                        scale = 1 / 65535;\n                    } else {\n                        throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n                    }\n\n                    var scaled = new Float32Array(outputArray.length);\n\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\n                        scaled[j] = outputArray[j] * scale;\n                    }\n\n                    outputArray = scaled;\n                }\n\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\n                    var track = new TypedKeyframeTrack(\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n                        inputAccessor.array,\n                        outputArray,\n                        interpolation\n                    );\n\n                    // Override interpolation with custom factory method.\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                            // must be divided by three to get the interpolant's sampleSize argument.\n\n                            return new GLTFCubicSplineInterpolant(\n                                this.times,\n                                this.values,\n                                this.getValueSize() / 3,\n                                result\n                            );\n                        };\n\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n                    }\n\n                    tracks.push(track);\n                }\n            }\n\n            var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n            return new AnimationClip(name, undefined, tracks);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var parser = this;\n\n        var meshReferences = json.meshReferences;\n        var meshUses = json.meshUses;\n\n        var nodeDef = json.nodes[nodeIndex];\n\n        return (function () {\n            var pending = [];\n\n            if (nodeDef.mesh !== undefined) {\n                pending.push(\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n                        var node;\n\n                        if (meshReferences[nodeDef.mesh] > 1) {\n                            var instanceNum = meshUses[nodeDef.mesh]++;\n\n                            node = mesh.clone();\n                            node.name += '_instance_' + instanceNum;\n                        } else {\n                            node = mesh;\n                        }\n\n                        // if weights are provided on the node, override weights on the mesh.\n                        if (nodeDef.weights !== undefined) {\n                            node.traverse(function (o) {\n                                if (!o.isMesh) return;\n\n                                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\n                                }\n                            });\n                        }\n\n                        return node;\n                    })\n                );\n            }\n\n            if (nodeDef.camera !== undefined) {\n                pending.push(parser.getDependency('camera', nodeDef.camera));\n            }\n\n            if (\n                nodeDef.extensions &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n            ) {\n                pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n            }\n\n            return Promise.all(pending);\n        })().then(function (objects) {\n            var node;\n\n            // .isBone isn't in glTF spec. See .markDefs\n            if (nodeDef.isBone === true) {\n                node = new Bone();\n            } else if (objects.length > 1) {\n                node = new Group();\n            } else if (objects.length === 1) {\n                node = objects[0];\n            } else {\n                node = new Object3D();\n            }\n\n            if (node !== objects[0]) {\n                for (var i = 0, il = objects.length; i < il; i++) {\n                    node.add(objects[i]);\n                }\n            }\n\n            if (nodeDef.name) {\n                node.userData.name = nodeDef.name;\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n            }\n\n            assignExtrasToUserData(node, nodeDef);\n\n            if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n            if (nodeDef.matrix !== undefined) {\n                var matrix = new Matrix4();\n                matrix.fromArray(nodeDef.matrix);\n                node.applyMatrix4(matrix);\n            } else {\n                if (nodeDef.translation !== undefined) {\n                    node.position.fromArray(nodeDef.translation);\n                }\n\n                if (nodeDef.rotation !== undefined) {\n                    node.quaternion.fromArray(nodeDef.rotation);\n                }\n\n                if (nodeDef.scale !== undefined) {\n                    node.scale.fromArray(nodeDef.scale);\n                }\n            }\n\n            return node;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n    GLTFParser.prototype.loadScene = (function () {\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\n            var nodeDef = json.nodes[nodeId];\n\n            return parser\n                .getDependency('node', nodeId)\n                .then(function (node) {\n                    if (nodeDef.skin === undefined) return node;\n\n                    // build skeleton here as well\n\n                    var skinEntry;\n\n                    return parser\n                        .getDependency('skin', nodeDef.skin)\n                        .then(function (skin) {\n                            skinEntry = skin;\n\n                            var pendingJoints = [];\n\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n                                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n                            }\n\n                            return Promise.all(pendingJoints);\n                        })\n                        .then(function (jointNodes) {\n                            node.traverse(function (mesh) {\n                                if (!mesh.isMesh) return;\n\n                                var bones = [];\n                                var boneInverses = [];\n\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                                    var jointNode = jointNodes[j];\n\n                                    if (jointNode) {\n                                        bones.push(jointNode);\n\n                                        var mat = new Matrix4();\n\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\n                                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                                        }\n\n                                        boneInverses.push(mat);\n                                    } else {\n                                        console.warn(\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                                            skinEntry.joints[j]\n                                        );\n                                    }\n                                }\n\n                                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n                            });\n\n                            return node;\n                        });\n                })\n                .then(function (node) {\n                    // build node hierachy\n\n                    parentObject.add(node);\n\n                    var pending = [];\n\n                    if (nodeDef.children) {\n                        var children = nodeDef.children;\n\n                        for (var i = 0, il = children.length; i < il; i++) {\n                            var child = children[i];\n                            pending.push(buildNodeHierachy(child, node, json, parser));\n                        }\n                    }\n\n                    return Promise.all(pending);\n                });\n        }\n\n        return function loadScene(sceneIndex) {\n            var json = this.json;\n            var extensions = this.extensions;\n            var sceneDef = this.json.scenes[sceneIndex];\n            var parser = this;\n\n            // Loader returns Group, not Scene.\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n            var scene = new Group();\n            if (sceneDef.name) scene.name = sceneDef.name;\n\n            assignExtrasToUserData(scene, sceneDef);\n\n            if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n            var nodeIds = sceneDef.nodes || [];\n\n            var pending = [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n            }\n\n            return Promise.all(pending).then(function () {\n                return scene;\n            });\n        };\n    })();\n\n    return GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const ALIAS = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32,\n    tab: 9,\n    escape: 27\n};\n\nexport default class Keyboard {\n    constructor(domElement) {\n        this.domElement = domElement || document;\n        this.keyCodes = {};\n\n        // bind keyEvents\n        this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // bind window blur\n        window.addEventListener('blur', () => this.onBlur, false);\n    }\n\n    destroy() {\n        this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // unbind window blur event\n        window.removeEventListener('blur', () => this.onBlur, false);\n    }\n\n    onBlur() {\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\n    }\n\n    onKeyChange(event) {\n        // log to debug\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n        // update this.keyCodes\n        const keyCode = event.keyCode;\n        this.keyCodes[keyCode] = event.type === 'keydown';\n    }\n\n    pressed(keyDesc) {\n        const keys = keyDesc.split('+');\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\n                pressed = this.keyCodes[ALIAS[key]];\n            } else {\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n\n    eventMatches(event, keyDesc) {\n        const aliases = ALIAS;\n        const aliasKeys = Object.keys(aliases);\n        const keys = keyDesc.split('+');\n        // log to debug\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (key === 'shift') {\n                pressed = event.shiftKey ? true : false;\n            } else if (key === 'ctrl') {\n                pressed = event.ctrlKey ? true : false;\n            } else if (key === 'alt') {\n                pressed = event.altKey ? true : false;\n            } else if (key === 'meta') {\n                pressed = event.metaKey ? true : false;\n            } else if (aliasKeys.indexOf(key) !== -1) {\n                pressed = event.keyCode === aliases[key];\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n                pressed = true;\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n}\n","import Keyboard from '../../utils/keyboard';\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// Manages all input interactions\nexport default class Interaction {\n    constructor(renderer, scene, camera, controls) {\n        // Properties\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = camera;\n        this.controls = controls;\n\n        this.timeout = null;\n\n        // Instantiate keyboard helper\n        this.keyboard = new Keyboard();\n\n        // Listeners\n        // Mouse events\n        this.renderer.domElement.addEventListener(\n            'mousemove',\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\n            false\n        );\n        this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\n        this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\n\n        // Keyboard events\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\n            // Only once\n            if (event.repeat) {\n                return;\n            }\n\n            if (this.keyboard.eventMatches(event, 'escape')) {\n                console.log('Escape pressed');\n            }\n        });\n    }\n\n    onMouseOver(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = true;\n    }\n\n    onMouseLeave(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = false;\n    }\n\n    onMouseMove(event) {\n        event.preventDefault();\n\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(function () {\n            Config.isMouseMoving = false;\n        }, 200);\n\n        Config.isMouseMoving = true;\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\n\nconst OBSTACLE_PREFIX = 'obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback != undefined) {\n            callback();\n        }\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs != undefined) {\n                //console.log(obs[1]);\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n\n        const mesh = new THREE.Mesh(geometry, material);\n\n        mesh.name = OBSTACLE_PREFIX + id;\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        this.scene.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position != undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            mesh.scale.set(scene_scale, scene_scale, scene_scale);\n            mesh.position.set(scene_scale * x, scene_scale * y, scene_scale * z);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation != undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = ((90 + x) / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            mesh.rotation.set(radX, radY, radZ);\n        }\n\n        // Enable shadows for the object\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        } else {\n            throw new TypeError('unsupported geometry type');\n        }\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        } else {\n            // Default material type\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height != undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius != undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            } else {\n                return 0;\n            }\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = this.scene.getObjectByName(name);\n\n        if (obstacle != undefined) {\n            this.scene.remove(obstacle);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = this.scene.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else {\n            if (callback != null) callback('undefined');\n        }\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V', callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r == undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n                // Can create\n                // Limit the arena that robot can go\n                x = scene_scale * Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = scene_scale * Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    // Set less opacity for virtual robots\n                    const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                    const material = new THREE.MeshStandardMaterial({\n                        color: 0x666666,\n                        opacity: opacity,\n                        transparent: true\n                    });\n\n                    var r = new THREE.Mesh(geometry, material);\n                    r.receiveShadow = true;\n                    r.name = ROBOT_PREFIX + id;\n                    r.scale.set(scene_scale, scene_scale, scene_scale);\n                    r.position.set(x, y, 0);\n                    r.rotation.x = 90 * THREE.Math.DEG2RAD;\n                    r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n                    r.reality = reality; // set reality flag\n\n                    // Add robot to the scene\n                    window.scene.add(r);\n\n                    r.clickEvent = function (m) {\n                        window.robot.alert(m);\n                    };\n\n                    console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                    // Callback function\n                    if (callback != undefined) callback('success');\n                });\n            } else {\n                console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n            }\n        } else {\n            if (reality === REALITY || REALITY === 'M') {\n                // Reality matches\n                this.move(id, x, y, heading, () => {\n                    if (callback != undefined) callback('already defined, so moved');\n                });\n            } else {\n                // Robot reality not matching with environment reality\n                this.delete(id);\n            }\n        }\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n\n            if (r != undefined) {\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else {\n                if (callback != undefined) callback('not found');\n            }\n        } else {\n            if (callback != undefined) callback('id not specified');\n        }\n    }\n\n    deleteAll() {\n        // Delete all robots\n        const objects = this.scene.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                console.log('Deleted>', name);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n\n    exists(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            const currentHeading = r.rotation.y;\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\n\n            // TODO: need a smoother way than this rough trick\n            // If current and target rotations in different signs\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n            // Limit the arena that robot can go\n            x = scene_scale * Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n            y = scene_scale * Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        } else {\n            if (callback != null) callback('undefined');\n        }\n    }\n\n    get_coordinates(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        } else {\n            return null;\n        }\n    }\n\n    update() {\n        TWEEN.update();\n    }\n\n    alert(mesh) {\n        // Display an alert on window\n        let disp = document.querySelector('#msg-box');\n        disp.innerHTML = `${mesh.name} [${mesh.reality}]`;\n        disp.style.display = 'block';\n\n        setTimeout(function () {\n            document.querySelector('#msg-box').style.display = 'none';\n        }, 1000);\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\nimport MQTT from 'paho-mqtt';\n\nimport Config from '../../data/config';\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\n// Robot Color - NeoPixel\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene) {\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n\n        // create a random client Id\n        const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n        this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n        window.mqtt = this.client;\n\n        this.client.connect({\n            userName: Config.mqtt.user,\n            password: Config.mqtt.password,\n            reconnect: true,\n            useSSL: true,\n            cleanSession: false,\n            onSuccess: () => {\n                console.log('MQTT: connected');\n\n                // Subscribe to topics\n                this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                this.subscribe(TOPIC_ROBOT_CREATE);\n                this.subscribe(TOPIC_ROBOT_DELETE);\n                this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                this.subscribe(TOPIC_CHANGE_COLOR);\n                this.subscribe(TOPIC_OBSTACLES_LIST);\n                this.subscribe(TOPIC_OBSTACLES_DELETE);\n                this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n\n                // Request for obstacle data\n                this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n\n                // Request for coordinate data\n                this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                // Access globally\n                window.robot = this.robot;\n                window.obstacles = this.obstacles;\n\n                this.client.onMessageArrived = this.onMessageArrived;\n                this.client.onConnectionLost = this.onConnectionLost;\n            },\n            onFailure: () => {\n                console.log('MQTT: connection failed');\n            }\n        });\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            window.channel = channelHash.substring(1);\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        // console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n            try {\n                const { data, reality } = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined && (reality == REALITY || REALITY == 'M')) {\n                    // Have data on this reality\n                    Object.entries(data).forEach((entry) => {\n                        const r = entry[1];\n\n                        if (window.robot.exists(r.id) == undefined) {\n                            window.robot.create(r.id, r.x, r.y, r.heading, reality);\n                        } else {\n                            window.robot.move(r.id, r.x, r.y, r.heading);\n                        }\n                    });\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n\n            window.obstacles.deleteIfExists(data.id);\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                let disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                let disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n        }\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Helpers\nimport Stats from './helpers/stats';\nimport MeshHelper from './helpers/meshHelper';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Config data\nimport Config from './../data/config';\n\n// STLLoader\nvar STLLoader = require('three-stl-loader')(THREE);\n\n// Camera\nvar camera;\n\n// For click event on robots\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n//---------------------------------------\n\n// -------------------------------------\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        // Set container property to container element\n        this.container = container;\n\n        // Start Three clock\n        this.clock = new THREE.Clock();\n\n        // Main scene creation\n        this.scene = new THREE.Scene();\n        window.scene = this.scene; // config as a global variable\n        window.scene_scale = Config.scale;\n\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        this.mqtt = new MQTTClient(this.scene);\n\n        // Get Device Pixel Ratio first for retina\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Main renderer constructor\n        this.renderer = new Renderer(this.scene, container);\n\n        // Components instantiations\n        camera = new Camera(this.renderer.threeRenderer);\n\n        this.controls = new Controls(camera.threeCamera, container);\n        this.light = new Light(this.scene);\n\n        // Create and place lights in scene\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        // Set up rStats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats(this.renderer);\n            this.stats.setUp();\n        }\n\n        // Set up gui\n        //if (Config.isDev) {\n        //this.gui = new DatGUI(this)\n        //}\n\n        // Instantiate texture class\n        this.texture = new Texture();\n\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\n        this.texture.load().then(() => {\n            this.manager = new THREE.LoadingManager();\n\n            // Create the environment ---------------------------------------------\n            this.environment = new Environment();\n\n            // onProgress callback\n            this.manager.onProgress = (item, loaded, total) => {\n                console.log(`${item}: ${loaded} ${total}`);\n            };\n\n            // All loaders done now\n            this.manager.onLoad = () => {\n                alert('Loaded');\n\n                // Set up interaction manager with the app now that the model is finished loading\n                new Interaction(\n                    this.renderer.threeRenderer,\n                    this.scene,\n                    camera.threeCamera,\n                    this.controls.threeControls\n                );\n\n                // Add dat.GUI controls if dev\n                if (Config.isDev) {\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                    //this.gui.load(this, this.model.obj);\n                }\n\n                // Everything is now fully loaded\n                Config.isLoaded = true;\n                this.container.querySelector('#loading').style.display = 'none';\n            };\n        });\n\n        // Start render which does not wait for model fully loaded\n\n        this.render();\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Add eventlistner for catch mouse click events\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n    }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children);\n        if (intersects.length > 0) {\n            const obj = intersects[0].object;\n\n            if (obj.clickEvent != undefined) {\n                obj.clickEvent(obj);\n            }\n        }\n    }\n\n    render() {\n        // Render rStats if Dev\n        if (Config.isDev && Config.isShowingStats) {\n            Stats.start();\n        }\n\n        // Call render function and pass in created scene and camera\n        this.renderer.render(this.scene, camera.threeCamera);\n\n        // rStats has finished determining render call now\n        if (Config.isDev && Config.isShowingStats) {\n            Stats.end();\n        }\n\n        // Delta time is sometimes needed for certain updates\n        //const delta = this.clock.getDelta();\n\n        // Call any vendor or module frame updates here\n        TWEEN.update();\n        this.controls.threeControls.update();\n\n        // RAF\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}