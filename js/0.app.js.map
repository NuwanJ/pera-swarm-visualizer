{"version":3,"sources":["webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/label.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/components/environment.js","webpack:///./src/js/app/helpers/vertexNormalsHelper.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/loaders/GLTFLoader.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/components/obstacle.js","webpack:///./src/js/app/components/robot.js","webpack:///./src/js/app/helpers/urlHelper.js","webpack:///./src/js/app/managers/mqttClient.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["resolvedConfig","config","scale","arena","size","minX","maxX","minY","maxY","mqtt","server","port","path","user","password","channel","mixedReality","obstacles","robots","selectedReality","selectedRealities","physical","virtual","isDev","isShowingStats","isShowingLables","labelsVisibility","isShowingRobotSnapshots","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","fov","far","aspect","posX","posY","posZ","controls","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","Infinity","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","target","x","y","z","ambientLight","enabled","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","top","right","bottom","left","pointLight","distance","hemiLight","groundColor","storedConfig","localStorage","getItem","document","location","href","JSON","parse","saveConfig","data","setItem","stringify","canvas","window","CanvasRenderingContext2D","webgl","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Renderer","scene","container","threeRenderer","THREE","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","shadowMap","type","Config","capabilities","getMaxAnisotropy","updateSize","addEventListener","setSize","offsetWidth","offsetHeight","render","addLabel","prefix","object","visibility","className","textContent","marginTop","elementLabel","CSS2DObject","position","set","visible","add","removeLabel","remove","Camera","renderer","height","threeCamera","up","updateProjectionMatrix","Light","init","castShadow","mapSize","directionalLightHelper","lightName","Controls","threeControls","OrbitControls","enableRotate","Environment","console","log","scene_scale","geometry","depthWrite","userData","originalColor","ground","receiveShadow","grid","rotation","opacity","transparent","_v1","Vector3","_v2","_normalMatrix","Matrix3","_keys","VertexNormalsHelper","hex","nNormals","objGeometry","isGeometry","faces","length","isBufferGeometry","attributes","normal","count","BufferGeometry","positions","Float32BufferAttribute","setAttribute","LineSegments","call","LineBasicMaterial","toneMapped","matrixAutoUpdate","update","prototype","Object","create","constructor","idx","updateMatrixWorld","getNormalMatrix","matrixWorld","vertices","i","l","face","j","jl","vertexNormals","vertex","copy","applyMatrix4","applyMatrix3","normalize","multiplyScalar","setXYZ","objPos","objNorm","getX","getY","getZ","needsUpdate","MeshHelper","wireLine","depthTest","edges","edgesLine","vertexHelper","boxHelper","Helpers","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","round","error","value","replace","setHex","shading","vertexColors","side","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","keys","reason","GLTFLoader","manager","Loader","dracoLoader","ddsLoader","GLTFRegistry","objects","get","removeAll","assign","url","onLoad","onProgress","onError","resourcePath","LoaderUtils","extractUrlBase","itemStart","_onError","itemError","itemEnd","FileLoader","setResponseType","crossOrigin","setWithCredentials","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","PointLight","SpotLight","spot","innerConeAngle","outerConeAngle","angle","penumbra","decay","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","Vector2","BINARY_EXTENSION_CHUNK_TYPES","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","transform","clone","offset","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","indices","setIndex","box","Box3","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textureExtensions","sourceURI","images","isObjectURL","blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","flatShading","morphTargets","uv2","uv","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","children","child","sceneIndex","sceneDef","nodeIds","ALIAS","down","space","tab","escape","Keyboard","keyCodes","event","onKeyChange","onBlur","removeEventListener","prop","keyCode","keyDesc","split","pressed","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","throttle","onMouseMove","onMouseLeave","onMouseOver","eventMatches","preventDefault","DatGUI","main","gui","dat","GUI","useLocalStorage","model","meshHelper","onChange","labelsFolder","addFolder","toggleLabels","realityFolder","listen","toggleReality","open","variable","startsWith","reality","selected","entries","obj","show","destroy","Obstacle","callback","obs","obstacle","createGeometry","labelVisibility","originalEmmisive","getHex","random","deleteIfExists","calculateZ","radX","radY","radZ","g","TypeError","createBoxGeometry","depth","createCylinderGeometry","radiusTop","radiusBottom","createSphereGeometry","heightSegments","radialSegments","widthSegments","m","properties","getObjectByName","STLLoader","require","Robot","R","G","B","ambient","r","setRGB","heading","REALITY","robotId","DEG2RAD","clickEvent","robot","alert","setReality","move","currentHeading","newHeading","rotationFlag","sqrt","pow","Tween","to","onUpdate","onComplete","delay","start","publish","nodeContent","disp","querySelector","prevContent","getElementById","createTextNode","requestSnapshot","replaceChild","display","getUrlParam","parameter","defaultvalue","vars","urlparameter","MQTTClient","updateChannel","credentials","storedCredentials","username","getCredentials","client_id","toString","substring","client","MQTT","Client","connect","userName","reconnect","useSSL","cleanSession","onSuccess","subscribe","onMessageArrived","onConnectionLost","onFailure","channelHash","hash","responseObject","errorCode","errorMessage","packet","msg","payloadString","trim","destinationName","topic","exists","createList","deleteAll","changeColor","reload","snapshot","subElement","titleElement","hasOwnProperty","subTopic","message","payload","Message","pubTopic","send","INTERSECTED","selectedLabel","raycaster","mouse","Main","clock","place","stats","Stats","dom","labelRenderer","CSS2DRenderer","innerWidth","innerHeight","isShowingObstacleLables","isShowingRobotLables","environment","item","enable","onDocumentMouseDown","clientX","clientY","setFromCamera","intersects","intersectObjects","currentOpacity","currentHex","currentColor","hidden","requestAnimationFrame","Detector"],"mappings":"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","file":"0.app.js","sourcesContent":["import TWEEN from '@tweenjs/tween.js';\n\nlet resolvedConfig;\n\n// This object contains the state of the app\nconst config = {\n    scale: 1,\n    arena: {\n        size: 300,\n        minX: -140,\n        maxX: 140,\n        minY: -140,\n        maxY: 140\n    },\n    mqtt: {\n        server: 'swarm-gui.tk',\n        port: 8883,\n        path: '/socket.io',\n        user: 'swarm_user',\n        password: 'swarm_usere15',\n        channel: 'v1'\n    },\n    mixedReality: {\n        obstacles: 'M',\n        robots: 'M'\n    },\n    selectedReality: 'M',\n    selectedRealities: {\n        physical: true,\n        virtual: true\n    },\n    isDev: true,\n    isShowingStats: true,\n    isShowingLables: true,\n    labelsVisibility: {\n        obstacles: false,\n        robots: false\n    },\n    isShowingRobotSnapshots: true,\n    isLoaded: false,\n    isTweening: false,\n    isRotating: false,\n    isMouseMoving: false,\n    isMouseOver: false,\n    maxAnisotropy: 1,\n    dpr: 1,\n    easing: TWEEN.Easing.Quadratic.InOut,\n    duration: 500,\n    texture: {\n        path: './assets/textures/',\n        imageFiles: [{ name: 'UV', image: 'UV_Grid_Sm.jpg' }]\n    },\n    mesh: {\n        enableHelper: false,\n        wireframe: false,\n        translucent: false,\n        material: {\n            color: 0xffffff,\n            emissive: 0xffffff\n        }\n    },\n    fog: {\n        color: 0xffffff,\n        near: 0.0008\n    },\n    camera: {\n        fov: 50,\n        near: 50,\n        far: 1000,\n        aspect: 1,\n        posX: 0,\n        posY: 0,\n        posZ: 0\n    },\n    controls: {\n        autoRotate: false,\n        autoRotateSpeed: -0.5,\n        rotateSpeed: 0.5,\n        zoomSpeed: 0.8,\n        minDistance: 200,\n        maxDistance: 800,\n        minPolarAngle: 0 /*Math.PI / 6,*/,\n        maxPolarAngle: (7 / 16) * Math.PI,\n        minAzimuthAngle: -Infinity,\n        maxAzimuthAngle: Infinity,\n        enableDamping: true,\n        dampingFactor: 0.5,\n        enableZoom: true,\n        target: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    },\n    ambientLight: {\n        enabled: true,\n        color: 0x141414\n    },\n    directionalLight: {\n        enabled: true,\n        color: 0xf0f0f0,\n        intensity: 0.4,\n        x: -75,\n        y: 280,\n        z: 150\n    },\n    shadow: {\n        enabled: true,\n        helperEnabled: false,\n        bias: 0,\n        mapWidth: 2048,\n        mapHeight: 2048,\n        near: 250,\n        far: 400,\n        top: 100,\n        right: 100,\n        bottom: -100,\n        left: -100\n    },\n    pointLight: {\n        enabled: true,\n        color: 0xffffff,\n        intensity: 0.34,\n        distance: 115,\n        x: 0,\n        y: 0,\n        z: 0\n    },\n    hemiLight: {\n        enabled: true,\n        color: 0xc8c8c8,\n        groundColor: 0xffffff,\n        intensity: 0.55,\n        x: 0,\n        y: 0,\n        z: 0\n    }\n};\n\n// Check localstorage for updated config, if not use above config\nconst storedConfig = localStorage.getItem(document.location.href + '.config');\nresolvedConfig = storedConfig !== null && storedConfig !== undefined ? JSON.parse(storedConfig) : config;\n\n// method to presist config data with localStorage\nexport const saveConfig = (data) => {\n    localStorage.setItem(document.location.href + '.config', JSON.stringify({ ...config, ...data }));\n};\n\nexport default resolvedConfig;\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n    canvas: !!window.CanvasRenderingContext2D,\n    webgl: (function () {\n        try {\n            var canvas = document.createElement('canvas');\n\n            return !!(\n                window.WebGLRenderingContext &&\n                (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n            );\n        } catch (e) {\n            return false;\n        }\n    })(),\n\n    workers: !!window.Worker,\n    fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n    getWebGLErrorMessage: function () {\n        var element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if (!this.webgl) {\n            element.innerHTML = window.WebGLRenderingContext\n                ? [\n                      'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n')\n                : [\n                      'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n                      'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n                  ].join('\\n');\n        }\n\n        return element;\n    },\n\n    addGetWebGLMessage: function (parameters) {\n        var parent, id, element;\n\n        parameters = parameters || {};\n\n        parent = parameters.parent !== undefined ? parameters.parent : document.body;\n        id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n        element = this.getWebGLErrorMessage();\n        element.id = id;\n\n        parent.appendChild(element);\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Main webGL renderer class\nexport default class Renderer {\n    constructor(scene, container) {\n        // Properties\n        this.scene = scene;\n        this.container = container;\n\n        // Create WebGL renderer and set its antialias\n        this.threeRenderer = new THREE.WebGLRenderer({ antialias: true });\n\n        // Set clear color to fog to enable fog or to hex color for no fog\n        this.threeRenderer.setClearColor(scene.fog.color);\n        this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\n\n        // Appends canvas\n        container.appendChild(this.threeRenderer.domElement);\n\n        // Shadow map options\n        this.threeRenderer.shadowMap.enabled = true;\n        this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n        // Get anisotropy for textures\n        Config.maxAnisotropy = this.threeRenderer.capabilities.getMaxAnisotropy();\n\n        // Initial size update set to canvas container\n        this.updateSize();\n\n        // Listeners\n        document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\n        window.addEventListener('resize', () => this.updateSize(), false);\n    }\n\n    updateSize() {\n        this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\n    }\n\n    render(scene, camera) {\n        // Renders scene to canvas target\n        this.threeRenderer.render(scene, camera);\n    }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport Config from '../../data/config';\n\nexport default function () {\n    const renderer = new CSS2DRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.domElement.style.position = 'absolute';\n    renderer.domElement.style.top = '0px';\n    renderer.isShowingLables = Config.isShowingLables;\n    renderer.isShowingObstacleLables = Config.labelsVisibility.obstacles;\n    renderer.isShowingRobotLables = Config.labelsVisibility.robots;\n    renderer.updateSize = function () {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    document.addEventListener('DOMContentLoaded', () => renderer.updateSize(), false);\n    window.addEventListener('resize', () => renderer.updateSize(), false);\n    return renderer;\n}\n\nexport const addLabel = (prefix, object, mesh, visibility) => {\n    if (mesh !== undefined) {\n        const element = document.createElement('div');\n        element.className = 'label';\n        element.textContent = `${prefix}[${object.id}]`;\n        element.style.marginTop = '-1.2em';\n        const elementLabel = new CSS2DObject(element);\n        elementLabel.name = `Label[${object.id}]`;\n        elementLabel.position.set(0, 1, 0);\n        elementLabel.visible = visibility;\n        mesh.add(elementLabel);\n        mesh.removeLabel = () => {\n            mesh.remove(elementLabel);\n        };\n    }\n};\n\nexport const removeLabel = (mesh) => {\n    if (mesh !== undefined && mesh.removeLabel !== undefined) {\n        mesh.removeLabel();\n    }\n};\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Class that creates and updates the main camera\nexport default class Camera {\n    constructor(renderer) {\n        const width = renderer.domElement.width;\n        const height = renderer.domElement.height;\n\n        // Create and position a Perspective Camera\n        this.threeCamera = new THREE.PerspectiveCamera(\n            Config.camera.fov,\n            width / height,\n            Config.camera.near,\n            Config.camera.far\n        );\n        this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\n        this.threeCamera.up.set(0, 0, 1);\n\n        // Initial sizing\n        this.updateSize(renderer);\n\n        // Listeners\n        window.addEventListener('resize', () => this.updateSize(renderer), false);\n    }\n\n    updateSize(renderer) {\n        // Update camera aspect ratio with window aspect ratio\n        this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\n\n        // Always call updateProjectionMatrix on camera change\n        this.threeCamera.updateProjectionMatrix();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\n// Sets up and places all lights in scene\nexport default class Light {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.init();\n    }\n\n    init() {\n        // Ambient\n        this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\n        this.ambientLight.visible = Config.ambientLight.enabled;\n\n        // Point light\n        this.pointLight = new THREE.PointLight(\n            Config.pointLight.color,\n            Config.pointLight.intensity,\n            Config.pointLight.distance\n        );\n        this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\n        this.pointLight.visible = Config.pointLight.enabled;\n\n        // Directional light\n        this.directionalLight = new THREE.DirectionalLight(\n            Config.directionalLight.color,\n            Config.directionalLight.intensity\n        );\n        this.directionalLight.position.set(\n            Config.directionalLight.x,\n            Config.directionalLight.y,\n            Config.directionalLight.z\n        );\n        this.directionalLight.visible = Config.directionalLight.enabled;\n\n        // Shadow map\n        this.directionalLight.castShadow = Config.shadow.enabled;\n        this.directionalLight.shadow.bias = Config.shadow.bias;\n        this.directionalLight.shadow.camera.near = Config.shadow.near;\n        this.directionalLight.shadow.camera.far = Config.shadow.far;\n        this.directionalLight.shadow.camera.left = Config.shadow.left;\n        this.directionalLight.shadow.camera.right = Config.shadow.right;\n        this.directionalLight.shadow.camera.top = Config.shadow.top;\n        this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\n        this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\n        this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\n\n        // Shadow camera helper\n        this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\n        this.directionalLightHelper.visible = Config.shadow.helperEnabled;\n\n        // Hemisphere light\n        this.hemiLight = new THREE.HemisphereLight(\n            Config.hemiLight.color,\n            Config.hemiLight.groundColor,\n            Config.hemiLight.intensity\n        );\n        this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\n        this.hemiLight.visible = Config.hemiLight.enabled;\n    }\n\n    place(lightName) {\n        switch (lightName) {\n            case 'ambient':\n                this.scene.add(this.ambientLight);\n                break;\n\n            case 'directional':\n                this.scene.add(this.directionalLight);\n                this.scene.add(this.directionalLightHelper);\n                break;\n\n            case 'point':\n                this.scene.add(this.pointLight);\n                break;\n\n            case 'hemi':\n                this.scene.add(this.hemiLight);\n                break;\n        }\n    }\n}\n","import * as THREE from 'three';\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Config from '../../data/config';\n\n// Controls based on orbit controls\nexport default class Controls {\n    constructor(camera, container) {\n        this.threeControls = new OrbitControls(camera, container);\n\n        this.init();\n    }\n\n    init() {\n        this.threeControls.target.set(Config.controls.target.x, Config.controls.target.y, Config.controls.target.z);\n        this.threeControls.autoRotate = Config.controls.autoRotate;\n        this.threeControls.autoRotateSpeed = Config.controls.autoRotateSpeed;\n        this.threeControls.rotateSpeed = Config.controls.rotateSpeed;\n        this.threeControls.zoomSpeed = Config.controls.zoomSpeed;\n        this.threeControls.minDistance = Config.controls.minDistance;\n        this.threeControls.maxDistance = Config.controls.maxDistance;\n        this.threeControls.minPolarAngle = Config.controls.minPolarAngle;\n        this.threeControls.maxPolarAngle = Config.controls.maxPolarAngle;\n        this.threeControls.enableDamping = Config.controls.enableDamping;\n        this.threeControls.enableZoom = Config.controls.enableZoom;\n        this.threeControls.dampingFactor = Config.controls.dampingFactor;\n\n        this.threeControls.enableRotate = true;\n        this.threeControls.minAzimuthAngle = Config.controls.minAzimuthAngle;\n        this.threeControls.maxAzimuthAngle = Config.controls.maxAzimuthAngle;\n\n        /*this.threeControls.mouseButtons = {\n            LEFT: THREE.MOUSE.ROTATE,\n            MIDDLE: THREE.MOUSE.DOLLY,\n            RIGHT: THREE.MOUSE.PAN\n        }*/\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\n\nexport default class Environment {\n    constructor() {\n        console.log(`Environment: Scale: ${scene_scale}`);\n\n        var geometry = new THREE.PlaneBufferGeometry(Config.arena.size, Config.arena.size);\n        var material = new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        });\n        material.userData.originalColor = new THREE.Color(0x999999);\n\n        // Ground\n        var ground = new THREE.Mesh(geometry, material);\n        ground.scale.set(scene_scale, scene_scale, scene_scale);\n        ground.position.set(0, 0, 0);\n        ground.receiveShadow = true;\n        scene.add(ground);\n\n        // Grid\n        var grid = new THREE.GridHelper(Config.arena.size, 30, 0x000000, 0x5b5b5b);\n        grid.rotation.x = -Math.PI / 2;\n        grid.scale.set(scene_scale, scene_scale, scene_scale);\n        grid.position.set(0, 0, 0);\n        grid.material.opacity = 0.35;\n        grid.material.transparent = true;\n        scene.add(grid);\n    }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nimport { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _normalMatrix = new Matrix3();\nconst _keys = ['a', 'b', 'c'];\n\nfunction VertexNormalsHelper(object, size, hex) {\n    this.object = object;\n    this.size = size !== undefined ? size : 0.1;\n\n    const color = hex !== undefined ? hex : 0xff0000;\n\n    //\n\n    let nNormals = 0;\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        nNormals = objGeometry.attributes.normal.count;\n    }\n\n    //\n\n    const geometry = new BufferGeometry();\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n\n    geometry.setAttribute('position', positions);\n\n    LineSegments.call(this, geometry, new LineBasicMaterial({ color: color, toneMapped: false }));\n\n    this.type = 'VertexNormalsHelper';\n\n    //\n\n    this.matrixAutoUpdate = false;\n\n    this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n    let idx;\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n\n    const matrixWorld = this.object.matrixWorld;\n    const position = this.geometry.attributes.position;\n\n    //\n\n    const objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n        const vertices = objGeometry.vertices;\n\n        const faces = objGeometry.faces;\n\n        idx = 0;\n\n        for (let i = 0, l = faces.length; i < l; i++) {\n            const face = faces[i];\n\n            for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n                const vertex = vertices[face[_keys[j]]];\n                const normal = face.vertexNormals[j];\n\n                _v1.copy(vertex).applyMatrix4(matrixWorld);\n                _v2.copy(normal).applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n                position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n                idx = idx + 1;\n\n                position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n                idx = idx + 1;\n            }\n        }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n        const objPos = objGeometry.attributes.position;\n        const objNorm = objGeometry.attributes.normal;\n\n        idx = 0;\n\n        // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n            _v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n            _v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n            _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n\n            position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n\n            idx = idx + 1;\n\n            position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n\n            idx = idx + 1;\n        }\n    }\n\n    position.needsUpdate = true;\n};\n\nexport { VertexNormalsHelper };\n","import * as THREE from 'three';\nimport { VertexNormalsHelper } from './vertexNormalsHelper';\n\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\nexport default class MeshHelper {\n    constructor(scene, mesh) {\n        this.mesh = mesh;\n        this.scene = scene;\n\n        const wireframe = new THREE.WireframeGeometry(this.mesh.geometry);\n        this.wireLine = new THREE.LineSegments(wireframe);\n        this.wireLine.material.depthTest = false;\n        this.wireLine.material.opacity = 0.25;\n        this.wireLine.material.transparent = true;\n\n        const edges = new THREE.EdgesGeometry(this.mesh.geometry);\n        this.edgesLine = new THREE.LineSegments(edges);\n        this.edgesLine.material.depthTest = false;\n        this.edgesLine.material.opacity = 0.25;\n        this.edgesLine.material.transparent = true;\n\n        this.vertexHelper = new VertexNormalsHelper(this.mesh, 2);\n        this.boxHelper = new THREE.BoxHelper(this.mesh);\n    }\n\n    enable() {\n        this.mesh.add(this.wireLine);\n        this.mesh.add(this.edgesLine);\n\n        this.scene.add(this.vertexHelper);\n        this.scene.add(this.boxHelper);\n    }\n\n    disable() {\n        this.mesh.remove(this.wireLine);\n        this.mesh.remove(this.edgesLine);\n\n        this.scene.remove(this.vertexHelper);\n        this.scene.remove(this.boxHelper);\n    }\n}\n","// Provides simple static functions that are used multiple times in the app\nexport default class Helpers {\n    static throttle(fn, threshhold, scope) {\n        threshhold || (threshhold = 250);\n        let last, deferTimer;\n\n        return function () {\n            const context = scope || this;\n\n            const now = +new Date(),\n                args = arguments;\n\n            if (last && now < last + threshhold) {\n                clearTimeout(deferTimer);\n                deferTimer = setTimeout(function () {\n                    last = now;\n                    fn.apply(context, args);\n                }, threshhold);\n            } else {\n                last = now;\n                fn.apply(context, args);\n            }\n        };\n    }\n\n    static logProgress() {\n        return function (xhr) {\n            if (xhr.lengthComputable) {\n                const percentComplete = (xhr.loaded / xhr.total) * 100;\n\n                console.log(Math.round(percentComplete, 2) + '% downloaded');\n            }\n        };\n    }\n\n    static logError() {\n        return function (xhr) {\n            console.error(xhr);\n        };\n    }\n\n    static handleColorChange(color) {\n        return (value) => {\n            if (typeof value === 'string') {\n                value = value.replace('#', '0x');\n            }\n\n            color.setHex(value);\n        };\n    }\n\n    static update(mesh) {\n        this.needsUpdate(mesh.material, mesh.geometry);\n    }\n\n    static needsUpdate(material, geometry) {\n        return function () {\n            material.shading = +material.shading; //Ensure number\n            material.vertexColors = +material.vertexColors; //Ensure number\n            material.side = +material.side; //Ensure number\n            material.needsUpdate = true;\n            geometry.verticesNeedUpdate = true;\n            geometry.normalsNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n        };\n    }\n\n    static updateTexture(material, materialKey, textures) {\n        return function (key) {\n            material[materialKey] = textures[key];\n            material.needsUpdate = true;\n        };\n    }\n}\n","import * as THREE from 'three';\n// Promise polyfill for IE\nimport { Promise } from 'es6-promise';\n\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\n// Using promises to preload textures prevents issues when applying textures to materials\n// before the textures have loaded.\nexport default class Texture {\n    constructor() {\n        // Prop that will contain all loaded textures\n        this.textures = {};\n    }\n\n    load() {\n        const loader = new THREE.TextureLoader();\n        const maxAnisotropy = Config.maxAnisotropy;\n        const imageFiles = Config.texture.imageFiles;\n        const promiseArray = [];\n\n        loader.setPath(Config.texture.path);\n\n        imageFiles.forEach((imageFile) => {\n            // Add an individual Promise for each image in array\n            promiseArray.push(\n                new Promise((resolve, reject) => {\n                    // Each Promise will attempt to load the image file\n                    loader.load(\n                        imageFile.image,\n                        // This gets called on load with the loaded texture\n                        (texture) => {\n                            texture.anisotropy = maxAnisotropy;\n\n                            // Resolve Promise with object of texture if it is instance of THREE.Texture\n                            const modelOBJ = {};\n                            modelOBJ[imageFile.name] = texture;\n                            if (modelOBJ[imageFile.name] instanceof THREE.Texture) resolve(modelOBJ);\n                        },\n                        Helpers.logProgress(),\n                        (xhr) => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\n                    );\n                })\n            );\n        });\n\n        // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\n        return Promise.all(promiseArray).then(\n            (textures) => {\n                // Set the textures prop object to have name be the resolved texture\n                for (let i = 0; i < textures.length; i++) {\n                    this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\n                }\n            },\n            (reason) => console.log(reason)\n        );\n    }\n}\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    AnimationClip,\n    Bone,\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    ClampToEdgeWrapping,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    FileLoader,\n    FrontSide,\n    Group,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Interpolant,\n    InterpolateDiscrete,\n    InterpolateLinear,\n    Line,\n    LineBasicMaterial,\n    LineLoop,\n    LineSegments,\n    LinearFilter,\n    LinearMipmapLinearFilter,\n    LinearMipmapNearestFilter,\n    Loader,\n    LoaderUtils,\n    Material,\n    MathUtils,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    MeshPhysicalMaterial,\n    MeshStandardMaterial,\n    MirroredRepeatWrapping,\n    NearestFilter,\n    NearestMipmapLinearFilter,\n    NearestMipmapNearestFilter,\n    NumberKeyframeTrack,\n    Object3D,\n    OrthographicCamera,\n    PerspectiveCamera,\n    PointLight,\n    Points,\n    PointsMaterial,\n    PropertyBinding,\n    QuaternionKeyframeTrack,\n    RGBAFormat,\n    RGBFormat,\n    RepeatWrapping,\n    Skeleton,\n    SkinnedMesh,\n    Sphere,\n    SpotLight,\n    TangentSpaceNormalMap,\n    TextureLoader,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    Vector2,\n    Vector3,\n    VectorKeyframeTrack,\n    sRGBEncoding\n} from 'three';\n\nconst GLTFLoader = (function () {\n    function GLTFLoader(manager) {\n        Loader.call(this, manager);\n\n        this.dracoLoader = null;\n        this.ddsLoader = null;\n    }\n\n    GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n        constructor: GLTFLoader,\n\n        load: function (url, onLoad, onProgress, onError) {\n            var scope = this;\n\n            var resourcePath;\n\n            if (this.resourcePath !== '') {\n                resourcePath = this.resourcePath;\n            } else if (this.path !== '') {\n                resourcePath = this.path;\n            } else {\n                resourcePath = LoaderUtils.extractUrlBase(url);\n            }\n\n            // Tells the LoadingManager to track an extra item, which resolves after\n            // the model is fully loaded. This means the count of items loaded will\n            // be incorrect, but ensures manager.onLoad() does not fire early.\n            scope.manager.itemStart(url);\n\n            var _onError = function (e) {\n                if (onError) {\n                    onError(e);\n                } else {\n                    console.error(e);\n                }\n\n                scope.manager.itemError(url);\n                scope.manager.itemEnd(url);\n            };\n\n            var loader = new FileLoader(scope.manager);\n\n            loader.setPath(this.path);\n            loader.setResponseType('arraybuffer');\n\n            if (scope.crossOrigin === 'use-credentials') {\n                loader.setWithCredentials(true);\n            }\n\n            loader.load(\n                url,\n                function (data) {\n                    try {\n                        scope.parse(\n                            data,\n                            resourcePath,\n                            function (gltf) {\n                                onLoad(gltf);\n\n                                scope.manager.itemEnd(url);\n                            },\n                            _onError\n                        );\n                    } catch (e) {\n                        _onError(e);\n                    }\n                },\n                onProgress,\n                _onError\n            );\n        },\n\n        setDRACOLoader: function (dracoLoader) {\n            this.dracoLoader = dracoLoader;\n            return this;\n        },\n\n        setDDSLoader: function (ddsLoader) {\n            this.ddsLoader = ddsLoader;\n            return this;\n        },\n\n        parse: function (data, path, onLoad, onError) {\n            var content;\n            var extensions = {};\n\n            if (typeof data === 'string') {\n                content = data;\n            } else {\n                var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n                if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n                    try {\n                        extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n                    } catch (error) {\n                        if (onError) onError(error);\n                        return;\n                    }\n\n                    content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n                } else {\n                    content = LoaderUtils.decodeText(new Uint8Array(data));\n                }\n            }\n\n            var json = JSON.parse(content);\n\n            if (json.asset === undefined || json.asset.version[0] < 2) {\n                if (onError)\n                    onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n                return;\n            }\n\n            if (json.extensionsUsed) {\n                for (var i = 0; i < json.extensionsUsed.length; ++i) {\n                    var extensionName = json.extensionsUsed[i];\n                    var extensionsRequired = json.extensionsRequired || [];\n\n                    switch (extensionName) {\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n                            extensions[extensionName] = new GLTFLightsExtension(json);\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n                            extensions[extensionName] = new GLTFMaterialsClearcoatExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\n                            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n                            extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n                            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n                            break;\n\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\n                            extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n                            break;\n\n                        case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n                            extensions[extensionName] = new GLTFTextureTransformExtension();\n                            break;\n\n                        case EXTENSIONS.KHR_MESH_QUANTIZATION:\n                            extensions[extensionName] = new GLTFMeshQuantizationExtension();\n                            break;\n\n                        default:\n                            if (extensionsRequired.indexOf(extensionName) >= 0) {\n                                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n                            }\n                    }\n                }\n            }\n\n            var parser = new GLTFParser(json, extensions, {\n                path: path || this.resourcePath || '',\n                crossOrigin: this.crossOrigin,\n                manager: this.manager\n            });\n\n            parser.parse(onLoad, onError);\n        }\n    });\n\n    /* GLTFREGISTRY */\n\n    function GLTFRegistry() {\n        var objects = {};\n\n        return {\n            get: function (key) {\n                return objects[key];\n            },\n\n            add: function (key, object) {\n                objects[key] = object;\n            },\n\n            remove: function (key) {\n                delete objects[key];\n            },\n\n            removeAll: function () {\n                objects = {};\n            }\n        };\n    }\n\n    /*********************************/\n    /********** EXTENSIONS ***********/\n    /*********************************/\n\n    var EXTENSIONS = {\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n        KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n        KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n        KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n    };\n\n    /**\n     * DDS Texture Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n     *\n     */\n    function GLTFTextureDDSExtension(ddsLoader) {\n        if (!ddsLoader) {\n            throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n        }\n\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n        this.ddsLoader = ddsLoader;\n    }\n\n    /**\n     * Punctual Lights Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n     */\n    function GLTFLightsExtension(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {};\n        this.lightDefs = extension.lights || [];\n    }\n\n    GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n        var lightDef = this.lightDefs[lightIndex];\n        var lightNode;\n\n        var color = new Color(0xffffff);\n        if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n\n        var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n        switch (lightDef.type) {\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                lightNode.distance = range;\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.distance = range;\n                // Handle spotlight properties.\n                lightDef.spot = lightDef.spot || {};\n                lightDef.spot.innerConeAngle =\n                    lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n                lightDef.spot.outerConeAngle =\n                    lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n                lightNode.angle = lightDef.spot.outerConeAngle;\n                lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n                lightNode.target.position.set(0, 0, -1);\n                lightNode.add(lightNode.target);\n                break;\n\n            default:\n                throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n        }\n\n        // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n        // here, because node-level parsing will only override position if explicitly specified.\n        lightNode.position.set(0, 0, 0);\n\n        lightNode.decay = 2;\n\n        if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n\n        lightNode.name = lightDef.name || 'light_' + lightIndex;\n\n        return Promise.resolve(lightNode);\n    };\n\n    /**\n     * Unlit Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n     */\n    function GLTFMaterialsUnlitExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n    }\n\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n        return MeshBasicMaterial;\n    };\n\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        if (metallicRoughness) {\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Clearcoat Materials Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n     */\n    function GLTFMaterialsClearcoatExtension() {\n        this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n    }\n\n    GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n        return MeshPhysicalMaterial;\n    };\n\n    GLTFMaterialsClearcoatExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n        var pending = [];\n\n        var extension = materialDef.extensions[this.name];\n\n        if (extension.clearcoatFactor !== undefined) {\n            materialParams.clearcoat = extension.clearcoatFactor;\n        }\n\n        if (extension.clearcoatTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n        }\n\n        if (extension.clearcoatRoughnessFactor !== undefined) {\n            materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n        }\n\n        if (extension.clearcoatRoughnessTexture !== undefined) {\n            pending.push(\n                parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture)\n            );\n        }\n\n        if (extension.clearcoatNormalTexture !== undefined) {\n            pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n            if (extension.clearcoatNormalTexture.scale !== undefined) {\n                var scale = extension.clearcoatNormalTexture.scale;\n\n                materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /* BINARY EXTENSION */\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n    function GLTFBinaryExtension(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n            throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n        } else if (this.header.version < 2.0) {\n            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n                this.content = LoaderUtils.decodeText(contentArray);\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n        }\n\n        if (this.content === null) {\n            throw new Error('THREE.GLTFLoader: JSON content not found.');\n        }\n    }\n\n    /**\n     * DRACO Mesh Compression Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n     */\n    function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n        if (!dracoLoader) {\n            throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n        }\n\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n        this.json = json;\n        this.dracoLoader = dracoLoader;\n        this.dracoLoader.preload();\n    }\n\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n        var json = this.json;\n        var dracoLoader = this.dracoLoader;\n        var bufferViewIndex = primitive.extensions[this.name].bufferView;\n        var gltfAttributeMap = primitive.extensions[this.name].attributes;\n        var threeAttributeMap = {};\n        var attributeNormalizedMap = {};\n        var attributeTypeMap = {};\n\n        for (var attributeName in gltfAttributeMap) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n        }\n\n        for (attributeName in primitive.attributes) {\n            var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n            if (gltfAttributeMap[attributeName] !== undefined) {\n                var accessorDef = json.accessors[primitive.attributes[attributeName]];\n                var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n                attributeTypeMap[threeAttributeName] = componentType;\n                attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n            }\n        }\n\n        return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n            return new Promise(function (resolve) {\n                dracoLoader.decodeDracoFile(\n                    bufferView,\n                    function (geometry) {\n                        for (var attributeName in geometry.attributes) {\n                            var attribute = geometry.attributes[attributeName];\n                            var normalized = attributeNormalizedMap[attributeName];\n\n                            if (normalized !== undefined) attribute.normalized = normalized;\n                        }\n\n                        resolve(geometry);\n                    },\n                    threeAttributeMap,\n                    attributeTypeMap\n                );\n            });\n        });\n    };\n\n    /**\n     * Texture Transform Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n     */\n    function GLTFTextureTransformExtension() {\n        this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n    }\n\n    GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n        texture = texture.clone();\n\n        if (transform.offset !== undefined) {\n            texture.offset.fromArray(transform.offset);\n        }\n\n        if (transform.rotation !== undefined) {\n            texture.rotation = transform.rotation;\n        }\n\n        if (transform.scale !== undefined) {\n            texture.repeat.fromArray(transform.scale);\n        }\n\n        if (transform.texCoord !== undefined) {\n            console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n        }\n\n        texture.needsUpdate = true;\n\n        return texture;\n    };\n\n    /**\n     * Specular-Glossiness Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n     */\n\n    /**\n     * A sub class of StandardMaterial with some of the functionality\n     * changed via the `onBeforeCompile` callback\n     * @pailhead\n     */\n\n    function GLTFMeshStandardSGMaterial(params) {\n        MeshStandardMaterial.call(this);\n\n        this.isGLTFSpecularGlossinessMaterial = true;\n\n        //various chunks that need replacing\n        var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join(\n            '\\n'\n        );\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n            'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n            'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n            'material.specularRoughness += geometryRoughness;',\n            'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n            'material.specularColor = specularFactor.rgb;'\n        ].join('\\n');\n\n        var uniforms = {\n            specular: { value: new Color().setHex(0xffffff) },\n            glossiness: { value: 1 },\n            specularMap: { value: null },\n            glossinessMap: { value: null }\n        };\n\n        this._extraUniforms = uniforms;\n\n        // please see #14031 or #13198 for an alternate approach\n        this.onBeforeCompile = function (shader) {\n            for (var uniformName in uniforms) {\n                shader.uniforms[uniformName] = uniforms[uniformName];\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n            shader.fragmentShader = shader.fragmentShader.replace(\n                'uniform float metalness;',\n                'uniform float glossiness;'\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_pars_fragment>',\n                specularMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_pars_fragment>',\n                glossinessMapParsFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <roughnessmap_fragment>',\n                specularMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <metalnessmap_fragment>',\n                glossinessMapFragmentChunk\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <lights_physical_fragment>',\n                lightPhysicalFragmentChunk\n            );\n        };\n\n        /*eslint-disable*/\n        Object.defineProperties(this, {\n            specular: {\n                get: function () {\n                    return uniforms.specular.value;\n                },\n                set: function (v) {\n                    uniforms.specular.value = v;\n                }\n            },\n            specularMap: {\n                get: function () {\n                    return uniforms.specularMap.value;\n                },\n                set: function (v) {\n                    uniforms.specularMap.value = v;\n                }\n            },\n            glossiness: {\n                get: function () {\n                    return uniforms.glossiness.value;\n                },\n                set: function (v) {\n                    uniforms.glossiness.value = v;\n                }\n            },\n            glossinessMap: {\n                get: function () {\n                    return uniforms.glossinessMap.value;\n                },\n                set: function (v) {\n                    uniforms.glossinessMap.value = v;\n                    //how about something like this - @pailhead\n                    if (v) {\n                        this.defines.USE_GLOSSINESSMAP = '';\n                        // set USE_ROUGHNESSMAP to enable vUv\n                        this.defines.USE_ROUGHNESSMAP = '';\n                    } else {\n                        delete this.defines.USE_ROUGHNESSMAP;\n                        delete this.defines.USE_GLOSSINESSMAP;\n                    }\n                }\n            }\n        });\n\n        /*eslint-enable*/\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n\n        this.setValues(params);\n    }\n\n    GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n    GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n    GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n        MeshStandardMaterial.prototype.copy.call(this, source);\n        this.specularMap = source.specularMap;\n        this.specular.copy(source.specular);\n        this.glossinessMap = source.glossinessMap;\n        this.glossiness = source.glossiness;\n        delete this.metalness;\n        delete this.roughness;\n        delete this.metalnessMap;\n        delete this.roughnessMap;\n        return this;\n    };\n\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\n        return {\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n            specularGlossinessParams: [\n                'color',\n                'map',\n                'lightMap',\n                'lightMapIntensity',\n                'aoMap',\n                'aoMapIntensity',\n                'emissive',\n                'emissiveIntensity',\n                'emissiveMap',\n                'bumpMap',\n                'bumpScale',\n                'normalMap',\n                'normalMapType',\n                'displacementMap',\n                'displacementScale',\n                'displacementBias',\n                'specularMap',\n                'specular',\n                'glossinessMap',\n                'glossiness',\n                'alphaMap',\n                'envMap',\n                'envMapIntensity',\n                'refractionRatio'\n            ],\n\n            getMaterialType: function () {\n                return GLTFMeshStandardSGMaterial;\n            },\n\n            extendParams: function (materialParams, materialDef, parser) {\n                var pbrSpecularGlossiness = materialDef.extensions[this.name];\n\n                materialParams.color = new Color(1.0, 1.0, 1.0);\n                materialParams.opacity = 1.0;\n\n                var pending = [];\n\n                if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n                    var array = pbrSpecularGlossiness.diffuseFactor;\n\n                    materialParams.color.fromArray(array);\n                    materialParams.opacity = array[3];\n                }\n\n                if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n                    pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n                }\n\n                materialParams.emissive = new Color(0.0, 0.0, 0.0);\n                materialParams.glossiness =\n                    pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n                materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n                if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n                    materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n                }\n\n                if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n                    var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n                    pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n                    pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n                }\n\n                return Promise.all(pending);\n            },\n\n            createMaterial: function (materialParams) {\n                var material = new GLTFMeshStandardSGMaterial(materialParams);\n                material.fog = true;\n\n                material.color = materialParams.color;\n\n                material.map = materialParams.map === undefined ? null : materialParams.map;\n\n                material.lightMap = null;\n                material.lightMapIntensity = 1.0;\n\n                material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n                material.aoMapIntensity = 1.0;\n\n                material.emissive = materialParams.emissive;\n                material.emissiveIntensity = 1.0;\n                material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n                material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n                material.bumpScale = 1;\n\n                material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n                material.normalMapType = TangentSpaceNormalMap;\n\n                if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n\n                material.displacementMap = null;\n                material.displacementScale = 1;\n                material.displacementBias = 0;\n\n                material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n                material.specular = materialParams.specular;\n\n                material.glossinessMap =\n                    materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n                material.glossiness = materialParams.glossiness;\n\n                material.alphaMap = null;\n\n                material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n                material.envMapIntensity = 1.0;\n\n                material.refractionRatio = 0.98;\n\n                return material;\n            }\n        };\n    }\n\n    /**\n     * Mesh Quantization Extension\n     *\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n     */\n    function GLTFMeshQuantizationExtension() {\n        this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n    }\n\n    /*********************************/\n    /********** INTERPOLATION ********/\n    /*********************************/\n\n    // Spline Interpolation\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n    function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n        Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    }\n\n    GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n        // Copies a sample value to the result buffer. See description of glTF\n        // CUBICSPLINE values layout in interpolate_() function below.\n\n        var result = this.resultBuffer,\n            values = this.sampleValues,\n            valueSize = this.valueSize,\n            offset = index * valueSize * 3 + valueSize;\n\n        for (var i = 0; i !== valueSize; i++) {\n            result[i] = values[offset + i];\n        }\n\n        return result;\n    };\n\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n        var result = this.resultBuffer;\n        var values = this.sampleValues;\n        var stride = this.valueSize;\n\n        var stride2 = stride * 2;\n        var stride3 = stride * 3;\n\n        var td = t1 - t0;\n\n        var p = (t - t0) / td;\n        var pp = p * p;\n        var ppp = pp * p;\n\n        var offset1 = i1 * stride3;\n        var offset0 = offset1 - stride3;\n\n        var s2 = -2 * ppp + 3 * pp;\n        var s3 = ppp - pp;\n        var s0 = 1 - s2;\n        var s1 = s3 - pp + p;\n\n        // Layout of keyframe output values for CUBICSPLINE animations:\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n        for (var i = 0; i !== stride; i++) {\n            var p0 = values[offset0 + i + stride]; // splineVertex_k\n            var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n            var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n            var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n            result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n        }\n\n        return result;\n    };\n\n    /*********************************/\n    /********** INTERNALS ************/\n    /*********************************/\n\n    /* CONSTANTS */\n\n    var WEBGL_CONSTANTS = {\n        FLOAT: 5126,\n        //FLOAT_MAT2: 35674,\n        FLOAT_MAT3: 35675,\n        FLOAT_MAT4: 35676,\n        FLOAT_VEC2: 35664,\n        FLOAT_VEC3: 35665,\n        FLOAT_VEC4: 35666,\n        LINEAR: 9729,\n        REPEAT: 10497,\n        SAMPLER_2D: 35678,\n        POINTS: 0,\n        LINES: 1,\n        LINE_LOOP: 2,\n        LINE_STRIP: 3,\n        TRIANGLES: 4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN: 6,\n        UNSIGNED_BYTE: 5121,\n        UNSIGNED_SHORT: 5123\n    };\n\n    var WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    var WEBGL_FILTERS = {\n        9728: NearestFilter,\n        9729: LinearFilter,\n        9984: NearestMipmapNearestFilter,\n        9985: LinearMipmapNearestFilter,\n        9986: NearestMipmapLinearFilter,\n        9987: LinearMipmapLinearFilter\n    };\n\n    var WEBGL_WRAPPINGS = {\n        33071: ClampToEdgeWrapping,\n        33648: MirroredRepeatWrapping,\n        10497: RepeatWrapping\n    };\n\n    var WEBGL_TYPE_SIZES = {\n        SCALAR: 1,\n        VEC2: 2,\n        VEC3: 3,\n        VEC4: 4,\n        MAT2: 4,\n        MAT3: 9,\n        MAT4: 16\n    };\n\n    var ATTRIBUTES = {\n        POSITION: 'position',\n        NORMAL: 'normal',\n        TANGENT: 'tangent',\n        TEXCOORD_0: 'uv',\n        TEXCOORD_1: 'uv2',\n        COLOR_0: 'color',\n        WEIGHTS_0: 'skinWeight',\n        JOINTS_0: 'skinIndex'\n    };\n\n    var PATH_PROPERTIES = {\n        scale: 'scale',\n        translation: 'position',\n        rotation: 'quaternion',\n        weights: 'morphTargetInfluences'\n    };\n\n    var INTERPOLATION = {\n        CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n        // keyframe track will be initialized with a default interpolation type, then modified.\n        LINEAR: InterpolateLinear,\n        STEP: InterpolateDiscrete\n    };\n\n    var ALPHA_MODES = {\n        OPAQUE: 'OPAQUE',\n        MASK: 'MASK',\n        BLEND: 'BLEND'\n    };\n\n    var MIME_TYPE_FORMATS = {\n        'image/png': RGBAFormat,\n        'image/jpeg': RGBFormat\n    };\n\n    /* UTILITY FUNCTIONS */\n\n    function resolveURL(url, path) {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '') return '';\n\n        // Host Relative URL\n        if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n            // eslint-disable-next-line no-useless-escape\n            path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) return url;\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) return url;\n\n        // Relative URL\n        return path + url;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n     */\n    function createDefaultMaterial(cache) {\n        if (cache['DefaultMaterial'] === undefined) {\n            cache['DefaultMaterial'] = new MeshStandardMaterial({\n                color: 0xffffff,\n                emissive: 0x000000,\n                metalness: 1,\n                roughness: 1,\n                transparent: false,\n                depthTest: true,\n                side: FrontSide\n            });\n        }\n\n        return cache['DefaultMaterial'];\n    }\n\n    function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n        // Add unknown glTF extensions to an object's userData.\n\n        for (var name in objectDef.extensions) {\n            if (knownExtensions[name] === undefined) {\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n                object.userData.gltfExtensions[name] = objectDef.extensions[name];\n            }\n        }\n    }\n\n    /**\n     * @param {Object3D|Material|BufferGeometry} object\n     * @param {GLTF.definition} gltfDef\n     */\n    function assignExtrasToUserData(object, gltfDef) {\n        if (gltfDef.extras !== undefined) {\n            if (typeof gltfDef.extras === 'object') {\n                Object.assign(object.userData, gltfDef.extras);\n            } else {\n                console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n            }\n        }\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n     *\n     * @param {BufferGeometry} geometry\n     * @param {Array<GLTF.Target>} targets\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addMorphTargets(geometry, targets, parser) {\n        var hasMorphPosition = false;\n        var hasMorphNormal = false;\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (target.POSITION !== undefined) hasMorphPosition = true;\n            if (target.NORMAL !== undefined) hasMorphNormal = true;\n\n            if (hasMorphPosition && hasMorphNormal) break;\n        }\n\n        if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n\n        var pendingPositionAccessors = [];\n        var pendingNormalAccessors = [];\n\n        for (var i = 0, il = targets.length; i < il; i++) {\n            var target = targets[i];\n\n            if (hasMorphPosition) {\n                var pendingAccessor =\n                    target.POSITION !== undefined\n                        ? parser.getDependency('accessor', target.POSITION)\n                        : geometry.attributes.position;\n\n                pendingPositionAccessors.push(pendingAccessor);\n            }\n\n            if (hasMorphNormal) {\n                var pendingAccessor =\n                    target.NORMAL !== undefined\n                        ? parser.getDependency('accessor', target.NORMAL)\n                        : geometry.attributes.normal;\n\n                pendingNormalAccessors.push(pendingAccessor);\n            }\n        }\n\n        return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (\n            accessors\n        ) {\n            var morphPositions = accessors[0];\n            var morphNormals = accessors[1];\n\n            if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n            if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n            geometry.morphTargetsRelative = true;\n\n            return geometry;\n        });\n    }\n\n    /**\n     * @param {Mesh} mesh\n     * @param {GLTF.Mesh} meshDef\n     */\n    function updateMorphTargets(mesh, meshDef) {\n        mesh.updateMorphTargets();\n\n        if (meshDef.weights !== undefined) {\n            for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n                mesh.morphTargetInfluences[i] = meshDef.weights[i];\n            }\n        }\n\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\n        if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n            var targetNames = meshDef.extras.targetNames;\n\n            if (mesh.morphTargetInfluences.length === targetNames.length) {\n                mesh.morphTargetDictionary = {};\n\n                for (var i = 0, il = targetNames.length; i < il; i++) {\n                    mesh.morphTargetDictionary[targetNames[i]] = i;\n                }\n            } else {\n                console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n            }\n        }\n    }\n\n    function createPrimitiveKey(primitiveDef) {\n        var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n        var geometryKey;\n\n        if (dracoExtension) {\n            geometryKey =\n                'draco:' +\n                dracoExtension.bufferView +\n                ':' +\n                dracoExtension.indices +\n                ':' +\n                createAttributesKey(dracoExtension.attributes);\n        } else {\n            geometryKey =\n                primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n        }\n\n        return geometryKey;\n    }\n\n    function createAttributesKey(attributes) {\n        var attributesKey = '';\n\n        var keys = Object.keys(attributes).sort();\n\n        for (var i = 0, il = keys.length; i < il; i++) {\n            attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n        }\n\n        return attributesKey;\n    }\n\n    /* GLTF PARSER */\n\n    function GLTFParser(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n\n        // BufferGeometry caching\n        this.primitiveCache = {};\n\n        this.textureLoader = new TextureLoader(this.options.manager);\n        this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n        this.fileLoader = new FileLoader(this.options.manager);\n        this.fileLoader.setResponseType('arraybuffer');\n\n        if (this.options.crossOrigin === 'use-credentials') {\n            this.fileLoader.setWithCredentials(true);\n        }\n    }\n\n    GLTFParser.prototype.parse = function (onLoad, onError) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Mark the special nodes/meshes in json for efficient parse\n        this.markDefs();\n\n        Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')])\n            .then(function (dependencies) {\n                var result = {\n                    scene: dependencies[0][json.scene || 0],\n                    scenes: dependencies[0],\n                    animations: dependencies[1],\n                    cameras: dependencies[2],\n                    asset: json.asset,\n                    parser: parser,\n                    userData: {}\n                };\n\n                addUnknownExtensionsToUserData(extensions, result, json);\n\n                assignExtrasToUserData(result, json);\n\n                onLoad(result);\n            })\n            .catch(onError);\n    };\n\n    /**\n     * Marks the special nodes/meshes in json for efficient parse.\n     */\n    GLTFParser.prototype.markDefs = function () {\n        var nodeDefs = this.json.nodes || [];\n        var skinDefs = this.json.skins || [];\n        var meshDefs = this.json.meshes || [];\n\n        var meshReferences = {};\n        var meshUses = {};\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n            var joints = skinDefs[skinIndex].joints;\n\n            for (var i = 0, il = joints.length; i < il; i++) {\n                nodeDefs[joints[i]].isBone = true;\n            }\n        }\n\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n        // avoid having more than one Mesh with the same name, count\n        // references and rename instances below.\n        //\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n        for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n            var nodeDef = nodeDefs[nodeIndex];\n\n            if (nodeDef.mesh !== undefined) {\n                if (meshReferences[nodeDef.mesh] === undefined) {\n                    meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n                }\n\n                meshReferences[nodeDef.mesh]++;\n\n                // Nothing in the mesh definition indicates whether it is\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\n                // to mark SkinnedMesh if node has skin.\n                if (nodeDef.skin !== undefined) {\n                    meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n                }\n            }\n        }\n\n        this.json.meshReferences = meshReferences;\n        this.json.meshUses = meshUses;\n    };\n\n    /**\n     * Requests the specified dependency asynchronously, with caching.\n     * @param {string} type\n     * @param {number} index\n     * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n     */\n    GLTFParser.prototype.getDependency = function (type, index) {\n        var cacheKey = type + ':' + index;\n        var dependency = this.cache.get(cacheKey);\n\n        if (!dependency) {\n            switch (type) {\n                case 'scene':\n                    dependency = this.loadScene(index);\n                    break;\n\n                case 'node':\n                    dependency = this.loadNode(index);\n                    break;\n\n                case 'mesh':\n                    dependency = this.loadMesh(index);\n                    break;\n\n                case 'accessor':\n                    dependency = this.loadAccessor(index);\n                    break;\n\n                case 'bufferView':\n                    dependency = this.loadBufferView(index);\n                    break;\n\n                case 'buffer':\n                    dependency = this.loadBuffer(index);\n                    break;\n\n                case 'material':\n                    dependency = this.loadMaterial(index);\n                    break;\n\n                case 'texture':\n                    dependency = this.loadTexture(index);\n                    break;\n\n                case 'skin':\n                    dependency = this.loadSkin(index);\n                    break;\n\n                case 'animation':\n                    dependency = this.loadAnimation(index);\n                    break;\n\n                case 'camera':\n                    dependency = this.loadCamera(index);\n                    break;\n\n                case 'light':\n                    dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n                    break;\n\n                default:\n                    throw new Error('Unknown type: ' + type);\n            }\n\n            this.cache.add(cacheKey, dependency);\n        }\n\n        return dependency;\n    };\n\n    /**\n     * Requests all dependencies of the specified type asynchronously, with caching.\n     * @param {string} type\n     * @return {Promise<Array<Object>>}\n     */\n    GLTFParser.prototype.getDependencies = function (type) {\n        var dependencies = this.cache.get(type);\n\n        if (!dependencies) {\n            var parser = this;\n            var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n            dependencies = Promise.all(\n                defs.map(function (def, index) {\n                    return parser.getDependency(type, index);\n                })\n            );\n\n            this.cache.add(type, dependencies);\n        }\n\n        return dependencies;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n        var bufferDef = this.json.buffers[bufferIndex];\n        var loader = this.fileLoader;\n\n        if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n            throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n        }\n\n        // If present, GLB container is required to be the first buffer.\n        if (bufferDef.uri === undefined && bufferIndex === 0) {\n            return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n        }\n\n        var options = this.options;\n\n        return new Promise(function (resolve, reject) {\n            loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n                reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n            });\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n     * @param {number} bufferViewIndex\n     * @return {Promise<ArrayBuffer>}\n     */\n    GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n        var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n        return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n            var byteLength = bufferViewDef.byteLength || 0;\n            var byteOffset = bufferViewDef.byteOffset || 0;\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n     * @param {number} accessorIndex\n     * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n     */\n    GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var accessorDef = this.json.accessors[accessorIndex];\n\n        if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n            // Ignore empty accessors, which may be used to declare runtime\n            // information about attributes coming from another source (e.g. Draco\n            // compression extension).\n            return Promise.resolve(null);\n        }\n\n        var pendingBufferViews = [];\n\n        if (accessorDef.bufferView !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n        } else {\n            pendingBufferViews.push(null);\n        }\n\n        if (accessorDef.sparse !== undefined) {\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n            pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n        }\n\n        return Promise.all(pendingBufferViews).then(function (bufferViews) {\n            var bufferView = bufferViews[0];\n\n            var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n            var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n            var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n            var itemBytes = elementBytes * itemSize;\n            var byteOffset = accessorDef.byteOffset || 0;\n            var byteStride =\n                accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n            var normalized = accessorDef.normalized === true;\n            var array, bufferAttribute;\n\n            // The buffer is not interleaved if the stride is the item size in bytes.\n            if (byteStride && byteStride !== itemBytes) {\n                // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n                // This makes sure that IBA.count reflects accessor.count properly\n                var ibSlice = Math.floor(byteOffset / byteStride);\n                var ibCacheKey =\n                    'InterleavedBuffer:' +\n                    accessorDef.bufferView +\n                    ':' +\n                    accessorDef.componentType +\n                    ':' +\n                    ibSlice +\n                    ':' +\n                    accessorDef.count;\n                var ib = parser.cache.get(ibCacheKey);\n\n                if (!ib) {\n                    array = new TypedArray(\n                        bufferView,\n                        ibSlice * byteStride,\n                        (accessorDef.count * byteStride) / elementBytes\n                    );\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n                    parser.cache.add(ibCacheKey, ib);\n                }\n\n                bufferAttribute = new InterleavedBufferAttribute(\n                    ib,\n                    itemSize,\n                    (byteOffset % byteStride) / elementBytes,\n                    normalized\n                );\n            } else {\n                if (bufferView === null) {\n                    array = new TypedArray(accessorDef.count * itemSize);\n                } else {\n                    array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n                }\n\n                bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n            }\n\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n            if (accessorDef.sparse !== undefined) {\n                var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n                var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n                var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n                var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n                var sparseIndices = new TypedArrayIndices(\n                    bufferViews[1],\n                    byteOffsetIndices,\n                    accessorDef.sparse.count * itemSizeIndices\n                );\n                var sparseValues = new TypedArray(\n                    bufferViews[2],\n                    byteOffsetValues,\n                    accessorDef.sparse.count * itemSize\n                );\n\n                if (bufferView !== null) {\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                    bufferAttribute = new BufferAttribute(\n                        bufferAttribute.array.slice(),\n                        bufferAttribute.itemSize,\n                        bufferAttribute.normalized\n                    );\n                }\n\n                for (var i = 0, il = sparseIndices.length; i < il; i++) {\n                    var index = sparseIndices[i];\n\n                    bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                    if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                    if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                    if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                    if (itemSize >= 5)\n                        throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n                }\n            }\n\n            return bufferAttribute;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n     * @param {number} textureIndex\n     * @return {Promise<THREE.Texture>}\n     */\n    GLTFParser.prototype.loadTexture = function (textureIndex) {\n        var parser = this;\n        var json = this.json;\n        var options = this.options;\n        var textureLoader = this.textureLoader;\n\n        var URL = self.URL || self.webkitURL;\n\n        var textureDef = json.textures[textureIndex];\n\n        var textureExtensions = textureDef.extensions || {};\n\n        var source;\n\n        if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n            source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n        } else {\n            source = json.images[textureDef.source];\n        }\n\n        var sourceURI = source.uri;\n        var isObjectURL = false;\n\n        if (source.bufferView !== undefined) {\n            // Load binary image data from bufferView, if provided.\n\n            sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n                isObjectURL = true;\n                var blob = new Blob([bufferView], { type: source.mimeType });\n                sourceURI = URL.createObjectURL(blob);\n                return sourceURI;\n            });\n        }\n\n        return Promise.resolve(sourceURI)\n            .then(function (sourceURI) {\n                // Load Texture resource.\n\n                var loader = options.manager.getHandler(sourceURI);\n\n                if (!loader) {\n                    loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n                        ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n                        : textureLoader;\n                }\n\n                return new Promise(function (resolve, reject) {\n                    loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n                });\n            })\n            .then(function (texture) {\n                // Clean up resources and configure Texture.\n\n                if (isObjectURL === true) {\n                    URL.revokeObjectURL(sourceURI);\n                }\n\n                texture.flipY = false;\n\n                if (textureDef.name) texture.name = textureDef.name;\n\n                // Ignore unknown mime types, like DDS files.\n                if (source.mimeType in MIME_TYPE_FORMATS) {\n                    texture.format = MIME_TYPE_FORMATS[source.mimeType];\n                }\n\n                var samplers = json.samplers || {};\n                var sampler = samplers[textureDef.sampler] || {};\n\n                texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n                texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n                texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n                texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n                return texture;\n            });\n    };\n\n    /**\n     * Asynchronously assigns a texture to the given material parameters.\n     * @param {Object} materialParams\n     * @param {string} mapName\n     * @param {Object} mapDef\n     * @return {Promise}\n     */\n    GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n        var parser = this;\n\n        return this.getDependency('texture', mapDef.index).then(function (texture) {\n            if (!texture.isCompressedTexture) {\n                switch (mapName) {\n                    case 'aoMap':\n                    case 'emissiveMap':\n                    case 'metalnessMap':\n                    case 'normalMap':\n                    case 'roughnessMap':\n                        texture.format = RGBFormat;\n                        break;\n                }\n            }\n\n            // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n            // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n            if (\n                mapDef.texCoord !== undefined &&\n                mapDef.texCoord != 0 &&\n                !(mapName === 'aoMap' && mapDef.texCoord == 1)\n            ) {\n                console.warn(\n                    'THREE.GLTFLoader: Custom UV set ' +\n                        mapDef.texCoord +\n                        ' for texture ' +\n                        mapName +\n                        ' not yet supported.'\n                );\n            }\n\n            if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n                var transform =\n                    mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n                if (transform) {\n                    texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n                }\n            }\n\n            materialParams[mapName] = texture;\n        });\n    };\n\n    /**\n     * Assigns final material to a Mesh, Line, or Points instance. The instance\n     * already has a material (generated from the glTF material options alone)\n     * but reuse of the same glTF material may require multiple threejs materials\n     * to accomodate different primitive types, defines, etc. New materials will\n     * be created if necessary, and reused from a cache.\n     * @param  {Object3D} mesh Mesh, Line, or Points instance.\n     */\n    GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n        var geometry = mesh.geometry;\n        var material = mesh.material;\n\n        var useVertexTangents = geometry.attributes.tangent !== undefined;\n        var useVertexColors = geometry.attributes.color !== undefined;\n        var useFlatShading = geometry.attributes.normal === undefined;\n        var useSkinning = mesh.isSkinnedMesh === true;\n        var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n        var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n        if (mesh.isPoints) {\n            var cacheKey = 'PointsMaterial:' + material.uuid;\n\n            var pointsMaterial = this.cache.get(cacheKey);\n\n            if (!pointsMaterial) {\n                pointsMaterial = new PointsMaterial();\n                Material.prototype.copy.call(pointsMaterial, material);\n                pointsMaterial.color.copy(material.color);\n                pointsMaterial.map = material.map;\n                pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n                this.cache.add(cacheKey, pointsMaterial);\n            }\n\n            material = pointsMaterial;\n        } else if (mesh.isLine) {\n            var cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n            var lineMaterial = this.cache.get(cacheKey);\n\n            if (!lineMaterial) {\n                lineMaterial = new LineBasicMaterial();\n                Material.prototype.copy.call(lineMaterial, material);\n                lineMaterial.color.copy(material.color);\n\n                this.cache.add(cacheKey, lineMaterial);\n            }\n\n            material = lineMaterial;\n        }\n\n        // Clone the material if it will be modified\n        if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n            var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n            if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n            if (useSkinning) cacheKey += 'skinning:';\n            if (useVertexTangents) cacheKey += 'vertex-tangents:';\n            if (useVertexColors) cacheKey += 'vertex-colors:';\n            if (useFlatShading) cacheKey += 'flat-shading:';\n            if (useMorphTargets) cacheKey += 'morph-targets:';\n            if (useMorphNormals) cacheKey += 'morph-normals:';\n\n            var cachedMaterial = this.cache.get(cacheKey);\n\n            if (!cachedMaterial) {\n                cachedMaterial = material.clone();\n\n                if (useSkinning) cachedMaterial.skinning = true;\n                if (useVertexTangents) cachedMaterial.vertexTangents = true;\n                if (useVertexColors) cachedMaterial.vertexColors = true;\n                if (useFlatShading) cachedMaterial.flatShading = true;\n                if (useMorphTargets) cachedMaterial.morphTargets = true;\n                if (useMorphNormals) cachedMaterial.morphNormals = true;\n\n                this.cache.add(cacheKey, cachedMaterial);\n            }\n\n            material = cachedMaterial;\n        }\n\n        // workarounds for mesh and geometry\n\n        if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n            geometry.setAttribute('uv2', geometry.attributes.uv);\n        }\n\n        // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        if (material.normalScale && !useVertexTangents) {\n            material.normalScale.y = -material.normalScale.y;\n        }\n\n        if (material.clearcoatNormalScale && !useVertexTangents) {\n            material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n        }\n\n        mesh.material = material;\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n     * @param {number} materialIndex\n     * @return {Promise<Material>}\n     */\n    GLTFParser.prototype.loadMaterial = function (materialIndex) {\n        var parser = this;\n        var json = this.json;\n        var extensions = this.extensions;\n        var materialDef = json.materials[materialIndex];\n\n        var materialType;\n        var materialParams = {};\n        var materialExtensions = materialDef.extensions || {};\n\n        var pending = [];\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n            var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n            materialType = sgExtension.getMaterialType();\n            pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n        } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n            var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n            materialType = kmuExtension.getMaterialType();\n            pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n        } else {\n            // Specification:\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n            materialType = MeshStandardMaterial;\n\n            var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n            materialParams.color = new Color(1.0, 1.0, 1.0);\n            materialParams.opacity = 1.0;\n\n            if (Array.isArray(metallicRoughness.baseColorFactor)) {\n                var array = metallicRoughness.baseColorFactor;\n\n                materialParams.color.fromArray(array);\n                materialParams.opacity = array[3];\n            }\n\n            if (metallicRoughness.baseColorTexture !== undefined) {\n                pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n            }\n\n            materialParams.metalness =\n                metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n            materialParams.roughness =\n                metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n            if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n                pending.push(\n                    parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n                pending.push(\n                    parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture)\n                );\n            }\n        }\n\n        if (materialDef.doubleSided === true) {\n            materialParams.side = DoubleSide;\n        }\n\n        var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n        if (alphaMode === ALPHA_MODES.BLEND) {\n            materialParams.transparent = true;\n\n            // See: https://github.com/mrdoob/three.js/issues/17706\n            materialParams.depthWrite = false;\n        } else {\n            materialParams.transparent = false;\n\n            if (alphaMode === ALPHA_MODES.MASK) {\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n            }\n        }\n\n        if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n\n            materialParams.normalScale = new Vector2(1, 1);\n\n            if (materialDef.normalTexture.scale !== undefined) {\n                materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n            }\n        }\n\n        if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n            if (materialDef.occlusionTexture.strength !== undefined) {\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n            }\n        }\n\n        if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n\n        if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n        }\n\n        if (materialExtensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT]) {\n            var clearcoatExtension = extensions[EXTENSIONS.KHR_MATERIALS_CLEARCOAT];\n            materialType = clearcoatExtension.getMaterialType();\n            pending.push(clearcoatExtension.extendParams(materialParams, { extensions: materialExtensions }, parser));\n        }\n\n        return Promise.all(pending).then(function () {\n            var material;\n\n            if (materialType === GLTFMeshStandardSGMaterial) {\n                material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n            } else {\n                material = new materialType(materialParams);\n            }\n\n            if (materialDef.name) material.name = materialDef.name;\n\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n            if (material.map) material.map.encoding = sRGBEncoding;\n            if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n            assignExtrasToUserData(material, materialDef);\n\n            if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n\n            return material;\n        });\n    };\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     */\n    function computeBounds(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var box = new Box3();\n\n        if (attributes.POSITION !== undefined) {\n            var accessor = parser.json.accessors[attributes.POSITION];\n\n            var min = accessor.min;\n            var max = accessor.max;\n\n            // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n            if (min !== undefined && max !== undefined) {\n                box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n            } else {\n                console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n\n                return;\n            }\n        } else {\n            return;\n        }\n\n        var targets = primitiveDef.targets;\n\n        if (targets !== undefined) {\n            var maxDisplacement = new Vector3();\n            var vector = new Vector3();\n\n            for (var i = 0, il = targets.length; i < il; i++) {\n                var target = targets[i];\n\n                if (target.POSITION !== undefined) {\n                    var accessor = parser.json.accessors[target.POSITION];\n                    var min = accessor.min;\n                    var max = accessor.max;\n\n                    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n                    if (min !== undefined && max !== undefined) {\n                        // we need to get max of absolute components because target weight is [-1,1]\n                        vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n                        vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n                        vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n\n                        // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n                        // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n                        // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n                        // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n                        maxDisplacement.max(vector);\n                    } else {\n                        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n                    }\n                }\n            }\n\n            // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n            box.expandByVector(maxDisplacement);\n        }\n\n        geometry.boundingBox = box;\n\n        var sphere = new Sphere();\n\n        box.getCenter(sphere.center);\n        sphere.radius = box.min.distanceTo(box.max) / 2;\n\n        geometry.boundingSphere = sphere;\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {GLTF.Primitive} primitiveDef\n     * @param {GLTFParser} parser\n     * @return {Promise<BufferGeometry>}\n     */\n    function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n        var attributes = primitiveDef.attributes;\n\n        var pending = [];\n\n        function assignAttributeAccessor(accessorIndex, attributeName) {\n            return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n                geometry.setAttribute(attributeName, accessor);\n            });\n        }\n\n        for (var gltfAttributeName in attributes) {\n            var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n            // Skip attributes already provided by e.g. Draco extension.\n            if (threeAttributeName in geometry.attributes) continue;\n\n            pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n        }\n\n        if (primitiveDef.indices !== undefined && !geometry.index) {\n            var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n                geometry.setIndex(accessor);\n            });\n\n            pending.push(accessor);\n        }\n\n        assignExtrasToUserData(geometry, primitiveDef);\n\n        computeBounds(geometry, primitiveDef, parser);\n\n        return Promise.all(pending).then(function () {\n            return primitiveDef.targets !== undefined\n                ? addMorphTargets(geometry, primitiveDef.targets, parser)\n                : geometry;\n        });\n    }\n\n    /**\n     * @param {BufferGeometry} geometry\n     * @param {Number} drawMode\n     * @return {BufferGeometry}\n     */\n    function toTrianglesDrawMode(geometry, drawMode) {\n        var index = geometry.getIndex();\n\n        // generate index if not present\n\n        if (index === null) {\n            var indices = [];\n\n            var position = geometry.getAttribute('position');\n\n            if (position !== undefined) {\n                for (var i = 0; i < position.count; i++) {\n                    indices.push(i);\n                }\n\n                geometry.setIndex(indices);\n                index = geometry.getIndex();\n            } else {\n                console.error(\n                    'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.'\n                );\n                return geometry;\n            }\n        }\n\n        //\n\n        var numberOfTriangles = index.count - 2;\n        var newIndices = [];\n\n        if (drawMode === TriangleFanDrawMode) {\n            // gl.TRIANGLE_FAN\n\n            for (var i = 1; i <= numberOfTriangles; i++) {\n                newIndices.push(index.getX(0));\n                newIndices.push(index.getX(i));\n                newIndices.push(index.getX(i + 1));\n            }\n        } else {\n            // gl.TRIANGLE_STRIP\n\n            for (var i = 0; i < numberOfTriangles; i++) {\n                if (i % 2 === 0) {\n                    newIndices.push(index.getX(i));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i + 2));\n                } else {\n                    newIndices.push(index.getX(i + 2));\n                    newIndices.push(index.getX(i + 1));\n                    newIndices.push(index.getX(i));\n                }\n            }\n        }\n\n        if (newIndices.length / 3 !== numberOfTriangles) {\n            console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n        }\n\n        // build final geometry\n\n        var newGeometry = geometry.clone();\n        newGeometry.setIndex(newIndices);\n\n        return newGeometry;\n    }\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n     *\n     * Creates BufferGeometries from primitives.\n     *\n     * @param {Array<GLTF.Primitive>} primitives\n     * @return {Promise<Array<BufferGeometry>>}\n     */\n    GLTFParser.prototype.loadGeometries = function (primitives) {\n        var parser = this;\n        var extensions = this.extensions;\n        var cache = this.primitiveCache;\n\n        function createDracoPrimitive(primitive) {\n            return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n                .decodePrimitive(primitive, parser)\n                .then(function (geometry) {\n                    return addPrimitiveAttributes(geometry, primitive, parser);\n                });\n        }\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var primitive = primitives[i];\n            var cacheKey = createPrimitiveKey(primitive);\n\n            // See if we've already created this geometry\n            var cached = cache[cacheKey];\n\n            if (cached) {\n                // Use the cached geometry if it exists\n                pending.push(cached.promise);\n            } else {\n                var geometryPromise;\n\n                if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n                    // Use DRACO geometry if available\n                    geometryPromise = createDracoPrimitive(primitive);\n                } else {\n                    // Otherwise create a new geometry\n                    geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n                }\n\n                // Cache this geometry\n                cache[cacheKey] = { primitive: primitive, promise: geometryPromise };\n\n                pending.push(geometryPromise);\n            }\n        }\n\n        return Promise.all(pending);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n     * @param {number} meshIndex\n     * @return {Promise<Group|Mesh|SkinnedMesh>}\n     */\n    GLTFParser.prototype.loadMesh = function (meshIndex) {\n        var parser = this;\n        var json = this.json;\n\n        var meshDef = json.meshes[meshIndex];\n        var primitives = meshDef.primitives;\n\n        var pending = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n            var material =\n                primitives[i].material === undefined\n                    ? createDefaultMaterial(this.cache)\n                    : this.getDependency('material', primitives[i].material);\n\n            pending.push(material);\n        }\n\n        pending.push(parser.loadGeometries(primitives));\n\n        return Promise.all(pending).then(function (results) {\n            var materials = results.slice(0, results.length - 1);\n            var geometries = results[results.length - 1];\n\n            var meshes = [];\n\n            for (var i = 0, il = geometries.length; i < il; i++) {\n                var geometry = geometries[i];\n                var primitive = primitives[i];\n\n                // 1. create Mesh\n\n                var mesh;\n\n                var material = materials[i];\n\n                if (\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n                    primitive.mode === undefined\n                ) {\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n                    mesh =\n                        meshDef.isSkinnedMesh === true\n                            ? new SkinnedMesh(geometry, material)\n                            : new Mesh(geometry, material);\n\n                    if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n                        // we normalize floating point skin weight array to fix malformed assets (see #15319)\n                        // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n                        mesh.normalizeSkinWeights();\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n                        mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n                    mesh = new Points(geometry, material);\n                } else {\n                    throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n                }\n\n                if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n                    updateMorphTargets(mesh, meshDef);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (geometries.length > 1) mesh.name += '_' + i;\n\n                assignExtrasToUserData(mesh, meshDef);\n\n                parser.assignFinalMaterial(mesh);\n\n                meshes.push(mesh);\n            }\n\n            if (meshes.length === 1) {\n                return meshes[0];\n            }\n\n            var group = new Group();\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n                group.add(meshes[i]);\n            }\n\n            return group;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n     * @param {number} cameraIndex\n     * @return {Promise<THREE.Camera>}\n     */\n    GLTFParser.prototype.loadCamera = function (cameraIndex) {\n        var camera;\n        var cameraDef = this.json.cameras[cameraIndex];\n        var params = cameraDef[cameraDef.type];\n\n        if (!params) {\n            console.warn('THREE.GLTFLoader: Missing camera parameters.');\n            return;\n        }\n\n        if (cameraDef.type === 'perspective') {\n            camera = new PerspectiveCamera(\n                MathUtils.radToDeg(params.yfov),\n                params.aspectRatio || 1,\n                params.znear || 1,\n                params.zfar || 2e6\n            );\n        } else if (cameraDef.type === 'orthographic') {\n            camera = new OrthographicCamera(\n                -params.xmag,\n                params.xmag,\n                params.ymag,\n                -params.ymag,\n                params.znear,\n                params.zfar\n            );\n        }\n\n        if (cameraDef.name) camera.name = cameraDef.name;\n\n        assignExtrasToUserData(camera, cameraDef);\n\n        return Promise.resolve(camera);\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n     * @param {number} skinIndex\n     * @return {Promise<Object>}\n     */\n    GLTFParser.prototype.loadSkin = function (skinIndex) {\n        var skinDef = this.json.skins[skinIndex];\n\n        var skinEntry = { joints: skinDef.joints };\n\n        if (skinDef.inverseBindMatrices === undefined) {\n            return Promise.resolve(skinEntry);\n        }\n\n        return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n            skinEntry.inverseBindMatrices = accessor;\n\n            return skinEntry;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n     * @param {number} animationIndex\n     * @return {Promise<AnimationClip>}\n     */\n    GLTFParser.prototype.loadAnimation = function (animationIndex) {\n        var json = this.json;\n\n        var animationDef = json.animations[animationIndex];\n\n        var pendingNodes = [];\n        var pendingInputAccessors = [];\n        var pendingOutputAccessors = [];\n        var pendingSamplers = [];\n        var pendingTargets = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n            var target = channel.target;\n            var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n            var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n            var output =\n                animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n            pendingNodes.push(this.getDependency('node', name));\n            pendingInputAccessors.push(this.getDependency('accessor', input));\n            pendingOutputAccessors.push(this.getDependency('accessor', output));\n            pendingSamplers.push(sampler);\n            pendingTargets.push(target);\n        }\n\n        return Promise.all([\n            Promise.all(pendingNodes),\n            Promise.all(pendingInputAccessors),\n            Promise.all(pendingOutputAccessors),\n            Promise.all(pendingSamplers),\n            Promise.all(pendingTargets)\n        ]).then(function (dependencies) {\n            var nodes = dependencies[0];\n            var inputAccessors = dependencies[1];\n            var outputAccessors = dependencies[2];\n            var samplers = dependencies[3];\n            var targets = dependencies[4];\n\n            var tracks = [];\n\n            for (var i = 0, il = nodes.length; i < il; i++) {\n                var node = nodes[i];\n                var inputAccessor = inputAccessors[i];\n                var outputAccessor = outputAccessors[i];\n                var sampler = samplers[i];\n                var target = targets[i];\n\n                if (node === undefined) continue;\n\n                node.updateMatrix();\n                node.matrixAutoUpdate = true;\n\n                var TypedKeyframeTrack;\n\n                switch (PATH_PROPERTIES[target.path]) {\n                    case PATH_PROPERTIES.weights:\n                        TypedKeyframeTrack = NumberKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.rotation:\n                        TypedKeyframeTrack = QuaternionKeyframeTrack;\n                        break;\n\n                    case PATH_PROPERTIES.position:\n                    case PATH_PROPERTIES.scale:\n                    default:\n                        TypedKeyframeTrack = VectorKeyframeTrack;\n                        break;\n                }\n\n                var targetName = node.name ? node.name : node.uuid;\n\n                var interpolation =\n                    sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n                var targetNames = [];\n\n                if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n                    // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n                    node.traverse(function (object) {\n                        if (object.isMesh === true && object.morphTargetInfluences) {\n                            targetNames.push(object.name ? object.name : object.uuid);\n                        }\n                    });\n                } else {\n                    targetNames.push(targetName);\n                }\n\n                var outputArray = outputAccessor.array;\n\n                if (outputAccessor.normalized) {\n                    var scale;\n\n                    if (outputArray.constructor === Int8Array) {\n                        scale = 1 / 127;\n                    } else if (outputArray.constructor === Uint8Array) {\n                        scale = 1 / 255;\n                    } else if (outputArray.constructor == Int16Array) {\n                        scale = 1 / 32767;\n                    } else if (outputArray.constructor === Uint16Array) {\n                        scale = 1 / 65535;\n                    } else {\n                        throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n                    }\n\n                    var scaled = new Float32Array(outputArray.length);\n\n                    for (var j = 0, jl = outputArray.length; j < jl; j++) {\n                        scaled[j] = outputArray[j] * scale;\n                    }\n\n                    outputArray = scaled;\n                }\n\n                for (var j = 0, jl = targetNames.length; j < jl; j++) {\n                    var track = new TypedKeyframeTrack(\n                        targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n                        inputAccessor.array,\n                        outputArray,\n                        interpolation\n                    );\n\n                    // Override interpolation with custom factory method.\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n                        track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n                            // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n                            // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n                            // must be divided by three to get the interpolant's sampleSize argument.\n\n                            return new GLTFCubicSplineInterpolant(\n                                this.times,\n                                this.values,\n                                this.getValueSize() / 3,\n                                result\n                            );\n                        };\n\n                        // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n                        track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n                    }\n\n                    tracks.push(track);\n                }\n            }\n\n            var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n            return new AnimationClip(name, undefined, tracks);\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n     * @param {number} nodeIndex\n     * @return {Promise<Object3D>}\n     */\n    GLTFParser.prototype.loadNode = function (nodeIndex) {\n        var json = this.json;\n        var extensions = this.extensions;\n        var parser = this;\n\n        var meshReferences = json.meshReferences;\n        var meshUses = json.meshUses;\n\n        var nodeDef = json.nodes[nodeIndex];\n\n        return (function () {\n            var pending = [];\n\n            if (nodeDef.mesh !== undefined) {\n                pending.push(\n                    parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n                        var node;\n\n                        if (meshReferences[nodeDef.mesh] > 1) {\n                            var instanceNum = meshUses[nodeDef.mesh]++;\n\n                            node = mesh.clone();\n                            node.name += '_instance_' + instanceNum;\n                        } else {\n                            node = mesh;\n                        }\n\n                        // if weights are provided on the node, override weights on the mesh.\n                        if (nodeDef.weights !== undefined) {\n                            node.traverse(function (o) {\n                                if (!o.isMesh) return;\n\n                                for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                                    o.morphTargetInfluences[i] = nodeDef.weights[i];\n                                }\n                            });\n                        }\n\n                        return node;\n                    })\n                );\n            }\n\n            if (nodeDef.camera !== undefined) {\n                pending.push(parser.getDependency('camera', nodeDef.camera));\n            }\n\n            if (\n                nodeDef.extensions &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n                nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n            ) {\n                pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n            }\n\n            return Promise.all(pending);\n        })().then(function (objects) {\n            var node;\n\n            // .isBone isn't in glTF spec. See .markDefs\n            if (nodeDef.isBone === true) {\n                node = new Bone();\n            } else if (objects.length > 1) {\n                node = new Group();\n            } else if (objects.length === 1) {\n                node = objects[0];\n            } else {\n                node = new Object3D();\n            }\n\n            if (node !== objects[0]) {\n                for (var i = 0, il = objects.length; i < il; i++) {\n                    node.add(objects[i]);\n                }\n            }\n\n            if (nodeDef.name) {\n                node.userData.name = nodeDef.name;\n                node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n            }\n\n            assignExtrasToUserData(node, nodeDef);\n\n            if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n            if (nodeDef.matrix !== undefined) {\n                var matrix = new Matrix4();\n                matrix.fromArray(nodeDef.matrix);\n                node.applyMatrix4(matrix);\n            } else {\n                if (nodeDef.translation !== undefined) {\n                    node.position.fromArray(nodeDef.translation);\n                }\n\n                if (nodeDef.rotation !== undefined) {\n                    node.quaternion.fromArray(nodeDef.rotation);\n                }\n\n                if (nodeDef.scale !== undefined) {\n                    node.scale.fromArray(nodeDef.scale);\n                }\n            }\n\n            return node;\n        });\n    };\n\n    /**\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n     * @param {number} sceneIndex\n     * @return {Promise<Group>}\n     */\n    GLTFParser.prototype.loadScene = (function () {\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, json, parser) {\n            var nodeDef = json.nodes[nodeId];\n\n            return parser\n                .getDependency('node', nodeId)\n                .then(function (node) {\n                    if (nodeDef.skin === undefined) return node;\n\n                    // build skeleton here as well\n\n                    var skinEntry;\n\n                    return parser\n                        .getDependency('skin', nodeDef.skin)\n                        .then(function (skin) {\n                            skinEntry = skin;\n\n                            var pendingJoints = [];\n\n                            for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n                                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n                            }\n\n                            return Promise.all(pendingJoints);\n                        })\n                        .then(function (jointNodes) {\n                            node.traverse(function (mesh) {\n                                if (!mesh.isMesh) return;\n\n                                var bones = [];\n                                var boneInverses = [];\n\n                                for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n                                    var jointNode = jointNodes[j];\n\n                                    if (jointNode) {\n                                        bones.push(jointNode);\n\n                                        var mat = new Matrix4();\n\n                                        if (skinEntry.inverseBindMatrices !== undefined) {\n                                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                                        }\n\n                                        boneInverses.push(mat);\n                                    } else {\n                                        console.warn(\n                                            'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                                            skinEntry.joints[j]\n                                        );\n                                    }\n                                }\n\n                                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n                            });\n\n                            return node;\n                        });\n                })\n                .then(function (node) {\n                    // build node hierachy\n\n                    parentObject.add(node);\n\n                    var pending = [];\n\n                    if (nodeDef.children) {\n                        var children = nodeDef.children;\n\n                        for (var i = 0, il = children.length; i < il; i++) {\n                            var child = children[i];\n                            pending.push(buildNodeHierachy(child, node, json, parser));\n                        }\n                    }\n\n                    return Promise.all(pending);\n                });\n        }\n\n        return function loadScene(sceneIndex) {\n            var json = this.json;\n            var extensions = this.extensions;\n            var sceneDef = this.json.scenes[sceneIndex];\n            var parser = this;\n\n            // Loader returns Group, not Scene.\n            // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n            var scene = new Group();\n            if (sceneDef.name) scene.name = sceneDef.name;\n\n            assignExtrasToUserData(scene, sceneDef);\n\n            if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n\n            var nodeIds = sceneDef.nodes || [];\n\n            var pending = [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n                pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n            }\n\n            return Promise.all(pending).then(function () {\n                return scene;\n            });\n        };\n    })();\n\n    return GLTFLoader;\n})();\n\nexport { GLTFLoader };\n","const ALIAS = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32,\n    tab: 9,\n    escape: 27\n};\n\nexport default class Keyboard {\n    constructor(domElement) {\n        this.domElement = domElement || document;\n        this.keyCodes = {};\n\n        // bind keyEvents\n        this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // bind window blur\n        window.addEventListener('blur', () => this.onBlur, false);\n    }\n\n    destroy() {\n        this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\n        this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\n\n        // unbind window blur event\n        window.removeEventListener('blur', () => this.onBlur, false);\n    }\n\n    onBlur() {\n        for (const prop in this.keyCodes) this.keyCodes[prop] = false;\n    }\n\n    onKeyChange(event) {\n        // log to debug\n        //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n        // update this.keyCodes\n        const keyCode = event.keyCode;\n        this.keyCodes[keyCode] = event.type === 'keydown';\n    }\n\n    pressed(keyDesc) {\n        const keys = keyDesc.split('+');\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (Object.keys(ALIAS).indexOf(key) != -1) {\n                pressed = this.keyCodes[ALIAS[key]];\n            } else {\n                pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n\n    eventMatches(event, keyDesc) {\n        const aliases = ALIAS;\n        const aliasKeys = Object.keys(aliases);\n        const keys = keyDesc.split('+');\n        // log to debug\n        // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            let pressed = false;\n            if (key === 'shift') {\n                pressed = event.shiftKey ? true : false;\n            } else if (key === 'ctrl') {\n                pressed = event.ctrlKey ? true : false;\n            } else if (key === 'alt') {\n                pressed = event.altKey ? true : false;\n            } else if (key === 'meta') {\n                pressed = event.metaKey ? true : false;\n            } else if (aliasKeys.indexOf(key) !== -1) {\n                pressed = event.keyCode === aliases[key];\n            } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n                pressed = true;\n            }\n            if (!pressed) return false;\n        }\n\n        return true;\n    }\n}\n","import Keyboard from '../../utils/keyboard';\nimport Helpers from '../../utils/helpers';\nimport Config from '../../data/config';\n\n// Manages all input interactions\nexport default class Interaction {\n    constructor(renderer, scene, camera, controls) {\n        // Properties\n        this.renderer = renderer;\n        this.scene = scene;\n        this.camera = camera;\n        this.controls = controls;\n\n        this.timeout = null;\n\n        // Instantiate keyboard helper\n        this.keyboard = new Keyboard();\n\n        // Listeners\n        // Mouse events\n        this.renderer.domElement.addEventListener(\n            'mousemove',\n            (event) => Helpers.throttle(this.onMouseMove(event), 250),\n            false\n        );\n        this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\n        this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\n\n        // Keyboard events\n        this.keyboard.domElement.addEventListener('keydown', (event) => {\n            // Only once\n            if (event.repeat) {\n                return;\n            }\n\n            if (this.keyboard.eventMatches(event, 'escape')) {\n                console.log('Escape pressed');\n            }\n        });\n    }\n\n    onMouseOver(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = true;\n    }\n\n    onMouseLeave(event) {\n        event.preventDefault();\n\n        Config.isMouseOver = false;\n    }\n\n    onMouseMove(event) {\n        event.preventDefault();\n\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(function () {\n            Config.isMouseMoving = false;\n        }, 200);\n\n        Config.isMouseMoving = true;\n    }\n}\n","import Config, { saveConfig } from '../../data/config';\n\n// COMMENT(NuwanJ)\n// Store the last state of the toggles in the window.localStorage\n// Refer: https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n// Refer: https://github.com/dataarts/dat.gui/blob/master/API.md#GUI+useLocalStorage\n\nconst realities = {\n    physical: true,\n    virtual: true\n};\n\n// Manages all dat.GUI interactions\nexport default class DatGUI {\n    constructor(main) {\n        this.gui = new dat.GUI();\n\n        this.gui.useLocalStorage = true;\n\n        this.camera = main.camera.threeCamera;\n        this.controls = main.controls.threeControls;\n        this.light = main.light;\n        this.scene = main.scene;\n\n        this.model = null;\n        this.meshHelper = null;\n    }\n\n    load(main, mesh) {\n        // Add folders\n        this.gui\n            .add(Config, 'isShowingRobotSnapshots')\n            .name('Robot Snapshots')\n            .onChange((value) => {\n                Config.isShowingRobotSnapshots = value;\n                saveConfig(Config);\n            });\n        /* Labels Folder */\n        const labelsFolder = this.gui.addFolder('Labels');\n        labelsFolder\n            .add(Config, 'isShowingLables')\n            .name('All Labels')\n            .onChange((value) => {\n                Config.isShowingLables = value;\n                Config.labelsVisibility = {\n                    obstacles: value,\n                    robots: value\n                };\n                saveConfig(Config);\n            });\n\n        labelsFolder\n            .add(Config.labelsVisibility, 'obstacles')\n            .name('Obstacle Labels')\n            .onChange((value) => {\n                this.toggleLabels(this.scene.children, 'Obstacle', value);\n            });\n        labelsFolder\n            .add(Config.labelsVisibility, 'robots')\n            .name('Robot Labels')\n            .onChange((value) => {\n                this.toggleLabels(this.scene.children, 'Robot', value);\n            });\n\n        /* Reality Folder */\n        const realityFolder = this.gui.addFolder('Reality');\n\n        realityFolder\n            .add(Config.selectedRealities, 'physical')\n            .name('Physical Reality')\n            .listen()\n            .onChange((value) => {\n                this.toggleReality('physical', 'P');\n            });\n        realityFolder\n            .add(Config.selectedRealities, 'virtual')\n            .name('Virtual Reality')\n            .listen()\n            .onChange((value) => {\n                this.toggleReality('virtual', 'V');\n            });\n\n        this.gui.open();\n\n        /* Global */\n        //this.gui.close();\n\n        // this.model = main.model;\n        // this.meshHelper = main.meshHelper;\n    }\n\n    toggleLabels(objects, type, value) {\n        saveConfig(Config);\n        if (Array.isArray(objects) && type !== undefined && type !== '') {\n            for (var variable of objects) {\n                if (variable.name.startsWith(type)) {\n                    variable.children[0].visible = value;\n                }\n            }\n        }\n    }\n\n    toggleReality(reality, selected) {\n        // by default visualizer will intercept all the communication coming to the channel regardless of the reality.\n        // this control panel will only toggle the 'visibility' of objects in the selected realities.\n        const objects = scene.children;\n        saveConfig(Config);\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            const reality = obj[1]['reality'];\n            if (reality !== undefined && reality === 'P') {\n                // obj[1].transparent = Config.selectedRealities.physical;\n                obj[1].material.opacity = Config.selectedRealities.virtual ? 1.0 : 0.05;\n            } else if (reality !== undefined && reality === 'V') {\n                // obj[1].transparent = Config.selectedRealities.virtual;\n                obj[1].material.opacity = Config.selectedRealities.virtual ? 1.0 : 0.05;\n            }\n        });\n    }\n\n    show() {\n        this.gui.show();\n    }\n\n    unload() {\n        this.gui.destroy();\n        this.gui = new dat.GUI();\n    }\n}\n","import * as THREE from 'three';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nconst OBSTACLE_PREFIX = 'Obstacle_';\n\nexport default class Obstacle {\n    constructor(scene, callback) {\n        this.scene = scene;\n        console.log('Obstacle Reality:', Config.mixedReality.obstacles);\n\n        if (callback !== undefined) {\n            callback();\n        }\n    }\n\n    // Create a given list of obstacles\n    createList(obstacles) {\n        Object.entries(obstacles).forEach((obs) => {\n            if (obs !== undefined) {\n                //console.log(obs[1]);\n                this.create(obs[1]);\n            }\n        });\n    }\n\n    // Create a obstacle\n    create(obstacle) {\n        const geometry = this.createGeometry(obstacle.geometry);\n        const material = this.createMaterial(obstacle.material);\n        material.userData.originalColor = new THREE.Color(0x666666);\n        material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.obstacles;\n        material.userData.originalEmmisive = material.emissive.getHex();\n        material.selected = false;\n        material.transparent = true;\n        const id = obstacle.id || 1000 + Math.floor(900 * Math.random());\n\n        const reality = obstacle.reality == undefined ? 'V' : obstacle.reality;\n        const mesh = new THREE.Mesh(geometry, material);\n\n        mesh.name = OBSTACLE_PREFIX + id;\n        mesh.reality = reality; // set reality flag\n        if (mesh.reality === 'V') {\n            // material.visible = Config.selectedRealities.virtual;\n            material.opacity = Config.selectedRealities.virtual ? 1.0 : 0.05;\n        } else if (mesh.reality === 'P') {\n            // material.visible = Config.selectedRealities.physical;\n            material.opacity = Config.selectedRealities.virtual ? 1.0 : 0.05;\n        }\n\n        // Remove if object is already defined\n        this.deleteIfExists(id);\n\n        // Add the mesh object to arena\n        this.scene.add(mesh);\n\n        // update the position of the object\n        if (obstacle.position !== undefined) {\n            const { x, y } = obstacle.position;\n            const z = this.calculateZ(obstacle);\n\n            mesh.scale.set(scene_scale, scene_scale, scene_scale);\n            mesh.position.set(scene_scale * x, scene_scale * y, scene_scale * z);\n        }\n\n        // Rotate the object, after translate degrees into radians\n        if (obstacle.rotation !== undefined) {\n            const { x, y, z } = obstacle.rotation;\n            const radX = ((90 + x) / 360) * 2 * Math.PI; // transformation due to coordinate system\n            const radY = (y / 360) * 2 * Math.PI;\n            const radZ = (z / 360) * 2 * Math.PI;\n\n            mesh.rotation.set(radX, radY, radZ);\n        }\n\n        // Show shadows of the object if enabled\n        if (Config.shadow.enabled) mesh.receiveShadow = true;\n\n        // Add labels to every obstacle, immediately displayed if enabled\n\n        addLabel(OBSTACLE_PREFIX, obstacle, mesh, Config.labelsVisibility.obstacles);\n\n        console.log('Created>', mesh.name);\n    }\n\n    createGeometry(g) {\n        if (g.type == undefined) throw new TypeError('type unspecified');\n\n        if (g.type == 'BoxGeometry') {\n            return this.createBoxGeometry(g.width, g.height, g.depth);\n        } else if (g.type == 'CylinderGeometry') {\n            return this.createCylinderGeometry(g.radiusTop, g.radiusBottom, g.height);\n        } else if (g.type == 'SphereGeometry') {\n            return this.createSphereGeometry(g.radius);\n        }\n        throw new TypeError('unsupported geometry type');\n    }\n\n    createBoxGeometry(width, height, depth) {\n        if (width == undefined) throw new TypeError('width unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n        if (depth == undefined) throw new TypeError('depth unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n        return new THREE.BoxGeometry(width, height, depth);\n    }\n\n    createCylinderGeometry(radiusTop, radiusBottom, height) {\n        if (radiusTop == undefined) throw new TypeError('radiusTop unspecified');\n        if (radiusBottom == undefined) throw new TypeError('radiusBottom unspecified');\n        if (height == undefined) throw new TypeError('height unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/CylinderGeometry\n        const heightSegments = heightSegments || 2;\n        const radialSegments = radialSegments || 16;\n\n        return new THREE.CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments);\n    }\n\n    createSphereGeometry(radius) {\n        if (radius == undefined) throw new TypeError('radius unspecified');\n\n        // https://threejs.org/docs/#api/en/geometries/SphereGeometry\n        const widthSegments = widthSegments || 16;\n        const heightSegments = heightSegments || 16;\n        return new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n    }\n\n    createMaterial(m) {\n        let material;\n        if (m.type == 'MeshBasicMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshBasicMaterial\n            return new THREE.MeshBasicMaterial(m.properties);\n        } else if (m.type == 'MeshNormalMaterial') {\n            // https://threejs.org/docs/api/en/materials/MeshNormalMaterial.html\n            return new THREE.MeshNormalMaterial(m.properties);\n        } else if (m.type == 'MeshPhongMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhongMaterial\n            return new THREE.MeshPhongMaterial(m.properties);\n        } else if (m.type == 'MeshPhysicalMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial\n            return new THREE.MeshPhysicalMaterial(m.properties);\n        } else if (m.type == 'MeshStandardMaterial') {\n            // https://threejs.org/docs/#api/en/materials/MeshStandardMaterial\n            return new THREE.MeshStandardMaterial(m.properties);\n        }\n        // Default material type\n        return new THREE.MeshStandardMaterial(m.properties);\n    }\n\n    calculateZ(obstacle) {\n        // If z is undefined, place the object in top of the arena\n        if (obstacle.position.z == undefined) {\n            if (obstacle.geometry.height !== undefined) {\n                // Box and Cylinder objects\n                return obstacle.geometry.height / 2;\n            } else if (obstacle.geometry.radius !== undefined) {\n                // Sphere objects\n                return obstacle.geometry.radius;\n            }\n            return 0;\n        }\n        return obstacle.position.z;\n    }\n\n    deleteIfExists(id) {\n        // Delete obstacle if it already exists\n        const name = OBSTACLE_PREFIX + id;\n        const obstacle = this.scene.getObjectByName(name);\n        if (obstacle !== undefined) {\n            this.scene.remove(obstacle);\n            console.log('Deleted>', name);\n        }\n    }\n\n    deleteAll() {\n        // Delete all obstacles\n        const objects = this.scene.children;\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n            if (name.startsWith(OBSTACLE_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\nimport Config from '../../data/config';\nimport { addLabel, removeLabel } from './label';\n\nvar STLLoader = require('three-stl-loader')(THREE);\n\nconst ROBOT_PREFIX = 'Robot_';\n\nexport default class Robot {\n    constructor(scene) {\n        this.scene = scene;\n        console.log('Robot Reality:', Config.mixedReality.robots);\n    }\n\n    changeColor(id, R, G, B, ambient, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.material.color.setRGB(R / 256, G / 256, B / 265);\n            //console.log(\"Color> id:\", id, \" | R:\", R, \"G:\", G, \"B:\", B);\n\n            if (callback != null) callback('success');\n        } else if (callback != null) callback('undefined');\n\n        return r;\n    }\n\n    create(id, x, y, heading, reality = 'V', callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        const REALITY = Config.mixedReality.robots;\n\n        if (r == undefined) {\n            // Create only if not exists\n\n            if (reality === REALITY || REALITY === 'M') {\n                // Can create\n                // Limit the arena that robot can go\n                x = scene_scale * Math.min(Math.max(x, Config.arena.minX), Config.arena.maxX);\n                y = scene_scale * Math.min(Math.max(y, Config.arena.minY), Config.arena.maxY);\n\n                var loader = new STLLoader();\n                loader.load('./assets/models/model.stl', function (geometry, scene) {\n                    // Set less opacity for virtual robots\n                    const opacity = 1; // reality == 'V' ? 0.5 : 1;\n\n                    const material = new THREE.MeshStandardMaterial({\n                        color: 0x666666,\n                        opacity: opacity,\n                        transparent: true\n                    });\n                    material.userData.originalColor = new THREE.Color(0x666666);\n                    material.userData.labelVisibility = Config.isShowingLables && Config.labelsVisibility.robots;\n                    material.selected = false;\n                    var r = new THREE.Mesh(geometry, material);\n                    r.receiveShadow = true;\n                    r.robotId = id;\n                    r.name = ROBOT_PREFIX + id;\n                    r.scale.set(scene_scale, scene_scale, scene_scale);\n                    r.position.set(x, y, 0);\n                    r.rotation.x = 90 * THREE.Math.DEG2RAD;\n                    r.rotation.y = (heading - 90) * THREE.Math.DEG2RAD;\n                    r.reality = reality; // set reality flag\n                    // TODO: @NuwanJ Please review this reality integration.\n                    // Reality toggler is now updated so that every obstacle/robot material should be transparent and depending on the reality selected, we can now change opacity properly.\n                    // If the transparent property not set to true, opacity change will not reflect correctly.\n                    // Refer: https://threejs.org/docs/index.html#api/en/materials/Material.opacity\n                    if (reality === 'V') {\n                        // material.visible = Config.selectedRealities.virtual;\n                        material.opacity = Config.selectedRealities.virtual ? 1.0 : 0.125;\n                    } else if (reality === 'P') {\n                        // material.visible = Config.selectedRealities.physical;\n                        material.opacity = Config.selectedRealities.virtual ? 1.0 : 0.125;\n                    }\n\n                    // Add robot to the scene\n                    window.scene.add(r);\n\n                    r.clickEvent = function (m) {\n                        window.robot.alert(m);\n                    };\n\n                    // Add labels to every robot, immediately displayed if enabled\n                    addLabel(ROBOT_PREFIX, { id }, r, Config.labelsVisibility.robots);\n\n                    console.log(`Created> Robot: id:${id} | x:${x} y: ${y} heading: ${heading} | reality: ${reality}`);\n\n                    // Callback function\n                    if (callback != undefined) callback('success');\n                });\n            } else {\n                console.error(`Creation Failed> Robot: id:${id}  reality: ${reality}!=${REALITY}`);\n            }\n        } else if (reality === REALITY || REALITY === 'M') {\n            // Reality matches\n\n            this.setReality(id, reality);\n            this.move(id, x, y, heading, () => {\n                if (callback != undefined) callback('already defined, so moved');\n            });\n        } else {\n            // Robot reality not matching with environment reality\n            this.delete(id);\n        }\n        return r;\n    }\n\n    delete(id, callback) {\n        if (id != undefined) {\n            var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n\n            if (r != undefined) {\n                scene.remove(r);\n                console.log('Deleted> id:', id);\n                if (callback != undefined) callback('success');\n            } else if (callback != undefined) callback('not found');\n        } else if (callback != undefined) callback('id not specified');\n    }\n\n    deleteAll() {\n        // Delete all robots\n        const objects = this.scene.children;\n\n        Object.entries(objects).forEach((obj) => {\n            const name = obj[1]['name'];\n\n            if (name.startsWith(ROBOT_PREFIX)) {\n                console.log('Deleted>', name);\n                removeLabel(obj[1]);\n                this.scene.remove(obj[1]);\n            }\n        });\n    }\n\n    setReality(id, reality) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            r.reality = reality;\n        }\n    }\n    exists(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        return r;\n    }\n\n    move(id, x, y, heading, callback) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            const currentHeading = r.rotation.y;\n            const newHeading = (heading - 90) * THREE.Math.DEG2RAD;\n            var position = { x: r.position.x, y: r.position.y, heading: r.rotation.y };\n\n            // TODO: need a smoother way than this rough trick\n            // If current and target rotations in different signs\n            const rotationFlag = currentHeading * newHeading >= 0 ? true : false;\n\n            // Limit the arena that robot can go\n            x = scene_scale * Math.min(Math.max(Math.round(x * 10) / 10, Config.arena.minX), Config.arena.maxX);\n            y = scene_scale * Math.min(Math.max(Math.round(y * 10) / 10, Config.arena.minY), Config.arena.maxY);\n            heading = Math.round(heading * 10) / 10;\n\n            // const speed = 10;\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n\n            const moveTime = 1; //distance / speed;\n            // TODO: If distance is 0, need to handle only the rotation\n\n            if (distance != 0) {\n                var tween = new TWEEN.Tween(position)\n                    .to({ x: x, y: y, heading: newHeading }, 1000 * moveTime)\n                    /*.easing(TWEEN.Easing.Quartic.InOut)*/\n                    .onUpdate(function () {\n                        r.position.x = position.x;\n                        r.position.y = position.y;\n\n                        if (rotationFlag) {\n                            r.rotation.y = position.heading;\n                        } else {\n                            //console.log(currentHeading, newHeading);\n                        }\n                    })\n                    .onComplete(() => {\n                        //console.log('Moved> id:',id,'x:',x,'y:',y,'heading:',heading);\n                        r.rotation.y = position.heading;\n                        if (callback != null) callback('success');\n                    })\n                    .delay(50)\n                    .start();\n            } else {\n                // No move, only the rotation\n                r.rotation.y = newHeading;\n            }\n            return r;\n        }\n        if (callback != null) callback('undefined');\n    }\n\n    get_coordinates(id) {\n        var r = this.scene.getObjectByName(ROBOT_PREFIX + id);\n        if (r != undefined) {\n            console.log(`${r.position.x},${r.position.y},${r.position.z}`);\n            return r;\n        }\n        return null;\n    }\n\n    update() {\n        TWEEN.update();\n    }\n\n    requestSnapshot(mesh) {\n        return new Promise((resolve, reject) => {\n            const req = window.mqtt.publish(\n                window.channel + '/mgt/robots/snapshot',\n                JSON.stringify({ id: mesh.robotId })\n            );\n            resolve(!req);\n        });\n    }\n\n    alert(mesh) {\n        // Display an alert on window\n        const disp = document.querySelector('#msg-box');\n        const prevContent = document.getElementById('msg-content');\n        let content = document.createElement('div');\n        content.setAttribute('id', 'msg-content');\n        let nodeContent;\n        if (Config.isShowingRobotSnapshots) {\n            nodeContent = document.createTextNode(`${mesh.name} Snapshot Loading...`);\n            this.requestSnapshot(mesh);\n        } else {\n            nodeContent = document.createTextNode(`${mesh.name}`);\n        }\n        content.appendChild(nodeContent);\n        disp.replaceChild(content, prevContent);\n        disp.style.display = 'block';\n        setTimeout(function () {\n            disp.style.opacity = '1.0';\n            disp.style.display = 'none';\n        }, 10000);\n    }\n}\n","function getUrlVars() {\n    var vars = {};\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    return vars;\n}\n\nfunction getUrlParam(parameter, defaultvalue) {\n    var urlparameter = defaultvalue;\n    if (window.location.href.indexOf(parameter) > -1) {\n        urlparameter = getUrlVars()[parameter];\n    }\n    return urlparameter;\n}\n\nexport function getCredentials() {\n    const storedCredentials = localStorage.getItem(document.location.href.split('?')[0] + '.credentials');\n    const username = getUrlParam('username', false);\n    const password = getUrlParam('password', false);\n    if (username === false && password === false && storedCredentials !== null) {\n        return JSON.parse(storedCredentials);\n    } else if (username !== false && password !== false) {\n        localStorage.setItem(\n            document.location.href.split('?')[0] + '.credentials',\n            JSON.stringify({\n                username,\n                password\n            })\n        );\n        return {\n            username,\n            password\n        };\n        // TODO: @NuwanJ please review this\n        // Manually returen this for now, we need to discuss the unauthorized verison handling part\n        // For now an alert will pop up.\n        // } else if (storedCredentials === null) {\n        //     return {\n        //         username: 'swarm_user',\n        //         password: 'swarm_usere15'\n        //     };\n    } else {\n        return -1;\n    }\n}\n","import * as THREE from 'three';\nimport TWEEN, { update } from '@tweenjs/tween.js';\nimport MQTT from 'paho-mqtt';\n\nimport Config from '../../data/config';\nimport Obstacle from '../components/obstacle';\nimport Robot from '../components/robot';\nimport { getCredentials } from '../helpers/urlHelper';\n\n// -----------------------------------------------------------------------------\n// MQTT Topics\n\n// Create and delete robot objects\nconst TOPIC_ROBOT_CREATE = 'robot/create';\nconst TOPIC_ROBOT_DELETE = 'robot/delete';\nconst TOPIC_ROBOT_BROADCAST = 'robot/msg/broadcast';\n\n// This will provide location data to the GUI\nconst TOPIC_LOC_INFO_FROM_SERVER = 'localization/data';\nconst TOPIC_LOC_INFO_FROM_LOC_SYSTEMS = 'localization/update';\n\n// This will request the localization data update from the server\nconst TOPIC_LOC_REQUEST = 'localization/data/?';\n\n// This will request obstacle data from the server\nconst TOPIC_OBSTACLE_REQUEST = 'obstacles/?';\n\n// This will send obstacle data as a JSON list\nconst TOPIC_OBSTACLES_LIST = 'obstacles';\nconst TOPIC_OBSTACLES_DELETE = 'obstacles/delete';\nconst TOPIC_OBSTACLES_DELETE_ALL = 'obstacles/delete/all';\n\n// Robot Color - NeoPixel\nconst TOPIC_CHANGE_COLOR = 'output/neopixel';\n\n// This will help to remote update the parameters in here\nconst TOPIC_MANAGEMENT_VISUALIZER = 'mgt/visualizer';\n\n// Robot management snapshot topic\nconst TOPIC_MANAGEMENT_SNAPSHOT = 'mgt/robots/?';\n\n// -----------------------------------------------------------------------------\n\nexport default class MQTTClient {\n    constructor(scene) {\n        this.scene = scene;\n        this.robot = new Robot(scene);\n        this.obstacles = new Obstacle(scene);\n\n        this.updateChannel();\n        const credentials = getCredentials();\n\n        if (credentials === -1) {\n            alert('Unauthorized access! The Visualizer will not work properly.');\n        } else {\n            const { username, password } = credentials;\n            // create a random client Id\n            const client_id = 'client_' + Math.random().toString(36).substring(2, 15);\n            this.client = new MQTT.Client(Config.mqtt.server, Config.mqtt.port, Config.mqtt.path, client_id);\n\n            window.mqtt = this.client;\n\n            this.client.connect({\n                userName: username,\n                password: password,\n                reconnect: true,\n                useSSL: true,\n                cleanSession: false,\n                onSuccess: () => {\n                    console.log('MQTT: connected');\n\n                    // Subscribe to topics\n                    this.subscribe(TOPIC_LOC_INFO_FROM_SERVER);\n                    this.subscribe(TOPIC_LOC_INFO_FROM_LOC_SYSTEMS);\n\n                    this.subscribe(TOPIC_ROBOT_CREATE);\n                    this.subscribe(TOPIC_ROBOT_DELETE);\n                    this.subscribe(TOPIC_ROBOT_BROADCAST);\n\n                    this.subscribe(TOPIC_CHANGE_COLOR);\n                    this.subscribe(TOPIC_OBSTACLES_LIST);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE);\n                    this.subscribe(TOPIC_OBSTACLES_DELETE_ALL);\n                    this.subscribe(TOPIC_MANAGEMENT_VISUALIZER);\n                    this.subscribe(TOPIC_MANAGEMENT_SNAPSHOT);\n\n                    // Request for obstacle data\n                    // this.publish(TOPIC_OBSTACLE_REQUEST, Config.mixedReality.obstacles);\n                    this.publish(TOPIC_OBSTACLE_REQUEST, 'M');\n\n                    // Request for coordinate data\n                    this.publish(TOPIC_LOC_REQUEST, Config.mixedReality.robots);\n\n                    // Access globally\n                    window.robot = this.robot;\n                    window.obstacles = this.obstacles;\n\n                    this.client.onMessageArrived = this.onMessageArrived;\n                    this.client.onConnectionLost = this.onConnectionLost;\n                },\n                onFailure: () => {\n                    console.log('MQTT: connection failed');\n                    alert('MQTT: connection failed!');\n                }\n            });\n        }\n    }\n\n    updateChannel() {\n        const channelHash = window.location.hash;\n        if ((channelHash != '') & (channelHash.length > 1)) {\n            // window.channel = channelHash.substring(1);\n            window.channel = channelHash.split('#')[1].split('?')[0];\n        } else {\n            window.channel = Config.mqtt.channel;\n        }\n        console.log('MQTT: channel=', window.channel, channelHash);\n        return true;\n    }\n\n    onConnectionLost(responseObject) {\n        if (responseObject.errorCode !== 0) {\n            console.log('MQTT: onConnectionLost:' + responseObject.errorMessage);\n            console.log('MQTT: reconnecting');\n        }\n    }\n\n    onMessageArrived(packet) {\n        const msg = packet.payloadString.trim();\n        const t = packet.destinationName;\n        const topic = t.substring(t.indexOf('/') + 1);\n\n        console.log('MQTT: ' + topic + ' > ' + msg);\n\n        if (topic == TOPIC_ROBOT_CREATE) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.create(data.id, data.x, data.y, data.heading, data.reality);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_DELETE) {\n            try {\n                var data = JSON.parse(msg);\n                window.robot.delete(data.id);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_LOC_INFO_FROM_LOC_SYSTEMS || topic == TOPIC_LOC_INFO_FROM_SERVER) {\n            //Data from the localization server or virtual robots\n            try {\n                const data = JSON.parse(msg);\n                const REALITY = Config.mixedReality.robots;\n\n                // Render only the received data is same as configured reality\n                // or configuration allowed mixed reality\n                if (data != undefined) {\n                    // Have data on this reality\n                    for (const i in data) {\n                        const { id, x, y, heading } = data[i];\n                        const reality = data[i].reality == undefined ? 'V' : data[i].reality;\n\n                        if (reality === REALITY || REALITY === 'M') {\n                            // Create only if robots match with platform's allowed reality\n                            if (window.robot.exists(id) == undefined) {\n                                window.robot.create(id, x, y, heading, reality);\n                            } else {\n                                window.robot.move(id, x, y, heading);\n                                window.robot.setReality(id, reality);\n                            }\n                        } else {\n                            // reality not matching; remove\n                            robot.delete(id);\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_LIST) {\n            // Create obstacles in the arena\n            try {\n                const data = JSON.parse(msg);\n                window.obstacles.createList(data);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_OBSTACLES_DELETE) {\n            // Delete obstacle given in the id\n            const data = JSON.parse(msg);\n            console.log(data);\n\n            window.obstacles.deleteIfExists(data.id);\n        } else if (topic == TOPIC_OBSTACLES_DELETE_ALL) {\n            // Delete all obstacles\n            window.obstacles.deleteAll();\n        } else if (topic == TOPIC_CHANGE_COLOR) {\n            try {\n                const data = JSON.parse(msg);\n                window.robot.changeColor(data.id, data.R, data.G, data.B, data.ambient);\n            } catch (e) {\n                console.error(e);\n            }\n        } else if (topic == TOPIC_ROBOT_BROADCAST) {\n            // Display a popup message\n            // TODO: Do this by a generalized function call\n\n            if (msg != 'ID? -1') {\n                const m = 'Broadcast Message: ' + msg.split(' ')[0];\n                const t = 1000 + msg.length * 95;\n\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_VISUALIZER) {\n            if (msg === 'REFRESH') {\n                console.log('page refresh request');\n                location.reload();\n            } else if (msg.startsWith('MSG')) {\n                const m = 'Notice: ' + msg.substring(4);\n                const t = 2000 + m.length * 95;\n\n                // Display a popup message\n                // TODO: Do this by a generalized function call\n                const disp = document.querySelector('#msg-box');\n                disp.innerHTML = m;\n                disp.style.display = 'block';\n\n                setTimeout(function () {\n                    document.querySelector('#msg-box').style.display = 'none';\n                }, t);\n            } else {\n                console.log('>Management:', msg);\n            }\n        } else if (topic == TOPIC_MANAGEMENT_SNAPSHOT) {\n            const snapshot = JSON.parse(msg);\n            console.log('Robot:Snapshot', snapshot);\n            if (snapshot !== -1) {\n                let i = 0,\n                    subElement;\n                const disp = document.querySelector('#msg-box');\n                const prevContent = document.getElementById('msg-content');\n                let content = document.createElement('div');\n                content.setAttribute('id', 'msg-content');\n                const titleElement = document.createElement('h3');\n                titleElement.textContent = `Robot [${snapshot.id}] Snapshot`;\n                content.appendChild(titleElement);\n                for (const variable in snapshot) {\n                    if (Object.prototype.hasOwnProperty.call(snapshot, variable)) {\n                        if (i === 0) {\n                            subElement = document.createElement('h4');\n                        } else {\n                            subElement = document.createElement('p');\n                        }\n                        if (variable === 'data') {\n                            for (const [key, value] of Object.entries(snapshot.data)) {\n                                subElement.textContent = `${key}: ${value}`;\n                            }\n                        } else {\n                            subElement.textContent = `${variable}: ${JSON.stringify(snapshot[variable])}`;\n                        }\n                        content.appendChild(subElement);\n                        i += 1;\n                    }\n                }\n                disp.replaceChild(content, prevContent);\n                disp.style.display = 'block';\n                disp.style.opacity = '0.5';\n                setTimeout(function () {\n                    disp.style.opacity = '1.0';\n                    disp.style.display = 'none';\n                }, 6000);\n            }\n        }\n    }\n\n    subscribe(topic, callback) {\n        const subTopic = window.channel + '/' + topic;\n        this.client.subscribe(subTopic);\n        console.log('MQTT: subscribed', subTopic);\n        if (callback != null) callback();\n    }\n\n    publish(topic, message, callback) {\n        var payload = new MQTT.Message(message);\n        const pubTopic = window.channel + '/' + topic;\n        payload.destinationName = pubTopic;\n        this.client.send(payload);\n        console.log('MQTT: published', pubTopic);\n\n        if (callback != null) callback();\n    }\n}\n","// Global imports -\nimport * as THREE from 'three';\n\nimport TWEEN, { update } from '@tweenjs/tween.js';\n\n// Components\nimport Renderer from './components/renderer';\nimport label from './components/label';\nimport Camera from './components/camera';\nimport Light from './components/light';\nimport Controls from './components/controls';\nimport Geometry from './components/geometry';\nimport Environment from './components/environment';\n\n// Helpers\nimport MeshHelper from './helpers/meshHelper';\n\n// Model\nimport Texture from './model/texture';\nimport Model from './model/model';\n\n// Managers\nimport Interaction from './managers/interaction';\nimport DatGUI from './managers/datGUI';\n\n// Newly implemented classes\nimport MQTTClient from './managers/mqttClient';\n\n// Config data\nimport Config from './../data/config';\n\n// STLLoader\nconst STLLoader = require('three-stl-loader')(THREE);\n\n// Global Variables\nlet camera, labelRenderer, INTERSECTED, selectedLabel;\n\n// For click event on robots\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\nexport default class Main {\n    constructor(container) {\n        // Set container property to container element\n        this.container = container;\n\n        // Start Three clock\n        this.clock = new THREE.Clock();\n\n        // Main scene creation\n        this.scene = new THREE.Scene();\n        window.scene = this.scene; // config as a global variable\n        window.scene_scale = Config.scale;\n        // High level reality flag\n        window.selectedReality = Config.selectedReality;\n\n        this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\n\n        this.mqtt = new MQTTClient(this.scene);\n\n        // Get Device Pixel Ratio first for retina\n        if (window.devicePixelRatio) {\n            Config.dpr = window.devicePixelRatio;\n        }\n\n        // Main renderer constructor\n        this.renderer = new Renderer(this.scene, container);\n\n        // Components instantiations\n        camera = new Camera(this.renderer.threeRenderer);\n        this.controls = new Controls(camera.threeCamera, container);\n        this.light = new Light(this.scene);\n        this.camera = camera;\n        // Create and place lights in scene\n        const lights = ['ambient', 'directional', 'point', 'hemi'];\n        lights.forEach((light) => this.light.place(light));\n\n        // Set up Stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats = new Stats();\n            this.container.appendChild(this.stats.dom);\n        }\n\n        if (Config.isShowingLables) {\n            this.labelRenderer = label();\n            this.container.appendChild(this.labelRenderer.domElement);\n        }\n\n        // Set up gui\n        if (Config.isDev) {\n            this.gui = new DatGUI(this);\n        }\n\n        // Instantiate texture class\n        this.texture = new Texture();\n\n        // Start loading the textures and then go on to load the model after the texture Promises have resolved\n        this.texture.load().then(() => {\n            this.manager = new THREE.LoadingManager();\n\n            // Create the environment ---------------------------------------------\n            this.environment = new Environment();\n\n            // -----------------------------------------------------------------\n\n            if (Config.isDev) {\n                // this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n                //\n                // if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                this.gui.load(this);\n                this.gui.show();\n            }\n            // -----------------------------------------------------------------\n\n            // onProgress callback\n            this.manager.onProgress = (item, loaded, total) => {\n                console.log(`${item}: ${loaded} ${total}`);\n            };\n\n            // All loaders done now\n            this.manager.onLoad = () => {\n                // alert('Loaded');\n                console.log('Loading complete!');\n\n                // Set up interaction manager with the app now that the model is finished loading\n                new Interaction(\n                    this.renderer.threeRenderer,\n                    this.scene,\n                    camera.threeCamera,\n                    this.controls.threeControls\n                );\n\n                // Add dat.GUI controls if dev\n                if (Config.isDev) {\n                    this.meshHelper = new MeshHelper(this.scene, this.model.obj);\n\n                    if (Config.mesh.enableHelper) this.meshHelper.enable();\n\n                    // this.gui.load(this, this.model.obj);\n                    // this.gui.show();\n                }\n\n                // Everything is now fully loaded\n                Config.isLoaded = true;\n                this.container.querySelector('#loading').style.display = 'none';\n            };\n        });\n\n        // Start render which does not wait for model fully loaded\n\n        this.render();\n        this.container.querySelector('#loading').style.display = 'none';\n\n        // Eventlistner for catching mouse click events\n        window.addEventListener('click', this.onDocumentMouseDown, false);\n        // Eventlistner for catching mouse move events\n        // document.addEventListener('mousemove', this.onDocumentMouseMove);\n    }\n\n    onDocumentMouseDown(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children);\n        if (intersects.length > 0) {\n            const object = intersects[0].object;\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n            INTERSECTED = object;\n            selectedLabel = INTERSECTED.children[0];\n            INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n            INTERSECTED.labelsVisibility = INTERSECTED.material.labelVisibility;\n            if (selectedLabel !== undefined && selectedLabel.visible !== undefined && Config.isShowingLables) {\n                selectedLabel.visible = !selectedLabel.visible;\n            }\n            INTERSECTED.material.selected = !INTERSECTED.material.selected;\n            // Obstacle selection event handling\n            if (INTERSECTED.name.startsWith('Obstacle')) {\n                if (INTERSECTED.material.selected) {\n                    INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\n                    INTERSECTED.material.emissive.setHex(0xf95f4a);\n                } else {\n                    INTERSECTED.currentHex = INTERSECTED.material.userData.originalEmmisive;\n                    INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex);\n                }\n                // Robot selection event handling\n            } else if (INTERSECTED.name.startsWith('Robot')) {\n                if (INTERSECTED.material.selected) {\n                    INTERSECTED.material.setValues({ opacity: 0.5 });\n                } else {\n                    INTERSECTED.material.setValues({ opacity: 1 });\n                }\n                if (INTERSECTED.clickEvent !== undefined) {\n                    INTERSECTED.clickEvent(INTERSECTED);\n                }\n            }\n        } else {\n            if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n            INTERSECTED = null;\n        }\n    }\n\n    onDocumentMouseMove(event) {\n        event.preventDefault();\n\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n        raycaster.setFromCamera(mouse, camera.threeCamera);\n\n        const intersects = raycaster.intersectObjects(scene.children, true);\n        if (intersects.length > 0) {\n            const object = intersects[0].object;\n            if (INTERSECTED !== object) {\n                if (INTERSECTED) INTERSECTED.material.setValues({ opacity: INTERSECTED.currentOpacity });\n                INTERSECTED = object;\n                selectedLabel = INTERSECTED.children[0];\n                INTERSECTED.currentOpacity = INTERSECTED.material.opacity;\n                INTERSECTED.currentColor = INTERSECTED.material.opacity;\n                INTERSECTED.material.setValues({ color: 0x03dffc, opacity: 0.75 });\n            }\n        } else {\n            if (INTERSECTED)\n                INTERSECTED.material.setValues({ opacity: 1.0, color: INTERSECTED.material.userData.originalColor });\n            INTERSECTED = null;\n        }\n    }\n\n    render() {\n        // Call render function and pass in created scene and camera\n        this.renderer.render(this.scene, camera.threeCamera);\n\n        // render labels if enabled\n        if (Config.isShowingLables) {\n            this.labelRenderer.domElement.hidden = false;\n        } else {\n            this.labelRenderer.domElement.hidden = true;\n        }\n        this.labelRenderer.render(this.scene, camera.threeCamera);\n\n        // Delta time is sometimes needed for certain updates\n        //const delta = this.clock.getDelta();\n\n        // Call any vendor or module frame updates here\n        TWEEN.update();\n        this.controls.threeControls.update();\n\n        camera.threeCamera.updateMatrixWorld();\n\n        // update stats if dev environment\n        if (Config.isDev && Config.isShowingStats) {\n            this.stats.update();\n        }\n\n        // RAF\n        requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\n    }\n}\n","import Config from './data/config';\nimport Detector from './utils/detector';\nimport Main from './app/main';\n\n// Styles\nimport './../css/app.scss';\n// Check environment and set the Config helper\nif (__ENV__ === 'dev') {\n    console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\n    Config.isDev = true;\n}\n\nfunction init() {\n    // Check for webGL capabilities\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n    } else {\n        const container = document.getElementById('appContainer');\n        new Main(container);\n    }\n}\n\ninit();\n"],"sourceRoot":""}